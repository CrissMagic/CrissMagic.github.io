<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Pulsar Debezium CDC同步经验</title>
      <link href="2022/03/01/debezium-shi-yong-jing-yan/"/>
      <url>2022/03/01/debezium-shi-yong-jing-yan/</url>
      
        <content type="html"><![CDATA[<h1 id="Pulsar-Debezium-CDC同步经验"><a href="#Pulsar-Debezium-CDC同步经验" class="headerlink" title="Pulsar Debezium CDC同步经验"></a>Pulsar Debezium CDC同步经验</h1><p>本文主要介绍<code>Debezium</code>使用过程中遇到的问题及处理方式。</p><ol><li><p>源表的结构改动<br>由于业务迭代过程中源表的结构变动较大，故每次需要对<code>schema</code>进行更新<br><code>pulsar source</code> 会将<code>schema</code>存放在<code>zk</code>中，所以每次迭代时，若<code>schema</code>发生变化则必须清除<code>zk</code>中对应的<code>schema</code>信息<br>具体方式为：</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux"># 进入zk$&#123;pulsar安装路径&#125;&#x2F;bin&#x2F;pulsar zookeeper-shell# 可以查询有哪些schemals &#x2F;schemas&#x2F;$&#123;tenante&#125;&#x2F;$&#123;namespace&#125;# 删除topic对应的schemadelete &#x2F;schemas&#x2F;$&#123;tenante&#125;&#x2F;$&#123;namespace&#125;&#x2F;$&#123;topic&#125;# 或者删除全部deleteall &#x2F;schemas&#x2F;$&#123;tenante&#125;&#x2F;$&#123;namespace&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>删除之后若该表发生了数据更改变动则会将新的<code>schema</code>重新更新进来<br>删除<code>schema</code>之前建议先停止<code>source</code></p></li><li><p><code>source</code>异常停止<br>由于服务器关闭或者内存等原因导致<code>source</code>发生异常报错，并停止，该情况下只要对应的<code>offset</code>和<code>wal</code>预写日志未丢失则可以先<code>stop</code>再<code>start</code>即可恢复正常<br>所以对于<code>wal</code>日志需要做好归档，或者保留时间稍微设长一点，并且一定要做好偏移量的监控，一旦报警需要及时处理。如何监控偏移量可以参考其他博文<br>有时候会莫名出现<code>source</code>未报错但不再推送消息到<code>pulsar</code>的情况，目前尚未找到具体原因，只能依靠偏移量的监听。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Pulsar </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pulsar </tag>
            
            <tag> Debezium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pulsar Debezium同步PgSQL数据</title>
      <link href="2022/02/28/pulsar-debezium-lian-jie-pgsql/"/>
      <url>2022/02/28/pulsar-debezium-lian-jie-pgsql/</url>
      
        <content type="html"><![CDATA[<h1 id="Pulsar-Debezium同步PgSQL数据"><a href="#Pulsar-Debezium同步PgSQL数据" class="headerlink" title="Pulsar Debezium同步PgSQL数据"></a>Pulsar Debezium同步PgSQL数据</h1><p>好久不见，目前正在打造公司这边的数据同步方案，在CDC这边积累了一些经验，后续几篇将做个介绍。本文主要介绍如何使用Debezium连接到PG数据库。<br>当前Debezium使用分为以下几种方式：</p><ol><li>Pulsar IO Source Connector - 使用Pulsar IO的Source进行连接，Pulsar对Debezium的包做了封装，是本文主要介绍的方式。</li><li>Kafka Connector - 同1，只不过MQ换为了Kafka，相对于Pulsar，Kafka在对接方面会更适配，Debezium最初的开发也是对接的Kafka。</li><li>Debezium Server - 直接在服务器安装Debezium的服务，Sink可根据配置发送到不同的MQ或者NO SQL</li><li>Debezium API - 使用Debezium提供的API手动创建复制槽，缺点是需要手动控制的东西比较多</li></ol><h2 id="安装Pulsar（本地或者集群）"><a href="#安装Pulsar（本地或者集群）" class="headerlink" title="安装Pulsar（本地或者集群）"></a>安装Pulsar（本地或者集群）</h2><p>此步骤参考对应的文档即可，注意，PG本身需要修改复制等级、host等配置，此部分参考官方文档即可。</p><h2 id="Debezium相关下载与配置"><a href="#Debezium相关下载与配置" class="headerlink" title="Debezium相关下载与配置"></a>Debezium相关下载与配置</h2><p>主要关键文件有3个</p><ol><li>Debezium PostgreSQL CDC source<br><a href="https://pulsar.apache.org/zh-CN/download/">官方下载地址</a><br>下载的nar包统一放在<code>$&#123;pulsar安装目录&#125;/connectors</code>下</li><li>Source 配置<br>目前习惯放在<code>$&#123;pulsar安装目录&#125;/conf/functions/$&#123;当前环境，如dev、test、prod&#125;/cdc/source</code>目录下。目前没有使用sink，所以会少一级目录<br>使用yaml格式配置，Debezium所需要的配置<br><a href="https://debezium.io/documentation/reference/1.5/connectors/postgresql.html#postgresql-example-configuration">官方配置</a></li><li>启动脚本。主要是便于管理Source<br>目前习惯放在<code>~/workspace/pulsar/cdc/$&#123;当前环境&#125;</code>目录下，主要是对<code>Source</code>的创建、删除、更新、状态查看、暂停、启动<br>目前基本统一，只需要根据实际情况更改脚本前面的变量<br>完成配置后可以直接<code>sh 脚本.sh create</code>启动，注意，<code>status</code>查看时会打印出该<code>Source</code>的日志服务器<code>host</code>，可在对应服务器上的<code>$&#123;pulsar安装目录&#125;/logs/functions/</code>目录查看日志信息</li></ol><h2 id="Pulsar-Source配置"><a href="#Pulsar-Source配置" class="headerlink" title="Pulsar Source配置"></a>Pulsar Source配置</h2><p>以下为配置的介绍</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">## 租户信息</span><span class="token key atrule">tenant</span><span class="token punctuation">:</span> <span class="token string">"tenant"</span><span class="token comment">## 命名空间</span><span class="token key atrule">namespace</span><span class="token punctuation">:</span> <span class="token string">"namespace"</span><span class="token comment">## source name</span><span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"source-new"</span><span class="token comment">## 整体信息的Topic</span><span class="token key atrule">topicName</span><span class="token punctuation">:</span> <span class="token string">"public/default/cdc-topic"</span><span class="token comment">## nar包位置</span><span class="token key atrule">archive</span><span class="token punctuation">:</span> <span class="token string">"connectors/pulsar-io-debezium-postgres-2.7.3.nar"</span><span class="token comment">## 并发数</span><span class="token key atrule">parallelism</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token comment">## java运行参数，该配置限制Source内存使用</span><span class="token key atrule">runtimeFlags</span><span class="token punctuation">:</span> <span class="token string">"-Xms128M -Xmx256M -XX:MaxDirectMemorySize=256m"</span><span class="token key atrule">configs</span><span class="token punctuation">:</span>    <span class="token comment">## 数据库连接配置</span>    <span class="token key atrule">database.hostname</span><span class="token punctuation">:</span> <span class="token string">"hostname"</span>    <span class="token key atrule">database.port</span><span class="token punctuation">:</span> <span class="token string">"5432"</span>    <span class="token key atrule">database.user</span><span class="token punctuation">:</span> <span class="token string">"username"</span>    <span class="token key atrule">database.password</span><span class="token punctuation">:</span> <span class="token string">"password"</span>    <span class="token key atrule">database.server.name</span><span class="token punctuation">:</span> <span class="token string">"server_name"</span>    <span class="token key atrule">database.dbname</span><span class="token punctuation">:</span> <span class="token string">"dbname"</span>    <span class="token comment">## 设置发布名称，建议根据实际情况配置，并添加cdc相关信息，方便监控时看到使用的程序</span>    <span class="token key atrule">publication.name</span><span class="token punctuation">:</span> <span class="token string">"cdc_dbname"</span>     <span class="token comment">## 配置复制槽名称，建议根据实际情况配置，并添加cdc相关信息，方便监控时看到使用的程序</span>    <span class="token key atrule">slot.name</span><span class="token punctuation">:</span> <span class="token string">"cdc_dbname"</span>    <span class="token comment">## 设置需要同步的schema</span>    <span class="token key atrule">schema.include.list</span><span class="token punctuation">:</span> <span class="token string">"db_schema"</span>    <span class="token comment">## 设置需要同步的表，,分隔，必须包含schema信息</span>    <span class="token key atrule">table.include.list</span><span class="token punctuation">:</span> <span class="token string">"db_schema.table1,db_schema.table2"</span>    <span class="token comment">## Pulsar Config</span>    <span class="token key atrule">pulsar.service.url</span><span class="token punctuation">:</span> <span class="token string">"pulsar://pulsarUrl:6650"</span>    <span class="token comment">## History相关设置</span>    <span class="token key atrule">database.history</span><span class="token punctuation">:</span> <span class="token string">"org.apache.pulsar.io.debezium.PulsarDatabaseHistory"</span>    <span class="token key atrule">database.history.pulsar.topic</span><span class="token punctuation">:</span> <span class="token string">"public/default/__dbname-history"</span>    <span class="token key atrule">database.history.pulsar.service.url</span><span class="token punctuation">:</span> <span class="token string">"pulsar://pulsarUrl:6650"</span>    <span class="token comment">## offset设置，注意，一般情况下history、offset、topic这三个Topic不要删除，否则会导致偏移量丢失</span>    <span class="token key atrule">offset.storage.topic</span><span class="token punctuation">:</span> <span class="token string">"public/default/__dbname-offset"</span>    <span class="token comment">## 其他debezium配置</span>    <span class="token comment">## 使用pgoutput插件</span>    <span class="token key atrule">plugin.name</span><span class="token punctuation">:</span> <span class="token string">"pgoutput"</span>    <span class="token comment">## 快照生成策略，默认为`initial`，看情况选择`always`或者`initial_only`，具体描述参考官方文档</span>    <span class="token key atrule">snapshot.mode</span><span class="token punctuation">:</span> <span class="token string">"always"</span>    <span class="token comment">## 监听间隔，默认1秒</span>    <span class="token key atrule">poll.interval.ms</span><span class="token punctuation">:</span> <span class="token number">1000</span>    <span class="token comment">## 心跳监测间隔，默认关闭，目前设置为30秒</span>    <span class="token key atrule">heartbeat.interval.ms</span><span class="token punctuation">:</span> <span class="token number">30000</span>    <span class="token comment">## 心跳表插入，用于防止表数据不发生变化时WAL过大，当前场景不需要</span>    <span class="token comment">#heartbeat.action.query: 'INSERT INTO "public"."debezium_heartbeat"(time) values(extract(epoch from current_timestamp)::int);'</span>    <span class="token comment">## 控制decimal取值</span>    <span class="token key atrule">decimal.handling.mode</span><span class="token punctuation">:</span> <span class="token string">"string"</span>    <span class="token comment">## 设置时间格式</span>    <span class="token key atrule">time.democision.mode</span><span class="token punctuation">:</span> <span class="token string">"connect"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="管理脚本"><a href="#管理脚本" class="headerlink" title="管理脚本"></a>管理脚本</h2><p>以下为管理脚本的示例，可根据自身情况修改，注意要和上面的配置文件对应！</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#!&#x2F;bin&#x2F;bashTENANTS&#x3D;tenantNAMESPACE&#x3D;namespaceSOURCE_NAME&#x3D;source-nameCONFIG_FILENAME&#x3D;demo&#x2F;cdc-pgsql-config.ymlPULSAR_PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;apache-pulsarstatus() &#123;  cd $PULSAR_PATH  echo &quot;查看CDC Connector: &quot;$SOURCE_NAME  .&#x2F;bin&#x2F;pulsar-admin source status --name $SOURCE_NAME --tenant $TENANTS --namespace $NAMESPACE&#125;stop() &#123;  cd $PULSAR_PATH  echo &quot;停止CDC Connector: &quot;$SOURCE_NAME  .&#x2F;bin&#x2F;pulsar-admin source stop --name $SOURCE_NAME --tenant $TENANTS --namespace $NAMESPACE&#125;start() &#123;    cd $PULSAR_PATH  echo &quot;开始CDC Connector: &quot;$SOURCE_NAME  .&#x2F;bin&#x2F;pulsar-admin source start --name $SOURCE_NAME --tenant $TENANTS --namespace $NAMESPACE&#125;restart() &#123;    cd $PULSAR_PATH  echo &quot;重启CDC Connector: &quot;$SOURCE_NAME  .&#x2F;bin&#x2F;pulsar-admin source restart --name $SOURCE_NAME --tenant $TENANTS --namespace $NAMESPACE&#125;create() &#123;    cd $PULSAR_PATH  echo &quot;创建CDC Connector: &quot;$SOURCE_NAME  .&#x2F;bin&#x2F;pulsar-admin source create --source-config-file .&#x2F;conf&#x2F;functions&#x2F;$CONFIG_FILENAME  echo &quot;当前topic如下&quot;  .&#x2F;bin&#x2F;pulsar-admin topics list $TENANTS&#x2F;$NAMESPACE&#125;update() &#123;    cd $PULSAR_PATH  echo &quot;更新CDC Connector: &quot;$SOURCE_NAME  .&#x2F;bin&#x2F;pulsar-admin source update --name $SOURCE_NAME --tenant $TENANTS --namespace $NAMESPACE --source-config-file .&#x2F;conf&#x2F;functions&#x2F;$CONFIG_FILENAME  echo &quot;当前topic如下&quot;  .&#x2F;bin&#x2F;pulsar-admin topics list $TENANTS&#x2F;$NAMESPACE&#125;delete() &#123;    cd $PULSAR_PATH  echo &quot;删除CDC Connector: &quot;$SOURCE_NAME  .&#x2F;bin&#x2F;pulsar-admin source delete --name $SOURCE_NAME --tenant $TENANTS --namespace $NAMESPACE&#125;case $1 instatus)        status;;stop)        stop;;start)        start;;restart)        restart;;create)        create;;update)        update;;delete)        delete;;esac<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Pulsar </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pulsar </tag>
            
            <tag> Debezium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7安装使用htop</title>
      <link href="2021/07/08/centos7-an-zhuang-shi-yong-htop/"/>
      <url>2021/07/08/centos7-an-zhuang-shi-yong-htop/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS7安装使用htop"><a href="#CentOS7安装使用htop" class="headerlink" title="CentOS7安装使用htop"></a>CentOS7安装使用htop</h1><p>转载于原文:<a href="https://blog.csdn.net/qq_34672033/article/details/89735983">Linux系统状态命令htop最详细解释说明(没有之一!)</a></p><p>本文介绍一种更直观、可互动的进程查看器-htop</p><h2 id="htop的介绍"><a href="#htop的介绍" class="headerlink" title="htop的介绍"></a>htop的介绍</h2><p>htop是Linux系统中的一个互动的进程查看器,与Linux传统的top比较的话,htop更人性化并且还支持鼠标操作!</p><h2 id="htop的优势"><a href="#htop的优势" class="headerlink" title="htop的优势"></a>htop的优势</h2><ol><li>在htop中，可以垂直和水平滚动列表，查看所有进程和完整的命令行。</li><li>在top中，您按下的每个未分配的键都有延迟(尤其是当多键转义序列意外触发时)。</li><li>htop启动得更快(top似乎在显示任何东西之前会收集一段时间的数据)。</li><li>在htop中，您不需要输入进程号来终止进程，而在top中，您需要这样做。</li><li>在htop中，您不需要输入进程编号或优先级值来重新分配进程，而在top中，您需要这样做。</li><li>在htop中，您可以同时杀死多个进程。</li><li>相比top更容易测试。</li></ol><h2 id="htop安装"><a href="#htop安装" class="headerlink" title="htop安装"></a>htop安装</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">#安装epel源yum install epel-release#安装htopyum install -y htop#安装完毕后命令行输入htop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/20190501103811440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NjcyMDMz,size_16,color_FFFFFF,t_70"></p><h2 id="参数信息详解"><a href="#参数信息详解" class="headerlink" title="参数信息详解"></a>参数信息详解</h2><p>说明:</p><blockquote><p>从上面的截图中可以看到,htop命令输出总共分成了五个展示区:</p><ol><li>CPU状态区域</li><li>整体状态区域</li><li>内存状态区域</li><li>进程状态区域</li><li>管理控制区域</li></ol></blockquote><p>htop通过进度条展示每个CPU逻辑核心的使用百分比,并使用不同的颜色进行区分:</p><p>CPU usage bar</p><pre><code>该行主要显示CPU使用情况,htop还为将不同颜色来区分是使用情况:1. 蓝色的表示low-prority(低优先级)使用2. 绿色的表示normal(标准)使用情况3. 红色的表示kernel(内核)使用情况4. 青色的表示virtuality(虚拟性)使用情况</code></pre><p>Memory bar</p><p>该行主要表示内存使用情况，同样的htop使用了不同颜色来区分是使用情况:<br>    1. 绿色的表示已经使用内存情况<br>    2. 蓝色的表示用于缓冲的内存使用情况<br>    3. 黄色的表示用于缓存的内存使用情况</p><p>Swap bar</p><p>该行主要显示交换分区使用情况，当你发现你的交换分区(swap)已经派上用场的时候，说明你的物理内存已经不足，需要考虑增加内存了。</p><p>整体状态区域</p><pre><code>1. Tasks显示进程总数,当前运行的进程数2. Load average显示的是系统的1分钟,5分钟,10分钟的平均负载情况3. Uptime显示系统运行了多长时间</code></pre><p>进程状态区域</p><blockquote><p>PID：表示进程号,是非零正整数<br>USER：发起该进程的用户名<br>PRI：进程优先级<br>NI：(nice)进程的优先级别数值<br>VIRT：进程占用的虚拟内存<br>RES：进程占用的物理内存<br>SHR：进程使用的共享内存<br>S：进程的运行状况<br>    (1) R 表示正在运行<br>    (2) S 表示休眠<br>    (3) Z 表示僵死状态<br>    (4) N 表示该进程优先值是负数</p></blockquote><pre><code>CPU%：进程占用的CPU使用率MEM%：此进程占用的物理内存和总内存的百分比TIME%：启动进程后占用CPU的累计时长Command：进程启动的启动命令名称即路径</code></pre><p>管理控制台<br>    F1;查看htop说明<br>    F2;htop设定<br>    F3;搜索进程<br>    F4;进程过滤器<br>    F5;显示属性结构<br>    F6;折叠或展开(新版本里的),或选择排序方式(旧版本里的)<br>    F7; 减少nice值,提高进程优先级<br>    F8; 增加nice值,降低进程优先级<br>    F9; 可对进程传递信号<br>    F10; 退出</p><h2 id="F2进入设置界面"><a href="#F2进入设置界面" class="headerlink" title="F2进入设置界面"></a>F2进入设置界面</h2><p><img src="https://img-blog.csdnimg.cn/20190501103837181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NjcyMDMz,size_16,color_FFFFFF,t_70"></p><p>针对每项进行设置可以切换输出的形式</p><h3 id="切换主题颜色"><a href="#切换主题颜色" class="headerlink" title="切换主题颜色"></a>切换主题颜色</h3><p><img src="https://img-blog.csdnimg.cn/20190501103841885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NjcyMDMz,size_16,color_FFFFFF,t_70"></p><h3 id="显示选项"><a href="#显示选项" class="headerlink" title="显示选项"></a>显示选项</h3><p><img src="https://img-blog.csdnimg.cn/20190501103846499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NjcyMDMz,size_16,color_FFFFFF,t_70"></p><p>为了更能清楚确认进程和线程的关系<br>按F2进入打开colimns设定</p><p><img src="https://img-blog.csdnimg.cn/20190501103851333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0NjcyMDMz,size_16,color_FFFFFF,t_70"></p><p>找到<code>TGID</code>后,<br>    按<code>F5</code>安装<br>    卸载是<code>F9</code><br>    保存<code>F10</code></p><p>F3是搜索进程</p><blockquote><p>不区分大小写,可输入进程名搜索,</p></blockquote><p>F4 是类似于过滤的功能</p><blockquote><p>输入的筛选条件会一直保存,可以按ESC键清除!</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> htop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scala学习-模板模式Demo</title>
      <link href="2021/07/05/scala-xue-xi-mo-ban-mo-shi-demo/"/>
      <url>2021/07/05/scala-xue-xi-mo-ban-mo-shi-demo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>模版模式通常用于一个固定的顺序执行方法中只有几个方法并不能确定，需要子类进行实现。例如计算一个方法的执行时间，第一步为获取当前时间毫秒值，第二步为执行方法，第三步为获取当前时间毫秒值并取差值得出结论，其中第二步应为抽象方法</p></blockquote><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">object</span> ScalaTemplate <span class="token punctuation">&#123;</span>  <span class="token comment">/**   * 定义执行时间特质   */</span>  <span class="token keyword">trait</span> CalcTime <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 需要计算执行时间的方法     */</span>    <span class="token keyword">def</span> code<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">/**     * 模板方法     */</span>    <span class="token keyword">def</span> calc<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">val</span> start <span class="token operator">=</span> System<span class="token punctuation">.</span>currentTimeMillis<span class="token punctuation">(</span><span class="token punctuation">)</span>      code<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">val</span> end <span class="token operator">=</span> System<span class="token punctuation">.</span>currentTimeMillis<span class="token punctuation">(</span><span class="token punctuation">)</span>      println<span class="token punctuation">(</span>s<span class="token string">"当前方法执行时间为 【$&#123;end - start&#125;】 毫秒"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">/**   * 实现类，实现需要计算执行时间的方法   */</span>  <span class="token keyword">class</span> CalcTimeImpl <span class="token keyword">extends</span> CalcTime <span class="token punctuation">&#123;</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> code<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">100</span><span class="token punctuation">)</span> println<span class="token punctuation">(</span><span class="token string">"Hello,Scala!"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">/**   * 测试类   */</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">new</span> CalcTimeImpl<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>calc<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Scala </category>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scala </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scala学习-职责链模式Demo</title>
      <link href="2021/07/05/scala-xue-xi-zhi-ze-lian-mo-shi-demo/"/>
      <url>2021/07/05/scala-xue-xi-zhi-ze-lian-mo-shi-demo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>职责链模式通常用于一个依次调用的方法场景，换成代码来说就是一个类继承了多个trait后，可以依次调用多个trait中的同一个方法，只要让多个trait中的同一个方法在最后都依次执行super关键字即可。类中调用多个tait中都有这个方法时，首先会从最右边的trait方法开始执行，然后依次往左执行，形成一个调用链条</p></blockquote><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">object</span> ScalaHandler <span class="token punctuation">&#123;</span>  <span class="token comment">// 1. 定义一个HandlerTrait特质</span>  <span class="token keyword">trait</span> HandlerTrait <span class="token punctuation">&#123;</span>    <span class="token comment">// 定义一个具体的handler方法，打印"处理数据..."</span>    <span class="token keyword">def</span> handler<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> println<span class="token punctuation">(</span><span class="token string">"打印数据"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 2. 定义一个DataValidHandlerTrait，继承HandlerTrait特质</span>  <span class="token keyword">trait</span> DataValidHandlerTrait <span class="token keyword">extends</span> HandlerTrait <span class="token punctuation">&#123;</span>    <span class="token comment">// 重写handler方法，打印"验证数据"</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> handler<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      println<span class="token punctuation">(</span><span class="token string">"验证数据"</span><span class="token punctuation">)</span>      <span class="token comment">// 调用父特质的handler方法</span>      <span class="token keyword">super</span><span class="token punctuation">.</span>handler<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 3. 定义一个SignatureValidHandlerTrait，继承HandlerTrait特质</span>  <span class="token keyword">trait</span> SignatureValidHandlerTrait <span class="token keyword">extends</span> HandlerTrait <span class="token punctuation">&#123;</span>    <span class="token comment">// 重写Handler方法</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> handler<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      println<span class="token punctuation">(</span><span class="token string">"检查签名"</span><span class="token punctuation">)</span>      <span class="token comment">// 调用父特质的handler方法</span>      <span class="token keyword">super</span><span class="token punctuation">.</span>handler<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 4. 创建一个PaymentService类继承DataValidHandlerTrait、SignatureValidHandlerTrait</span>  <span class="token keyword">class</span> PaymentService <span class="token keyword">extends</span> DataValidHandlerTrait <span class="token keyword">with</span> SignatureValidHandlerTrait <span class="token punctuation">&#123;</span>    <span class="token comment">// 定义pay方法</span>    <span class="token keyword">def</span> pay<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      println<span class="token punctuation">(</span><span class="token string">"准备支付"</span><span class="token punctuation">)</span>      <span class="token keyword">super</span><span class="token punctuation">.</span>handler<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 5. 添加main方法</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">new</span> PaymentService<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>pay<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Scala </category>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scala </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scala学习-适配器模式Demo</title>
      <link href="2021/07/05/scala-xue-xi-gua-pei-qi-mo-shi-demo/"/>
      <url>2021/07/05/scala-xue-xi-gua-pei-qi-mo-shi-demo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>适配器模式通常用于一个类想实现一个接口但是这个接口有比较多的抽象方法，需求只需要实现其中几个，此时可以使用，用一个抽象类（适配器类）来空实现，具体的业务实现再继承抽象类重写需要的方法</p></blockquote><pre class="line-numbers language-scala" data-language="scala"><code class="language-scala"><span class="token keyword">object</span> ScalaAdapter <span class="token punctuation">&#123;</span>  <span class="token comment">/**   * 定义多接口特质   */</span>  <span class="token keyword">trait</span> Language <span class="token punctuation">&#123;</span>    <span class="token keyword">def</span> java<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> python<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> scala<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> golang<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> c<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">/**   * 抽象类空实现特质   */</span>  <span class="token keyword">abstract</span> <span class="token keyword">class</span> AbstractLanguage <span class="token keyword">extends</span> Language <span class="token punctuation">&#123;</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> java<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> python<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> scala<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> golang<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> c<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">/**   * 具体选择需要重写的方法   */</span>  <span class="token keyword">class</span> LanguageImpl <span class="token keyword">extends</span> AbstractLanguage <span class="token punctuation">&#123;</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> scala<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> println<span class="token punctuation">(</span><span class="token string">"我会Scala"</span><span class="token punctuation">)</span>    <span class="token keyword">override</span> <span class="token keyword">def</span> java<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> println<span class="token punctuation">(</span><span class="token string">"我会Java"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">/**   * 主方法测试   *   * @param args   */</span>  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">val</span> languageImpl <span class="token operator">=</span> <span class="token keyword">new</span> LanguageImpl<span class="token punctuation">(</span><span class="token punctuation">)</span>    languageImpl<span class="token punctuation">.</span>java<span class="token punctuation">(</span><span class="token punctuation">)</span>    languageImpl<span class="token punctuation">.</span>scala<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Scala </category>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scala </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pulsar性能测试</title>
      <link href="2021/06/07/pulsar-xing-neng-ce-shi/"/>
      <url>2021/06/07/pulsar-xing-neng-ce-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="Pulsar性能测试"><a href="#Pulsar性能测试" class="headerlink" title="Pulsar性能测试"></a>Pulsar性能测试</h1><p>可以使用<code>pulsar</code>自带的<code>perf</code>工具进行测试<br><a href="https://pulsar.apache.org/docs/zh-CN/performance-pulsar-perf/">官方文档</a></p><h2 id="测试生产"><a href="#测试生产" class="headerlink" title="测试生产"></a>测试生产</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">bin&#x2F;pulsar-perf produce my-topic<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数如下：</p><table><thead><tr><th>选项</th><th>说明</th><th>Default value</th></tr></thead><tbody><tr><td>auth-params</td><td>Set the authentication parameters, whose format is determined by the implementation of the <code>configure</code> method in the authentication plugin class, such as “key1:val1,key2:val2” or “{“key1”:”val1”,”key2”:”val2”}”.</td><td>N/A</td></tr><tr><td>auth_plugin</td><td>Set the authentication plugin class name.</td><td>N/A</td></tr><tr><td>batch-max-bytes</td><td>Set the maximum number of bytes for each batch.</td><td>4194304</td></tr><tr><td>batch-max-messages</td><td>Set the maximum number of messages for each batch.</td><td>1000</td></tr><tr><td>batch-time-window</td><td>Set a window for a batch of messages.</td><td>1 ms</td></tr><tr><td>compression</td><td>Compress the message payload.</td><td>N/A</td></tr><tr><td>conf-file</td><td>Set the configuration file.</td><td>N/A</td></tr><tr><td>delay</td><td>Mark messages with a given delay.</td><td>0s</td></tr><tr><td>encryption-key-name</td><td>Set the name of the public key used to encrypt the payload.</td><td>N/A</td></tr><tr><td>encryption-key-value-file</td><td>Set the file which contains the public key used to encrypt the payload.</td><td>N/A</td></tr><tr><td>exit-on-failure</td><td>Configure whether to exit from the process on publish failure.</td><td>false</td></tr><tr><td>help</td><td>Configure the help message.</td><td>false</td></tr><tr><td>max-connections</td><td>Set the maximum number of TCP connections to a single broker.</td><td>100</td></tr><tr><td>max-outstanding</td><td>Set the maximum number of outstanding messages.</td><td>1000</td></tr><tr><td>max-outstanding-across-partitions</td><td>Set the maximum number of outstanding messages across partitions.</td><td>50000</td></tr><tr><td>num-messages</td><td>Set the number of messages to be published in total. If it is set to 0, it keeps publishing messages.</td><td>0</td></tr><tr><td>num-producers</td><td>Set the number of producers for each topic.</td><td>1</td></tr><tr><td>num-test-threads</td><td>Set the number of test threads.</td><td>1</td></tr><tr><td>num-topic</td><td>Set the number of topics.</td><td>1</td></tr><tr><td>payload-delimiter</td><td>Set the delimiter used to split lines when using payload from a file.</td><td>\n</td></tr><tr><td>payload-file</td><td>Use the payload from an UTF-8 encoded text file and a payload is randomly selected when messages are published.</td><td>N/A</td></tr><tr><td>rate</td><td>Set the publish rate of messages across topics.</td><td>100</td></tr><tr><td>service-url</td><td>Set the Pulsar service URL.</td><td></td></tr><tr><td>size</td><td>Set the message size.</td><td>1024 bytes</td></tr><tr><td>stats-interval-seconds</td><td>Set the statistics interval. If it is set to 0, statistics is disabled.</td><td>0</td></tr><tr><td>test-duration</td><td>Set the test duration. If it is set to 0, it keeps publishing tests.</td><td>0s</td></tr><tr><td>trust-cert-file</td><td>Set the path for the trusted TLS certificate file.</td><td></td></tr><tr><td>warmup-time</td><td>Set the warm-up time.</td><td>1s</td></tr></tbody></table><h2 id="测试消费"><a href="#测试消费" class="headerlink" title="测试消费"></a>测试消费</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">bin&#x2F;pulsar-perf consume my-topic<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数如下：</p><table><thead><tr><th>选项</th><th>说明</th><th>Default value</th></tr></thead><tbody><tr><td>acks-delay-millis</td><td>Set the acknowledgment grouping delay in milliseconds.</td><td>100 ms</td></tr><tr><td>auth-params</td><td>Set the authentication parameters, whose format is determined by the implementation of the <code>configure</code> method in the authentication plugin class, such as “key1:val1,key2:val2” or “{“key1”:”val1”,”key2”:”val2”}”.</td><td>N/A</td></tr><tr><td>auth_plugin</td><td>Set the authentication plugin class name.</td><td>N/A</td></tr><tr><td>conf-file</td><td>Set the configuration file.</td><td>N/A</td></tr><tr><td>encryption-key-name</td><td>Set the name of the public key used to encrypt the payload.</td><td>N/A</td></tr><tr><td>encryption-key-value-file</td><td>Set the file which contains the public key used to encrypt the payload.</td><td>N/A</td></tr><tr><td>help</td><td>Configure the help message.</td><td>false</td></tr><tr><td>max-connections</td><td>Set the maximum number of TCP connections to a single broker.</td><td>100</td></tr><tr><td>num-consumers</td><td>Set the number of consumers for each topic.</td><td>1</td></tr><tr><td>num-topic</td><td>Set the number of topics.</td><td>1</td></tr><tr><td>rate</td><td>Simulate a slow message consumer (rate in msg/s).</td><td>0.0</td></tr><tr><td>receiver-queue-size</td><td>Set the size of the receiver queue.</td><td>1000</td></tr><tr><td>replicated</td><td>Configure whether the subscription status should be replicated.</td><td>false</td></tr><tr><td>service-url</td><td>Set the Pulsar service URL.</td><td></td></tr><tr><td>stats-interval-seconds</td><td>Set the statistics interval. If it is set to 0, statistics is disabled.</td><td>0</td></tr><tr><td>subscriber-name</td><td>Set the subscriber name prefix.</td><td>sub</td></tr><tr><td>subscription-type</td><td>Set the subscription type.ExclusiveShared（共享）Failover（灾备）Key_Shared</td><td>Exclusive</td></tr><tr><td>trust-cert-file</td><td>Set the path for the trusted TLS certificate file.</td><td></td></tr></tbody></table><h2 id="利用HdrHistogram-Plotter进行可视化"><a href="#利用HdrHistogram-Plotter进行可视化" class="headerlink" title="利用HdrHistogram Plotter进行可视化"></a>利用HdrHistogram Plotter进行可视化</h2><p>在执行完<code>pulsar-perf produce</code>命令后会在当前目录生成<code>.hgrm</code>文件，可以使用<code>HistogramLogProcessor</code>进行格式化，格式化后可以通过<a href="https://hdrhistogram.github.io/HdrHistogram/plotFiles.html">HdrHistogram Plotter</a>查看数据图</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux"># 克隆项目git clone https:&#x2F;&#x2F;github.com&#x2F;HdrHistogram&#x2F;HdrHistogram.git# 切换目录cd HdrHistogram# maven install，若此步出现错误可以在本地打开该项目进行mvn install再上传至服务器执行mvn clean install -DskipTests# 格式化.&#x2F;HistogramLogProcessor -i &lt;pulsar-pref生成的文件路径&gt; -o &lt;输出文件路径，可以不加后缀&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将输出的<code>.hgrm</code>文件上传至<a href="https://hdrhistogram.github.io/HdrHistogram/plotFiles.html">HdrHistogram Plotter</a>即可查看压测结果</p><h2 id="一些命令示例"><a href="#一些命令示例" class="headerlink" title="一些命令示例"></a>一些命令示例</h2><h3 id="测试生产-1"><a href="#测试生产-1" class="headerlink" title="测试生产"></a>测试生产</h3><blockquote><p>若一台机器有限制则可以多台同时模拟发送消息</p></blockquote><ul><li>test-duration 压测时间(秒)</li><li>size  消息大小  1024kb</li><li>num-test-threads 测试线程数。1,5,10,20</li><li>num-producers  生产者数量    1,5,10,20</li><li>rate 每秒发送消息的条数      5000,10000,20000,50000</li><li>总体生产数量=num-producers * num-test-threads </li></ul><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">bin&#x2F;pulsar-perf produce test-topic \--num-test-threads 5  \--num-producers 10 \--rate 3000 \--test-duration 600 \--size 10240<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="测试消费-1"><a href="#测试消费-1" class="headerlink" title="测试消费"></a>测试消费</h3><ol><li>subscription-type 订阅模式（默认Exclusive） （主要压Shared，Failover两种模式）<ul><li>Exclusive</li><li>Shared（共享）</li><li>Failover（灾备）</li><li>Key_Shared</li></ul></li><li>num-consumers  消费者数量 。Shared模式下  消费者数量  1,10,20,100 （不需要指定）</li><li>subscriber-name 订阅者名字 （不需要指定）</li><li>num-topic topic的个数 （不需要指定）</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">bin&#x2F;pulsar-perf consume test-topic \ --num-consumers 1 \--subscription-type Shared \--receiver-queue-size 4000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 消息队列 </tag>
            
            <tag> Pulsar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Pulsar Manager</title>
      <link href="2021/05/24/an-zhuang-pulsar-manager/"/>
      <url>2021/05/24/an-zhuang-pulsar-manager/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Pulsar-Manager"><a href="#安装Pulsar-Manager" class="headerlink" title="安装Pulsar Manager"></a>安装Pulsar Manager</h1><p><a href="https://pulsar.apache.org/docs/zh-CN/administration-pulsar-manager/">官方文档</a></p><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><p>可安装Docker社区版</p><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">docker pull apachepulsar&#x2F;pulsar-manager:v0.2.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="run"><a href="#run" class="headerlink" title="run"></a>run</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">docker run -it \    -p 9527:9527 -p 7750:7750 \    --network node2 \    -e SPRING_CONFIGURATION_FILE&#x3D;&#x2F;pulsar-manager&#x2F;pulsar-manager&#x2F;application.properties \    apachepulsar&#x2F;pulsar-manager:v0.2.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="设置管理员账户和密码"><a href="#设置管理员账户和密码" class="headerlink" title="设置管理员账户和密码"></a>设置管理员账户和密码</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">CSRF_TOKEN&#x3D;$(curl http:&#x2F;&#x2F;localhost:7750&#x2F;pulsar-manager&#x2F;csrf-token)curl \   -H &#39;X-XSRF-TOKEN: $CSRF_TOKEN&#39; \   -H &#39;Cookie: XSRF-TOKEN&#x3D;$CSRF_TOKEN;&#39; \   -H &quot;Content-Type: application&#x2F;json&quot; \   -X PUT http:&#x2F;&#x2F;localhost:7750&#x2F;pulsar-manager&#x2F;users&#x2F;superuser \   -d &#39;&#123;&quot;name&quot;: &quot;admin&quot;, &quot;password&quot;: &quot;apachepulsar&quot;, &quot;description&quot;: &quot;test&quot;, &quot;email&quot;: &quot;username@test.org&quot;&#125;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="访问9527端口进行登录"><a href="#访问9527端口进行登录" class="headerlink" title="访问9527端口进行登录"></a>访问9527端口进行登录</h2><p>用户密码为上方配置的用户和密码</p><h2 id="配置连接环境"><a href="#配置连接环境" class="headerlink" title="配置连接环境"></a>配置连接环境</h2><blockquote><p>注意：如果遇到{“error”:”This environment is error. Please check it”}.错误<br>需要保证容器能够连接到pulsar的webService，所以在配置环境时要注意host或ip</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 消息队列 </tag>
            
            <tag> Pulsar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pulsar Debezium常用命令与常见问题</title>
      <link href="2021/05/14/pulsar-debezium-chang-yong-ming-ling-yu-chang-jian-wen-ti/"/>
      <url>2021/05/14/pulsar-debezium-chang-yong-ming-ling-yu-chang-jian-wen-ti/</url>
      
        <content type="html"><![CDATA[<h2 id="source常用命令"><a href="#source常用命令" class="headerlink" title="source常用命令"></a>source常用命令</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">#创建bin&#x2F;pulsar-admin source create --source-config-file conf&#x2F;functions&#x2F;cdc.yml#更新bin&#x2F;pulsar-admin source update --source-config-file conf&#x2F;functions&#x2F;cdc.yml或者bin&#x2F;pulsar-admin source update --tenant tenant --namespace namespace --name source-name#停止bin&#x2F;pulsar-admin source stop --tenant tenant --namespace namespace --name source-name#删除bin&#x2F;pulsar-admin source delete --tenant tenant --namespace namespace --name source-name#重启bin&#x2F;pulsar-admin source restart --tenant tenant --namespace namespace --name source-name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ul><li>若yml文件发生变动需执行source更新操作</li><li>若debezium监听的数据库表结构或类型发生变化需要先删除zookeeper中存储的schema信息后再进行操作，具体操作如下：</li></ul><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">#进入zookeeper shellbin&#x2F;pulsar zookeeper-shell#使用ls可以查看相关信息ls &#x2F;schemas#删除delete &#x2F;schemas&#x2F;tenant&#x2F;namespace#删除全部deleteall &#x2F;schemas&#x2F;tenant&#x2F;namespace<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>若需要重新同步，正确步骤如下：</p><ol><li>删除zookeeper中schemas信息（如果表结构、类型发生变动）</li><li>停止相关producer服务（包括source）</li><li>停止相关consumer服务（包括数仓服务及其他监听topic的服务）</li><li>删除source</li><li>删除相关topic（包括source topic、offset topic、history topic、table topic）</li><li>重新创建source</li><li>检查相关topic是否创建完毕</li></ol></li><li><p>HTTP 500 Internal Server Error{“reason”:”Write rejected because stream XXX/XXX/XXX/20e08b14-225b-489b-8387-c27846852107-pulsar-io-debezium-mysql-2.7.1.nar has encountered an error : writer has been closed due to error.”}</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 消息队列 </tag>
            
            <tag> Pulsar </tag>
            
            <tag> Debezium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pulsar Debezium同步MySQL数据</title>
      <link href="2021/05/14/pulsar-debezium-lian-jie-mysql/"/>
      <url>2021/05/14/pulsar-debezium-lian-jie-mysql/</url>
      
        <content type="html"><![CDATA[<h1 id="Pulsar-Debezium同步MySQL数据"><a href="#Pulsar-Debezium同步MySQL数据" class="headerlink" title="Pulsar Debezium同步MySQL数据"></a>Pulsar Debezium同步MySQL数据</h1><h2 id="Pulsar本地运行"><a href="#Pulsar本地运行" class="headerlink" title="Pulsar本地运行"></a>Pulsar本地运行</h2><p>参考《单节点安装运行Pulsar.md》</p><h2 id="Mysql的配置"><a href="#Mysql的配置" class="headerlink" title="Mysql的配置"></a>Mysql的配置</h2><ul><li>单机版<ul><li>单机Mysql必须启用binlog</li><li>A Debezium MySQL connector requires a MySQL user account. This MySQL user must have appropriate permissions on all databases for which the Debezium MySQL connector captures changes.</li></ul></li><li>主从<ul><li>仅读取一个示例。如果该服务器发生故障，则必须重新启动或恢复该服务器，然后连接器才能继续。</li></ul></li><li>集群<ul><li>MySQL有多种高可用性解决方案，它们使容忍性大大提高，几乎可以从问题和故障中立即恢复。大多数HA MySQL群集使用GTID，以便副本能够跟踪任何主服务器上的所有更改。</li></ul></li></ul><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">#创建一个mysql用户角色mysql&gt; CREATE USER &#39;user&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39;;#赋予角色权限reload 和 flush_tables mysql&gt; GRANT SELECT, RELOAD,flush_tables, SHOW DATABASES, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &#39;user&#39; IDENTIFIED BY &#39;password&#39;;#刷新权限mysql&gt; FLUSH PRIVILEGES;#启用binlog#检查该log-bin选项是否已启用：mysql&gt; SELECT variable_value as &quot;BINARY LOGGING STATUS (log-bin) ::&quot;FROM information_schema.global_variables WHERE variable_name&#x3D;&#39;log_bin&#39;;#如果是OFF，请使用以下属性配置MySQL服务器配置文件server-id &#x3D; 223344 #对于server-idMySQL群集中的每个服务器和复制客户端，该值必须唯一。在设置MySQL连接器期间，Debezium会为连接器分配一个唯一的服务器ID。log_bin    &#x3D; mysql-bin #log_bin是二进制日志文件序列的基本名称binlog_format     &#x3D; ROW #在binlog-format必须设置为ROW或row。binlog_row_image  &#x3D; FULL #在binlog_row_image必须设置为FULL或full。expire_logs_days  &#x3D; 10 #这是自动删除binlog文件的天数。默认值为0，表示不自动删除。#再次检查binlog状态，以确认更改：mysql&gt; SELECT variable_value as &quot;BINARY LOGGING STATUS (log-bin) ::&quot;FROM information_schema.global_variables WHERE variable_name&#x3D;&#39;log_bin&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Debezium相关下载与配置"><a href="#Debezium相关下载与配置" class="headerlink" title="Debezium相关下载与配置"></a>Debezium相关下载与配置</h2><p>首次创建步骤：</p><ol><li>需要保证pulsar运行正常（zookeeper、bookie、broker、functions-worker）</li><li>根据<code>functions_worker.conf</code>的<code>connectorsDirectory</code>配置上传connector的nar包，一般在pulsar根目录下的connectors目录。<a href="https://pulsar.apache.org/zh-CN/download/">官方下载地址</a></li><li>配置yml文件，一般放在<code>conf/functions</code>目录下</li><li>创建source</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">bin&#x2F;pulsar-admin source create --source-config-file conf&#x2F;functions&#x2F;cdc.yml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="5"><li>查看对应topic是否创建完成</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">bin&#x2F;pulsar-admin topics list tenant&#x2F;namespace<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="yml文件示例"><a href="#yml文件示例" class="headerlink" title="yml文件示例"></a>yml文件示例</h3><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">## 租户tenant: &quot;tenant&quot;## 命名空间namespace: &quot;namespace&quot;## source 名称name: &quot;source-cdc-demo&quot;## source topics名topicName: &quot;tenant&#x2F;namespace&#x2F;cdc-mysql&quot;## nar包连接器地址archive: &quot;connectors&#x2F;pulsar-io-debezium-mysql-2.7.1.nar&quot; ## 并行parallelism: 1 configs:  ## 数据库相关基础配置  database.hostname: &quot;host&quot;  database.port: &quot;3306&quot;   database.user: &quot;username&quot;  database.password: &quot;password&quot;  ## 对应上面的server-id  database.server.id: &quot;654321&quot;  ## 服务名，会拼接topic  database.server.name: &quot;durian&quot;  ## 包含的数据库  database.include.list: &quot;gscm&quot;  ## 包含的数据库表（注意要带上库名因为可以包含多个库）  table.include.list: &quot;gscm.sys_user&quot;   ## 使用历史处理类  database.history: &quot;org.apache.pulsar.io.debezium.PulsarDatabaseHistory&quot;  ## 历史topic  database.history.pulsar.topic: &quot;tenant&#x2F;namespace&#x2F;__history&quot;  ## 管理历史topic的broker地址  database.history.pulsar.service.url: &quot;pulsar:&#x2F;&#x2F;host:6650&quot;  ## ssl连接模式  database.ssl.mode: preferred  ## KEY_CONVERTER_CLASS_CONFIG, VALUE_CONVERTER_CLASS_CONFIG  key.converter: &quot;org.apache.kafka.connect.json.JsonConverter&quot;  value.converter: &quot;org.apache.kafka.connect.json.JsonConverter&quot;  ## Pulsar broker地址  pulsar.service.url: &quot;pulsar:&#x2F;&#x2F;host:6650&quot;  ## 偏移topic  offset.storage.topic: &quot;tenant&#x2F;namespace&#x2F;__offset&quot;  ## 配置decimal取值  decimal.handling.mode: &quot;string&quot;  ## 配置快照模式  snapshot.mode: when_needed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 消息队列 </tag>
            
            <tag> Pulsar </tag>
            
            <tag> Debezium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单节点Pulsar部署</title>
      <link href="2021/05/08/dan-jie-dian-an-zhuang-yun-xing-pulsar/"/>
      <url>2021/05/08/dan-jie-dian-an-zhuang-yun-xing-pulsar/</url>
      
        <content type="html"><![CDATA[<h1 id="单节点Pulsar部署"><a href="#单节点Pulsar部署" class="headerlink" title="单节点Pulsar部署"></a>单节点Pulsar部署</h1><p>官方文档参考：<a href="https://pulsar.apache.org/docs/zh-CN/deploy-bare-metal/">Deploy a cluster on bare metal</a></p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>各位好久不见，年后换工作，忙项目一直没时间上传新的博客，正好这次之前的ESC服务器到期了所以正好换为Hexo（ECS是真的贵）。新单位消息中心使用的是Pulsar，在踩了一段时间坑后也输出了一些文档，特此记录。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>Java版本必须是Java8及以上</li><li>硬件条件参考官方文档</li></ul><h2 id="二进制包下载解压"><a href="#二进制包下载解压" class="headerlink" title="二进制包下载解压"></a>二进制包下载解压</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">#下载wget https:&#x2F;&#x2F;archive.apache.org&#x2F;dist&#x2F;pulsar&#x2F;pulsar-2.7.1&#x2F;apache-pulsar-2.7.1-bin.tar.gz#解压tar xvzf apache-pulsar-2.7.1-bin.tar.gz#进入目录cd apache-pulsar-2.7.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="部署单节点zookeeper"><a href="#部署单节点zookeeper" class="headerlink" title="部署单节点zookeeper"></a>部署单节点zookeeper</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">#创建目录mkdir -p data&#x2F;zookeeper#配置文件,1为集群唯一IDecho 1 &gt; data&#x2F;zookeeper&#x2F;myid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">bin&#x2F;pulsar-daemon start zookeeper<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="初始化节点元数据"><a href="#初始化节点元数据" class="headerlink" title="初始化节点元数据"></a>初始化节点元数据</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">#注意端口号不要和已有的重复，且注意修改后面配置文件的默认值#httpsbin&#x2F;pulsar initialize-cluster-metadata \  --cluster &#123;集群名&#125; \  --zookeeper &#123;hostname&#125;:2181 \  --configuration-store &#123;hostname&#125;:2181 \  --web-service-url http:&#x2F;&#x2F;&#123;hostname&#125;:8980 \  --web-service-url-tls https:&#x2F;&#x2F;&#123;hostname&#125;:8443 \  --broker-service-url pulsar:&#x2F;&#x2F;&#123;hostname&#125;:6650 \  --broker-service-url-tls pulsar+ssl:&#x2F;&#x2F;&#123;hostname&#125;:6651  #非httpsbin&#x2F;pulsar initialize-cluster-metadata \  --cluster &#123;集群名&#125; \  --zookeeper &#123;hostname&#125;:2181 \  --configuration-store &#123;hostname&#125;:2181 \  --web-service-url http:&#x2F;&#x2F;&#123;hostname&#125;:8980 \  --broker-service-url pulsar:&#x2F;&#x2F;&#123;hostname&#125;:6650<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="部署Bookeeper"><a href="#部署Bookeeper" class="headerlink" title="部署Bookeeper"></a>部署Bookeeper</h2><ol><li>修改<code>conf/bookkeeper.conf</code>的设置<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">zkServers&#x3D;&#123;hostname&#125;:2181advertisedAddress&#x3D;&#123;hostname&#125;prometheusStatsHttpPort&#x3D;8002httpServerPort&#x3D;8001<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>后台启动bookeeper</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">bin&#x2F;pulsar-daemon start bookie<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>检测是否启动成功</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">bin&#x2F;bookkeeper shell bookiesanity<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="部署-Pulsar-broker"><a href="#部署-Pulsar-broker" class="headerlink" title="部署 Pulsar broker"></a>部署 Pulsar broker</h2><ol><li><p>配置Broker</p><blockquote><ol><li>主要是需要确保zookeeperServers 和 configurationStoreServers 配置项的值是正确的</li><li>集群名字与初始化节点元数据相同</li><li>各个端口号与元数据相同</li><li>可配置function-worker是否和broker一起启动</li><li>functions_worker.yml需配置集群名称</li><li>注意Tls是否启用<br>具体配置参考官方文档</li></ol></blockquote><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">#conf&#x2F;broker.confzookeeperServers&#x3D;&#123;hostname&#125;:2181configurationStoreServers&#x3D;&#123;hostname&#125;:2181brokerServicePortTls&#x3D;6651webServicePort&#x3D;8980webServicePortTls&#x3D;8443functionsWorkerEnabled&#x3D;trueclusterName&#x3D;&#123;集群名&#125;managedLedgerDefaultEnsembleSize&#x3D;1managedLedgerDefaultWriteQuorum&#x3D;1managedLedgerDefaultAckQuorum&#x3D;1#conf&#x2F;functions_worker.ymlworkerId: 自定义workerHostname: &#123;hostname&#125;configurationStoreServers: &#123;hostname&#125;:2181pulsarServiceUrl: pulsar:&#x2F;&#x2F;&#123;hostname&#125;:6650pulsarWebServiceUrl: http:&#x2F;&#x2F;&#123;hostname&#125;:8980pulsarFunctionsCluster: &#123;集群名&#125;initializedDlogMetadata: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>启动Broker</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">bin&#x2F;pulsar-daemon start broker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>测试是否搭建成功（注意，此处命令需要先配置client.conf）</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">#broker启动是否成功curl &#123;hostname&#125;:8980&#x2F;admin&#x2F;v2&#x2F;worker&#x2F;cluster#function_worker是否成功#创建一个名为exclamation的函数 ExclamationFunction。bin&#x2F;pulsar-admin functions create \  --jar examples&#x2F;api-examples.jar \  --classname org.apache.pulsar.functions.api.examples.ExclamationFunction \  --inputs persistent:&#x2F;&#x2F;public&#x2F;default&#x2F;exclamation-input \  --output persistent:&#x2F;&#x2F;public&#x2F;default&#x2F;exclamation-output \  --tenant public \  --namespace default \  --name exclamation#检查是否按照预期触发函数运行。bin&#x2F;pulsar-admin functions trigger --name exclamation --trigger-value &quot;hello world&quot;#你能够看到如下的输出：hello world!#监听消费消息,需要先配置client.confbin&#x2F;pulsar-client consume persistent:&#x2F;&#x2F;public&#x2F;default&#x2F;test -n 1 -s &quot;consumer-test&quot; -t &quot;Exclusive&quot;#发送消息bin&#x2F;pulsar-client produce persistent:&#x2F;&#x2F;public&#x2F;default&#x2F;test -n 1 -m &quot;Hello Pulsar&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="可选配置client-conf"><a href="#可选配置client-conf" class="headerlink" title="可选配置client.conf"></a>可选配置client.conf</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">webServiceUrl&#x3D;http:&#x2F;&#x2F;&#123;hostname&#125;:8980&#x2F;brokerServiceUrl&#x3D;pulsar:&#x2F;&#x2F;&#123;hostname&#125;:6650&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="接下来可以创建租户和命名空间"><a href="#接下来可以创建租户和命名空间" class="headerlink" title="接下来可以创建租户和命名空间"></a>接下来可以创建租户和命名空间</h2><p>参见《设置租户、角色、命名空间.md》</p>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 消息队列 </tag>
            
            <tag> Pulsar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置租户、角色、命名空间</title>
      <link href="2021/05/08/she-zhi-zu-hu-jiao-se-ming-ming-kong-jian/"/>
      <url>2021/05/08/she-zhi-zu-hu-jiao-se-ming-ming-kong-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="租户"><a href="#租户" class="headerlink" title="租户"></a>租户</h2><p>目前可对以下两方面进行配置：</p><ul><li>Admin角色</li><li>允许的集群</li></ul><h3 id="相关指令"><a href="#相关指令" class="headerlink" title="相关指令"></a>相关指令</h3><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux"># 查询目前的租户pulsar-admin tenants list# 创建租户pulsar-admin tenants create my-tenant# 带角色pulsar-admin tenants create my-tenant \  --admin-roles role1,role2,role3pulsar-admin tenants create my-tenant \  -r role1# 获取配置pulsar-admin tenants get my-tenant# 删除pulsar-admin tenants delete my-tenant# 更新pulsar-admin tenants update my-tenant<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">#创建该租户命名空间pulsar-admin namespaces create test-tenant&#x2F;test-namespace#获取命名空间pulsar-admin namespaces list test-tenant#获取现有策略pulsar-admin namespaces policies test-tenant&#x2F;test-namespace#卸载命名空间pulsar-admin namespaces unload my-tenant&#x2F;my-ns<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 消息队列 </tag>
            
            <tag> Pulsar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows和Linux后台Jar包启动方式记录</title>
      <link href="/articles/2020/10/15/1602757520896.html"/>
      <url>/articles/2020/10/15/1602757520896.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://b3logfile.com/bing/20191217.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h1 id="windows和Linux后台Jar包启动方式记录"><a href="#windows和Linux后台Jar包启动方式记录" class="headerlink" title="windows和Linux后台Jar包启动方式记录"></a>windows和Linux后台Jar包启动方式记录</h1><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>又是很久没更新了😂 ，9月因为更换工作花费了一些时间，十月初本网站的各种证书还有DNS解析也到期，陆陆续续花了不少时间解决，同时也把该博客使用的Solo进行了升级，接下来可以恢复更新了。</p><p>在之前，如果要部署的服务器安装有tomcat则可以直接上传war包进行配置，但在如今SpringBoot流行的情况下下，<code>package</code>后的jar包运行也是比价常用的，所以本文记录一下在linux环境与windows环境下的jar包启动方式，主要是脚本的写法，供以后参考。当然，此处是单一jar包的情况，如果是微服务若干个jar包推荐使用docker运行。</p><h2 id="Linux环境"><a href="#Linux环境" class="headerlink" title="Linux环境"></a>Linux环境</h2><p>linux环境下相对而言较为简单，但是如果使用 <code>java -jar</code>启动，一方面只能前台，ctrl+c就会结束，另一方面日志的查看也不方便，所以可以编写启动与结束脚本。</p><p><a href="https://el-admin.vip/guide/xmbs.html#%E5%90%8E%E7%AB%AF%E9%83%A8%E7%BD%B2">此处参考el-admin的部署方式写法</a></p><h3 id="启动脚本-start-sh"><a href="#启动脚本-start-sh" class="headerlink" title="启动脚本-start.sh"></a>启动脚本-start.sh</h3><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">nohup java -jar jarName.jar &gt; nohup.out 2&gt;&amp;1 &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>&amp;</code>设置为后台启动，使用 <code>nohup</code>则可将日志输出到nohup.out文件中</p><h3 id="结束脚本-stop-sh"><a href="#结束脚本-stop-sh" class="headerlink" title="结束脚本-stop.sh"></a>结束脚本-stop.sh</h3><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">PID&#x3D;$(ps -ef | grep jarName.jar | grep -v grep | awk &#39;&#123; print $2 &#125;&#39;)if [ -z &quot;$PID&quot; ]thenecho Application is already stoppedelseecho kill -9 $PIDkill -9 $PIDfi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过 <code>ps -ef</code>命令查找当前jar包运行的PID，再使用 <code>kill</code>命令停止</p><h3 id="查看日志-log-sh"><a href="#查看日志-log-sh" class="headerlink" title="查看日志-log.sh"></a>查看日志-log.sh</h3><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">tail -f nohup.out<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>很简单，查看输出的nohup.out文件即可</p><h2 id="windows环境"><a href="#windows环境" class="headerlink" title="windows环境"></a>windows环境</h2><p>windows环境下需要启动cmd窗口，所以涉及到的命令会有所区别</p><h3 id="启动脚本-start-bat"><a href="#启动脚本-start-bat" class="headerlink" title="启动脚本-start.bat"></a>启动脚本-start.bat</h3><pre class="line-numbers language-none"><code class="language-none">@echo off%1 mshta vbscript:CreateObject(&quot;WScript.Shell&quot;).Run(&quot;%~s0 ::&quot;,0,FALSE)(window.close)&amp;&amp;exitjava -jar jarName.jar  &gt;StartupLog%date:~0,4%%date:~5,2%%date:~8,2%.log  2&gt;&amp;1 &amp;exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>和linux类似只不过多添加了关闭cmd窗口命令，日志输出到StartupLog+今日日期.log文件中</p><h3 id="结束脚本-stop-bat"><a href="#结束脚本-stop-bat" class="headerlink" title="结束脚本-stop.bat"></a>结束脚本-stop.bat</h3><pre class="line-numbers language-none"><code class="language-none">@echo offset port&#x3D;10000for &#x2F;f &quot;tokens&#x3D;1-5&quot; %%i in (&#39;netstat -ano^|findstr &quot;:%port%&quot;&#39;) do (    echo kill the process %%m who use the port %port%    taskkill &#x2F;pid %%m)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>和linux类似，也是查找端口对应的pid进行结束，此处可以写多个端口号。<br>同时如果出现pid占用等情况，可以使用 <code>taskkill /F</code>来强制结束该进程。</p>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue标签拖拽实现与部分踩坑记录</title>
      <link href="/articles/2020/07/30/1596097184978.html"/>
      <url>/articles/2020/07/30/1596097184978.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20191222.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h1 id="Vue-标签拖拽实现与部分踩坑记录"><a href="#Vue-标签拖拽实现与部分踩坑记录" class="headerlink" title="Vue 标签拖拽实现与部分踩坑记录"></a>Vue 标签拖拽实现与部分踩坑记录</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>自己作为后端工程师开发前端项目多有不易，幸好目前前端提供的框架还算多，抛开一些类似“圣诞事件”的不提，在使用 vue+elementui 做了几个项目后还是感觉不错，不过 vue 的重渲染有点麻烦，关于 elementui 的讨论也有很多，自己最近也试着接触了例如 vuetify、quasar、taro，感觉还是更偏向于移动端的 ui 开发，不过在下次项目选型的时候会更加注意，特别是政府项目。<br>七月底了，抽时间记录一下在最近在开发过程中一些坑还有实现标签拖拽的代码，供以后参考。</p><h2 id="标签拖拽实现"><a href="#标签拖拽实现" class="headerlink" title="标签拖拽实现"></a>标签拖拽实现</h2><blockquote><p>目的是用户可以自行从页面左侧选择需要的标签拖拽到右侧的方框里，使用 vue 绑定配置 echarts 的 option。</p></blockquote><p>效果如下图所示：<br><img src="https://b3logfile.com/file/2020/07/%E6%A0%87%E7%AD%BE%E6%8B%96%E6%8B%BD%E4%BA%8B%E4%BE%8B-43e5ed8b.gif" alt="标签拖拽事例.gif"></p><p>本身想使用 vuedragable 插件的，但是发现或许不适合在多个容器间进行拖拽，所以此处采用 <a href="https://github.com/bevacqua/dragula">dargula</a>，但由于该技术并未提供拖拽后的回调函数，所以采用手动添加监听事件的方式。</p><p>具体功能逻辑如下：</p><ol><li>新增系列时向 v-for 绑定的数组中添加对象，对象中设置该系列对应的容器 id；</li><li>在下个周期渲染完成后根据 class 类名获取 dom 元素并添加至 dragula 容器；</li><li>同样手动给这些 dom 添加 <code>DOMNodeInserted</code> 事件和 <code>DOMNodeRemoved</code> 事件，并用参数传递标签 id 和容器 id；</li><li>在监听事件触发后执行对应的逻辑方法。</li></ol><p>具体代码如下（已省略不重要的代码）：</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">export default &#123;...created() &#123;&#x2F;&#x2F; 初始化dragulathis.drag &#x3D; this.$dragula(&#123;  isContainer: function (el) &#123;&#x2F;&#x2F; 设置带有tagData的class样式的dom加入容器        return el.classList.contains(&#39;tag-data&#39;);        &#125;,        moves: function (el, source, handle, sibling) &#123;        &#x2F;&#x2F; 哪些元素能拖动，true为都能拖动        return true;        &#125;,        accepts: function (el, target, source, sibling) &#123;          &#x2F;&#x2F; 放入容器的条件，true为都能放入          return true;        &#125;,        invalid: function (el, handle) &#123;          &#x2F;&#x2F; 默认情况下不会阻止任何拖动          return false;        &#125;,        &#x2F;&#x2F; 拖动的元素是否为副本        copy: false,        &#x2F;&#x2F; 复制的源容器重新排序        copySortSource: false,        &#x2F;&#x2F; 是否将拖到容器外的元素放回原处        revertOnSpill: true,        &#x2F;&#x2F; 是否将拖到容器外的元素删除        removeOnSpill: false,        &#x2F;&#x2F; 设置获取附加镜像元素的元素        mirrorContainer: document.body      &#125;)&#125;,methods:&#123;...mapActions(        &#x2F;&#x2F; 映射actions中的方法        &#123;          addContainerTagArray: &#39;addContainerTagArray&#39;,          removeContainerTagArray: &#39;removeContainerTagArray&#39;        &#125;      ),addAndBind() &#123;        &#x2F;&#x2F; 先清空之前的数据        this.seriesArray &#x3D; []        for (let i &#x3D; 0; i &lt; this.currentSeriesNum; i++) &#123;        &#x2F;&#x2F; 随机生成UUID          let tempUUID &#x3D; genUUID()          this.seriesArray.push(            &#123;              containerId: tempUUID,              type: &#39;&#39;,              lineStyle: &#123;                color: &#39;#409EFF&#39;              &#125;            &#125;          )        &#125;        let _this &#x3D; this        &#x2F;&#x2F; 此处必须使用$nextTick否则vue还未渲染完时无法通过getElementsByClassName方法获取到dom对象        this.$nextTick(() &#x3D;&gt; &#123;          let eles &#x3D; document.getElementsByClassName(&#39;series-tag-container&#39;);          for (let i &#x3D; 0; i &lt; _this.seriesArray.length; i++) &#123;            &#x2F;&#x2F; 数据添加完统一添加事件监听            let series &#x3D; _this.seriesArray[i]            &#x2F;&#x2F; dom渲染完成后执行            let element &#x3D; eles[i]            &#x2F;&#x2F; 添加拖拽容器            _this.drag.containers.push(element)            &#x2F;&#x2F; 设置自定义属性            element.setAttribute(&quot;containerId&quot;, series.containerId)            &#x2F;&#x2F;  给新的系列标签容器添加监听器            element.addEventListener(&quot;DOMNodeInserted&quot;, function (e) &#123;              if (element.children.length &gt; 1) &#123;                &#x2F;&#x2F; 已经存在一个标签则退回                _this.drag.cancel()                _this.$message(&#123;                  message: &#39;最多选择一个标签&#39;,                  type: &#39;warning&#39;                &#125;);                return              &#125;              _this.addSeriesArray(e.target.getAttribute(&quot;id&quot;),e.currentTarget.getAttribute(&quot;containerId&quot;))            &#125;)            element.addEventListener(&quot;DOMNodeRemoved&quot;, function (e) &#123;              _this.removeSeriesArray(e.currentTarget.getAttribute(&quot;containerId&quot;))            &#125;)          &#125;        &#125;)      &#125;,      addSeriesArray(tagId, containerId) &#123;        &#x2F;&#x2F; 从tagArray中根据id添加数据        let tempTag &#x3D; this.tagArray.filter(tag &#x3D;&gt; tag.id &#x3D;&#x3D; tagId)        for (let i &#x3D; 0; i &lt; this.seriesArray.length; i++) &#123;          let series &#x3D; this.seriesArray[i]          if (series.containerId &#x3D;&#x3D; containerId) &#123;          &#x2F;&#x2F; 容器id相等则设置标签数据            series.id &#x3D; tempTag[0].id            series.name &#x3D; tempTag[0].fieldName            series.data &#x3D; tempTag[0].data            series.label &#x3D; &#123;              show: true,              position: &#39;top&#39;            &#125;          &#125;        &#125;        &#x2F;&#x2F; 将容器ID与标签ID添加到store，可以用vuex来管理标签id与容器id的关系，但是此处未用到        &#x2F;&#x2F; this.addContainerTagArray(&#123;        &#x2F;&#x2F;   containerId: containerId,        &#x2F;&#x2F;   tagId: tagId        &#x2F;&#x2F; &#125;)      &#125;,      removeSeriesArray(containerId) &#123;      &#x2F;&#x2F; 标签移出时        for (let i &#x3D; 0; i &lt; this.seriesArray.length; i++) &#123;          let temp &#x3D; this.seriesArray[i]          if (temp.containerId &#x3D;&#x3D; containerId) &#123;            &#x2F;&#x2F; 匹配则初始化            temp.id &#x3D; &#39;&#39;            temp.data &#x3D; []            temp.name &#x3D; &#39;&#39;          &#125;        &#125;        &#x2F;&#x2F; 从store中移出        &#x2F;&#x2F; this.removeContainerTagArray(containerId)      &#125;   &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>麻烦之处在于：</p><ol><li>Vue 的重渲染，如果动态添加系列数量，那么在系列数组发生变化后会导致整体的父组件重新渲染，导致拖拽来的标签消失（但实际数据还在），所以此处只能在一开始指定系列数量，并且如果要改变会提醒会丢失已有的配置；</li><li>dragula 没有提供时间毁掉所以只能手动添加监听事件，需要注意的是由于添加进系列数组和绑定监听事件均是在同一方法内，此时 vue 还未对 dom 进行重渲染，所以此时是无法获取到 dom 对象的，需要使用 <code>$nextTick</code> 在渲染完成后才能获取，当然别忘记 <code>this</code> 要换成 <code>_this</code></li></ol><h2 id="一些坑"><a href="#一些坑" class="headerlink" title="一些坑"></a>一些坑</h2><h3 id="popover-弹框组件在循环中的使用"><a href="#popover-弹框组件在循环中的使用" class="headerlink" title="popover 弹框组件在循环中的使用"></a>popover 弹框组件在循环中的使用</h3><p>elementUI 官方提供的 popover 的事例只是在单一按钮的基础上绑定弹框，但是更多的情况是在表格或者 v-for 中使用，那么此时就不能按照官方的写法来。完整代码如下：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span>              <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chartArray<span class="token punctuation">"</span></span>              <span class="token attr-name">:highlight-current-row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>              <span class="token attr-name">@row-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setOption<span class="token punctuation">"</span></span>              <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100%</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span>                <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图表名<span class="token punctuation">"</span></span>                <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>110<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  &#123;&#123;scope.row.name&#125;&#125;                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>操作<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span>                    <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span>                    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>                    <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleEdit(scope.$index, scope.row)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>编辑                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-popover</span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span> <span class="token attr-name">:ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>popover-<span class="token punctuation">'</span>+scope.$index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>确定删除吗？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span> 0</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span>                        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span>                        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>                        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scope._self.$refs[<span class="token punctuation">'</span>popover-<span class="token punctuation">'</span>+scope.$index].doClose()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        取消                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span>                        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>                        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span>                        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scope._self.$refs[<span class="token punctuation">'</span>popover-<span class="token punctuation">'</span>+scope.$index].doClose();;handleDelete(scope.row)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        确定                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mini<span class="token punctuation">"</span></span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reference<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-popover</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关键之处在于：</p><ol><li><code>&lt;el-popover&gt;</code> 组件上的 ref 属性在循环的过程中需要绑定不同的值，可以用循环的 index 或者使用循环对象的 id；</li><li>在点击取消或者确定时使用 <code>scope._self.$refs[&#39;popover-&#39;+scope.$index].doClose()</code> 来关闭对应的 popover，后面再加上本身要执行的方法。</li></ol><h3 id="Echarts-的-option-合并"><a href="#Echarts-的-option-合并" class="headerlink" title="Echarts 的 option 合并"></a>Echarts 的 option 合并</h3><p>echarts 在默认情况下如果切换 option 会将之前的 option 与现在的 option 进行合并，因为一般情况下都是系列 <code>series</code> 发生变化，其他的如 xy 轴，图例之类的不会变，如果此时进行不同的 option 切换就会出现以下的结果：</p><p><img src="https://b3logfile.com/file/2020/07/echarts%E7%9A%84option%E5%90%88%E5%B9%B6-b30c98d3.gif" alt="echarts 的 option 合并.gif"></p><p>官方文档中是这么说的：<a href="https://echarts.apache.org/zh/api.html#echartsInstance.setOption">option 合并</a><br>所以如果不想进行合并需要设置一下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">setOption</span><span class="token punctuation">(</span><span class="token parameter">row<span class="token punctuation">,</span> column<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>chart<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>chart <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'chart-preview-container'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>chart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span>option<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// option更新时不合并</span>          notMerge<span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改后就可以了：</p><p><img src="https://b3logfile.com/file/2020/07/echarts%E7%9A%84option%E5%90%88%E5%B9%B62-1d378030.gif" alt="echarts 的 option 合并 2.gif"></p><h3 id="滚动条隐藏"><a href="#滚动条隐藏" class="headerlink" title="滚动条隐藏"></a>滚动条隐藏</h3><p>自带的滚动条太丑了，所以我一般选择隐藏，记录一下对应的 CSS</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*右边卡片样式*/</span><span class="token selector">.box-card-right</span> <span class="token punctuation">&#123;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 580px<span class="token punctuation">;</span>  <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*设置隐藏滚动条*/</span><span class="token selector">.box-card-right::-webkit-scrollbar</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 问题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue </tag>
            
            <tag> Element-UI </tag>
            
            <tag> Echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7 下 Docker 相关操作</title>
      <link href="/articles/2020/06/24/1592966579861.html"/>
      <url>/articles/2020/06/24/1592966579861.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20191104.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h1 id="CentOS7下Docker相关操作"><a href="#CentOS7下Docker相关操作" class="headerlink" title="CentOS7下Docker相关操作"></a>CentOS7下Docker相关操作</h1><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><ul><li>Docker目前使用越来越多，并且渐渐熟悉后也体会到了一些方便快捷之处，此处记录一下目前接触到的相关操作。<h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2></li></ul><ol><li>查看内核，版本必须高于3.10<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">uname -r<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>移除旧的版本<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">sudo yum remove docker*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>安装一些必要的系统工具<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">sudo yum install -y yum-utils device-mapper-persistent-data lvm2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>添加软件源信息（这里拉取阿里云的镜像）<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">sudo yum-config-manager --add-repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>更新 yum 缓存<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">sudo yum makecache fast<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>安装 Docker-ce（社区版）<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">sudo yum -y install docker-ce<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>启动 Docker 后台服务<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">sudo systemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>测试运行 hello-world<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">docker run hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>添加开机启动<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">sudo systemctl enable docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="简易安装mysql5-7"><a href="#简易安装mysql5-7" class="headerlink" title="简易安装mysql5.7"></a>简易安装mysql5.7</h2></li><li>拉取官方镜像<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">docker pull mysql:5.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>创建映射目录<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux"># 创建映射目录mkdir -p &#x2F;root&#x2F;mysql&#x2F;data &#x2F;root&#x2F;mysql&#x2F;logs &#x2F;root&#x2F;mysql&#x2F;conf# 创建配置文件cd &#x2F;root&#x2F;mysql&#x2F;conftouch my.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>创建并运行容器（注意设置密码）<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">docker run -p 3306:3306 --name mysql -v &#x2F;root&#x2F;mysql&#x2F;conf:&#x2F;etc&#x2F;mysql&#x2F;conf.d -v &#x2F;root&#x2F;mysql&#x2F;logs:&#x2F;logs -v &#x2F;root&#x2F;mysql&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql -e MYSQL_ROOT_PASSWORD&#x3D;root -d mysql:5.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>远程连接</li></ol><h2 id="SpringBoot项目打包Docker镜像"><a href="#SpringBoot项目打包Docker镜像" class="headerlink" title="SpringBoot项目打包Docker镜像"></a>SpringBoot项目打包Docker镜像</h2><p>此处参考<a href="https://github.com/xkcoding/spring-boot-demo">该开源项目</a></p><h3 id="手动打包"><a href="#手动打包" class="headerlink" title="手动打包"></a>手动打包</h3><blockquote><p>手动打包需要确保打包环境下有安装Docker</p></blockquote><ol><li>制作Dockerfile，例子如下：</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux"># 基础镜像FROM openjdk:8-jdk-alpine# 作者信息MAINTAINER &quot;Yangkai.Shen 237497819@qq.com&quot;# 添加一个存储空间VOLUME &#x2F;tmp# 暴露8080端口EXPOSE 8080# 添加变量，如果使用dockerfile-maven-plugin，则会自动替换这里的变量内容ARG JAR_FILE&#x3D;target&#x2F;spring-boot-demo-docker.jar# 往容器中添加jar包ADD $&#123;JAR_FILE&#125; app.jar# 启动镜像自动运行程序ENTRYPOINT [&quot;java&quot;,&quot;-Djava.security.egd&#x3D;file:&#x2F;dev&#x2F;urandom&quot;,&quot;-jar&quot;,&quot;&#x2F;app.jar&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>打包</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">docker build -t spring-boot-demo-docker .<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>运行</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">docker run -d -p 9090:8080 spring-boot-demo-docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="使用maven插件打包"><a href="#使用maven插件打包" class="headerlink" title="使用maven插件打包"></a>使用maven插件打包</h3><blockquote><p>使用maven插件打包须确保打包环境下有安装docker和maven</p></blockquote><ol><li>pom.xml中添加插件</li></ol><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dockerfile-version</span><span class="token punctuation">></span></span>1.4.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dockerfile-version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.spotify<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dockerfile-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>dockerfile-version<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>project.build.finalName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tag</span><span class="token punctuation">></span></span>project.version<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tag</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>buildArgs</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>JAR_FILE</span><span class="token punctuation">></span></span>target/project.build.finalName.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>JAR_FILE</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>buildArgs</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">></span></span>package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">></span></span>build<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>执行mvn打包命令，因为插件中 execution 节点配置了 package，所以会在打包的时候自动执行 build 命令</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">mvn clean package -Dmaven.test.skip&#x3D;true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>查看镜像</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">docker images<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>运行</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">docker run -d -p 9090:8080 spring-boot-demo-docker:1.0.0-SNAPSHOT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="本地单机搭建Portainer"><a href="#本地单机搭建Portainer" class="headerlink" title="本地单机搭建Portainer"></a>本地单机搭建Portainer</h2><h3 id="Portainer介绍"><a href="#Portainer介绍" class="headerlink" title="Portainer介绍"></a>Portainer介绍</h3><p>Portainer是Docker的图形化管理工具，提供状态显示面板、应用模板快速部署、容器镜像网络数据卷的基本操作（包括上传下载镜像，创建容器等操作）、事件日志显示、容器控制台操作、Swarm集群和服务等集中管理和操作、登录用户管理和控制等功能。功能十分全面，基本能满足中小型单位对容器管理的全部需求。</p><h3 id="单机版运行"><a href="#单机版运行" class="headerlink" title="单机版运行"></a>单机版运行</h3><ol><li>pull镜像</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">docker pull docker.io&#x2F;portainer&#x2F;portainer<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>运行容器</li></ol><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">docker run -d -p 9000:9000 \--restart&#x3D;always \-v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \--name prtainer-test \docker.io&#x2F;portainer&#x2F;portainer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>登录查看本地镜像与容器</li></ol><ul><li>访问<a href="http://ip:9000/">http://IP:9000</a></li><li>首次进入需要给管理员admin初始化密码</li><li>单机版选择local即可</li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElementUI表格表头高度设置问题</title>
      <link href="/articles/2020/06/16/1592303153618.html"/>
      <url>/articles/2020/06/16/1592303153618.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20180328.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h1 id="ElementUI表格表头高度设置问题"><a href="#ElementUI表格表头高度设置问题" class="headerlink" title="ElementUI表格表头高度设置问题"></a>ElementUI表格表头高度设置问题</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在做一个前端项目的时候遇到了一件奇怪的事，如下图所示（此处借用一下别人的截图）：<br><img src="https://b3logfile.com/file/2020/06/image-a473b602.png" alt="image.png"></p><ul><li><p>从图中可以看到默认值是184.8px，但是按照官方文档说的<br>设置行高后：<br><code>:header-row-style=&quot;&#123;&#39;height&#39;: &#39;100px&#39;,&#39;color&#39;:&#39;red&#39;&#125;&quot;</code><br>无法生效，调试发现，设置的值大于 184.4 行高设置生效：<br><code>:header-row-style=&quot;&#123;&#39;height&#39;: &#39;200px&#39;,&#39;color&#39;:&#39;red&#39;&#125;”</code><br>而设置行高小于 184.4 时表头高度不变。<a href="https://ask.csdn.net/questions/1082436">参考博客</a></p></li><li><p>我自己也遇到了类似的情况，按照网上很多博客说的进行了修改都还是无法更改行高，不过<a href="https://segmentfault.com/q/1010000021031371">这篇博客</a>解决了我的问题。主要是由于<code>&lt;el-container&gt;</code> 布局容器中的 <code>&lt;el-main&gt;Main&lt;/el-main&gt; </code>的原因</p></li></ul><p>需要如下修改，当然具体数值需要根据自己的需要确定：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;原始：.el-main &#123;    background-color: #e9eef3;    color: #333;    &#x2F;* text-align: center; *&#x2F;    line-height: 461;&#125;&#x2F;&#x2F;修改：.el-main &#123;    background-color: #e9eef3;    color: #333;    &#x2F;* text-align: center; *&#x2F;    line-height: 20px !important;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 问题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题解决 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iPad pro + 妙控键盘简单使用测评</title>
      <link href="/articles/2020/06/12/1591949845775.html"/>
      <url>/articles/2020/06/12/1591949845775.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20190114.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h1 id="iPad-pro-妙控键盘简单使用测评"><a href="#iPad-pro-妙控键盘简单使用测评" class="headerlink" title="iPad pro + 妙控键盘简单使用测评"></a>iPad pro + 妙控键盘简单使用测评</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>犹豫了许久还是入手了iPad pro 2020加上妙控键盘，正好遇上这次出差进行需求调研，考虑到天气的炎热以及短时间出差，所以此次没带笨重的开发机而是带了这两个，经过一个周的带妙控键盘使用和一个多月的iPad本体使用，这里做一个简单的使用测评。</p><p><img src="https://b3logfile.com/file/2020/06/image-d3c268ac.jpeg" alt="image.jpeg"></p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li><p>老实说用上了苹果的生态系统你会感觉有些时候是非常舒适的，比如文件同步，隔空投递，隔空复制粘贴之类的，并且由于操作系统的统一所以在一些文件的操作上是无缝衔接的，这个是对比windows最大的不同；</p></li><li><p>iPad pro 2020的性能自然不必说，并且由于是全面屏加双扬声器确实在看视频上有很大的优势，加上苹果一如既往优秀的屏幕素质，真的很能理解所谓的”买前生产力，买后爱奇艺”的说法，因为这个看视频确实很舒服；</p></li><li><p>妙控键盘出色的输入和触控板体验。老实说我也是第一次这么久使用苹果的触控板和键盘，苹果的触控板不愧为目前最优秀的，顺滑感和较为人性的手势之类的在自身平台软件的操作上十分舒服。并且今年也修改了之前蝶式键盘的设计，我曾经去北京出差时专门去体验过mbp的蝶式键盘，可以说就是在一块钢板上进行输入，虽然这样使得机身变得更薄但是我认为牺牲输入体验还是不和我口味，而今年修改回来的剪刀式键盘输入体验就好了很多，虽说还是不能和tp系列相比但是已经有了较为舒服的键程，输入起来也不累，本篇文章就是在妙控键盘上输入的。</p></li><li><p>自带文档软件体验优秀。这次出差也是我第一次使用苹果自带的numbers，pages软件。由于是自家的软件所以在配合妙控键盘上比较顺畅，相比而言wps对于妙控键盘的适配还有些不足。numbers和pages都支持导出为excel、word、pdf文件，对于一些格式简单的文档可以说非常舒服，但是对于格式复杂的文档会是什么情况不得而知，目前还没有遇到。</p></li><li><p>一些优秀软件的配合。提起iPad就不得不提经常在b站知乎上看到推荐的notability和goodnotes，两者配合二代笔的体验的确十分优秀，但是目前自己还未完全熟练使用，所以目前我更偏向于用margin note来阅读pdf，因为我更喜欢思维导图的方式来梳理所学的知识，这几天抽空在这上面读完了阿里的企业架构转型之道一书，一方面不得不承认阿里积累的技术真的很强，另一方面也感叹自己还有太多太多要学习的东西。<br><img src="https://b3logfile.com/file/2020/06/image-dc393897.png" alt="image.png"></p></li></ul><ul><li>Procreate延续板绘兴趣。在iPad pro上用二代笔进行Procreate的板绘体验也是十分出色，之前自己使用的是Wacom的入门级板子，虽说自己还记得一些素描的手感但是在板子上画当初也适应了蛮长时间。而有了iPad则可以看着画了，加上二代笔的优秀触控，这个体验的确很舒服（用了很多舒服这个词，但是不得不说好的产品就应该是让人用着是舒服的），作为兴趣就慢慢来吧。<br><img src="https://b3logfile.com/file/2020/06/image-a534aa92.png" alt="image.png"></li></ul><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ul><li><p>个人觉得最大的缺点还是在于重量。 iPad pro本身其实不重，但是加上妙控键盘已经能够和一些轻薄本相比了，虽然出差背在背上感觉很轻，但是当拿在手里的时候还是感觉很有份量的。但考虑到为了保证整体的平衡这个我还是能够接受，毕竟比起游戏本还是轻了太多；</p></li><li><p>轻度办公。苹果广告语说下一台电脑何必是电脑我感觉还是有点夸大，因为平板能做的毕竟还是不如笔电的。举个例子，且不说正版软件收费的问题，我如果要远程连接数据库，或者说要进行一些代码的编写，目前iPadOS上的软件还是不如笔电上的来的方便，并且也由于操作系统的不同，如何在平板上进行开发我也是一头雾水，当然我觉得平板还是只适合轻度办公与产品演示。</p></li><li><p>Safari对flash的不支持。目前仍然有一些网站使用flash进行视频播放，但是iPad的Safari无法安装flash插件导致无法播放视频，这个的确有时很影响体验，因为同样的网站手机上使用Safari是可以播放的，而且目前很多网站也没有对平板的比例进行适配，使得网页比例失调。</p></li><li><p>大部分时候妙控键盘和二代笔的相斥。因为使用场景的原因，使得你很难同时使用妙控键盘和二代笔，当然从设计上来说你有了键盘自然也大概率不需要再手写了，但是对于我这种笔迹不好看的人来说两者如果能配合起来就好了。</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上是目前为止我自己的使用体验，总体来说肯定是优势大于缺点的，但是想着把iPad当成你下一台电脑使用还是有些力不从心，除非你的工作需求真的只是轻度办公。如果是学生党用作学习我感觉二代笔+k380还是最佳的选择。对于我自己而言，休闲时使用iPad来学习娱乐肯定是比笔电要舒服的，因为重量，也因为显示屏，并且在平板上阅读pdf，写写画画等真的是十分的惬意，就像学生时代喜欢在纸上写写画画一样，找到自己最舒服的使用方式才是最好的。</p>]]></content>
      
      
      <categories>
          
          <category> 生活分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 简评 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL相关学习与优化（持续更新）</title>
      <link href="/articles/2020/06/05/1591324820534.html"/>
      <url>/articles/2020/06/05/1591324820534.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20191122.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h2 id="1、or-与-UNION"><a href="#1、or-与-UNION" class="headerlink" title="1、or 与 UNION"></a>1、<code>or</code> 与 <code>UNION</code></h2><p><a href="https://leetcode-cn.com/problems/big-countries/">习题来源：595.大的国家</a><br>这道题较为简单，所以此处记录下<code>OR</code> 与 <code>UNION</code>的使用</p><ul><li>使用<code>or</code>与<code>UNION</code>在结果上差别不大</li><li><code>UNION</code>自带去重，若不想去重则使用<code>UNION ALL</code></li><li><code>where</code> 子句中对非索引列使用 <code>or</code> 会引起全表扫描，故在数据量较大的时候查找效率较低，通常建议使用 <code>UNION</code>代替 <code>or</code></li><li>同理对于索引列来最好使用 <code>union all</code>，因复杂的查询（包含运算等）将使 <code>or</code>、<code>in</code> 放弃索引而全表扫描，除非你能确定 <code>or</code>、<code>in</code> 会使用索引</li><li>对于只有非索引字段,就老老实实用 <code>or</code> 或者 <code>in</code>，因为非索引字段本来要全表扫描而 <code>union all</code> 只会成倍增加表扫描的次数</li><li>以上主要针对单表查询，对于多表联查来说，考虑的地方就多了，比如连接方式，查询表数据量分布、索引等，再结合单表的策略选择合适的关键字</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序员专用知识类网站推荐（持续更新）</title>
      <link href="/articles/2020/06/04/1591237014985.html"/>
      <url>/articles/2020/06/04/1591237014985.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20181009.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h1 id="程序员专用知识类网站推荐（持续更新）"><a href="#程序员专用知识类网站推荐（持续更新）" class="headerlink" title="程序员专用知识类网站推荐（持续更新）"></a>程序员专用知识类网站推荐（持续更新）</h1><h2 id="记录一些自己在平时学习工作中遇到的看到的有用的知识类网站，可以很好地扩充自身技能知识水平。"><a href="#记录一些自己在平时学习工作中遇到的看到的有用的知识类网站，可以很好地扩充自身技能知识水平。" class="headerlink" title="记录一些自己在平时学习工作中遇到的看到的有用的知识类网站，可以很好地扩充自身技能知识水平。"></a>记录一些自己在平时学习工作中遇到的看到的有用的知识类网站，可以很好地扩充自身技能知识水平。</h2><ul><li><p><a href="https://doocs.gitee.io/advanced-java/#/">互联网Java工程师进阶知识完全扫盲</a></p></li><li><p><a href="https://quanke.gitbooks.io/design-pattern-java/content/">设计模式Java版</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 知识分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 网站推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7部署Sonarqube6.7.4</title>
      <link href="/articles/2020/05/26/1590487196412.html"/>
      <url>/articles/2020/05/26/1590487196412.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20200512.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h1 id="CentOS7-部署-Sonarqube6-7-4"><a href="#CentOS7-部署-Sonarqube6-7-4" class="headerlink" title="CentOS7 部署 Sonarqube6.7.4"></a>CentOS7 部署 Sonarqube6.7.4</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在学习 Jenkins 自动化集成的过程中学习了 Sonarqube 这个代码审查工具的用法，觉得十分不错，此处记录一下单独部署使用的过程，安装版本为 6.7.4，流程参考<a href="https://www.jianshu.com/p/349b4a0ac5b8">此博客</a>，下载链接如下：<a href="https://pan.baidu.com/s/19XnSM_i7cgjQCjIwj5WdAw">s8nx</a></p><h2 id="具体安装步骤"><a href="#具体安装步骤" class="headerlink" title="具体安装步骤"></a>具体安装步骤</h2><pre class="line-numbers language-none"><code class="language-none"># 1 准备工作# 1.1 服务器上传zip包# 1.2 安装unzip解压工具yum install -y unzip# 1.3 解压unzip sonarqube-6.7.4.zip# 1.4 新建文件夹并转移文件mkdir &#x2F;opt&#x2F;sonarmv sonarqube-6.7.4&#x2F;* &#x2F;opt&#x2F;sonar# 1.5 创建新用户。由于ES不能使用系统自带的root账户登录，所以需要建立新的用户useradd sonar# 1.6 赋予权限chown -R sonar. &#x2F;opt&#x2F;sonar# 2 Sonarqube配置修改# 2.1 sonar.properties修改vim &#x2F;opt&#x2F;sonarqube-6.7.4&#x2F;conf&#x2F;sonar.properties# 具体配置如下：sonar.host.url&#x3D;http:&#x2F;&#x2F;localhost:9090sonar.jdbc.username&#x3D;数据库用户名sonar.jdbc.password&#x3D;数据库密码sonar.jdbc.url&#x3D;jdbc:mysql:&#x2F;&#x2F;数据库IP:3306&#x2F;sonar?useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf8&amp;rewriteBatchedStatements&#x3D;true&amp;useConfigs&#x3D;maxPerformancesonar.web.host&#x3D;0.0.0.0## 配置web访问的路径 这里必须要有 &#x2F; 前缀sonar.web.context&#x3D;&#x2F;sonar## web容器的端口号sonar.web.port&#x3D;9090# 2.2 需要注意的是Sonarqube默认9000端口，ES默认9001端口，这两个端口在服务器上均不能被占用，所以可根据实际情况进行修改，ES端口在下方配置中：# Elasticsearch port. Default is 9001. Use 0 to get a free port.# As a security precaution, should be blocked by a firewall and not exposed to the Internet.# sonar.search.port&#x3D;9001# 此处需要放开配置进行修改# 3 运行启动# 3.1 切换目录cd &#x2F;opt&#x2F;sonarqube-6.7.4# 3.2 相关操作# 启动su sonar .&#x2F;bin&#x2F;linux-x86-64&#x2F;sonar.sh start # 查看状态su sonar .&#x2F;bin&#x2F;linux-x86-64&#x2F;sonar.sh status# 停止 su sonar .&#x2F;bin&#x2F;linux-x86-64&#x2F;sonar.sh stop # 重新启动su sonar .&#x2F;bin&#x2F;linux-x86-64&#x2F;sonar.sh start# 查看日志tail -f logs&#x2F;sonar.logs # 3.3 若启动报错可查看logs目录下的文件信息进行排查# 4 访问Sonarqube，默认账户：admin&#x2F;adminhttp:&#x2F;&#x2F;xxx.xxx.xxx.xxx:9090<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="中文汉化"><a href="#中文汉化" class="headerlink" title="中文汉化"></a>中文汉化</h2><ul><li>汉化版本参考如下 <a href="https://github.com/SonarQubeCommunity/sonar-l10n-zh/tree/sonar-l10n-zh-plugin-8.3">github</a></li><li>需要选择下载对应版本的汉化 jar 包，例如此处安装 6.7.4 对应 <a href="https://github.com/SonarQubeCommunity/sonar-l10n-zh/releases/tag/sonar-l10n-zh-plugin-1.19">1.19 版本</a><br><img src="https://b3logfile.com/file/2020/05/image-b47aa498.png" alt="image.png"></li><li>下载后放入 <code>/opt/sonar/extensions/plugins</code> 目录下再重新启动即可</li></ul><h2 id="使用后补充"><a href="#使用后补充" class="headerlink" title="使用后补充"></a>使用后补充</h2><p>最近在进行分析的时候总会出现错误，IDEA终端报错：<br><img src="https://b3logfile.com/file/2020/06/image-8312347a.png" alt="image.png"></p><p>查看日志文件发现如下信息：</p><pre class="line-numbers language-none"><code class="language-none">Caused by: com.mysql.jdbc.PacketTooBigException: Packet for query is too large (6146004 &gt; 4194304). You can change this value on the server by setting the max_allowed_packet&#39; variable.at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3678)at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2509)at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2490)at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)at com.mysql.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2079)at com.mysql.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2013)at com.mysql.jdbc.PreparedStatement.executeLargeUpdate(PreparedStatement.java:5104)at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1998)at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)at org.sonar.db.ce.CeTaskInputDao.insert(CeTaskInputDao.java:53)... 45 common frames omitted<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>经过搜索后发现这个是mysql的设置max_allowed_packet太小的原因，可以通过</p><pre class="line-numbers language-none"><code class="language-none">show VARIABLES like &#39;%max_allowed_packet%&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看具体值，此处需要将这个值修改大。</p><pre class="line-numbers language-none"><code class="language-none"># 修改mysql配置文件vim &#x2F;etc&#x2F;my.cnf# 添加max_allowed_packet配置，1073741824为1024*1024*1024，即1G，此处可以修改为其他合适的值max_allowed_packet&#x3D;1073741824# wq保存后，重启mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后可以再次通过</p><pre class="line-numbers language-none"><code class="language-none">show VARIABLES like &#39;%max_allowed_packet%&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看是否修改成功</p>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用阿里云服务器跳转访问公司内网</title>
      <link href="2020/05/12/shi-yong-a-li-yun-fu-wu-qi-tiao-zhuan-fang-wen-gong-si-nei-wang/"/>
      <url>2020/05/12/shi-yong-a-li-yun-fu-wu-qi-tiao-zhuan-fang-wen-gong-si-nei-wang/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20180424.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h1 id="使用阿里云服务器跳转访问公司内网"><a href="#使用阿里云服务器跳转访问公司内网" class="headerlink" title="使用阿里云服务器跳转访问公司内网"></a>使用阿里云服务器跳转访问公司内网</h1><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>有段时间没更新了，这段时间忙于手里当前项目的移动端开发，加上还要对PC端的代码进行CodeReview与功能测试完善，后面会慢慢补上。由于移动端也是第一次接触开发，在使用uni-app时也遇到了很多问题，后面项目差不多时我也会一一整理一下。</p><h2 id="博客目的"><a href="#博客目的" class="headerlink" title="博客目的"></a>博客目的</h2><p>公司内网部署CDH后，数栖平台需要访问CDH集群，所以需要内网穿透或者公网IP，此处使用内网穿透的方式，用自己的阿里云服务器做跳板测试。具体流程参考<a href="https://blog.csdn.net/a568713197/article/details/87897342">该博客</a></p><h2 id="具体流程"><a href="#具体流程" class="headerlink" title="具体流程"></a>具体流程</h2><p>参考博客使用的是0.13.0版本，此处使用最新版0.33.0</p><h3 id="1、下载frp包"><a href="#1、下载frp包" class="headerlink" title="1、下载frp包"></a>1、下载frp包</h3><pre class="line-numbers language-none"><code class="language-none">wget https:&#x2F;&#x2F;github.com&#x2F;fatedier&#x2F;frp&#x2F;releases&#x2F;download&#x2F;v0.33.0&#x2F;frp_0.33.0_linux_amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、新建frp目录"><a href="#2、新建frp目录" class="headerlink" title="2、新建frp目录"></a>2、新建frp目录</h3><pre class="line-numbers language-none"><code class="language-none">mkdir -p &#x2F;usr&#x2F;local&#x2F;frp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3、解压到该目录"><a href="#3、解压到该目录" class="headerlink" title="3、解压到该目录"></a>3、解压到该目录</h3><pre class="line-numbers language-none"><code class="language-none">tar -zxvf  frp_0.33.0_linux_amd64.tar.gz -C &#x2F;usr&#x2F;local&#x2F;frp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4、进入解压目录-frp-0-33-0-linux-amd64，这里主要关注-4-个文件，分别是-frpc、frpc-ini-和-frps、frps-ini，前者两个文件是客户端所关注文件，后者两个文件是服务端所关注两个文件。"><a href="#4、进入解压目录-frp-0-33-0-linux-amd64，这里主要关注-4-个文件，分别是-frpc、frpc-ini-和-frps、frps-ini，前者两个文件是客户端所关注文件，后者两个文件是服务端所关注两个文件。" class="headerlink" title="4、进入解压目录 frp_0.33.0_linux_amd64，这里主要关注 4 个文件，分别是 frpc、frpc.ini 和 frps、frps.ini，前者两个文件是客户端所关注文件，后者两个文件是服务端所关注两个文件。"></a>4、进入解压目录 frp_0.33.0_linux_amd64，这里主要关注 4 个文件，分别是 frpc、frpc.ini 和 frps、frps.ini，前者两个文件是客户端所关注文件，后者两个文件是服务端所关注两个文件。</h3><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;usr&#x2F;local&#x2F;frp&#x2F;frp_0.33.0_linux_amd64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img.hacpai.com/file/2020/05/image-a8b4a8ab.png" alt="image.png"></p><h3 id="5、配置服务端（公网服务器），首先删掉-frpc、frpc-ini-两个文件，然后再进行配置"><a href="#5、配置服务端（公网服务器），首先删掉-frpc、frpc-ini-两个文件，然后再进行配置" class="headerlink" title="5、配置服务端（公网服务器），首先删掉 frpc、frpc.ini 两个文件，然后再进行配置"></a>5、配置服务端（公网服务器），首先删掉 frpc、frpc.ini 两个文件，然后再进行配置</h3><pre class="line-numbers language-none"><code class="language-none">vim .&#x2F;frps.ini [common]bind_port &#x3D; 7000           #与客户端绑定的进行通信的端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="6、配置客户端（内网服务器），客户端同样需要下载包再解压的操作，首先删掉-frps、frps-ini-两个文件，然后再进行配置。"><a href="#6、配置客户端（内网服务器），客户端同样需要下载包再解压的操作，首先删掉-frps、frps-ini-两个文件，然后再进行配置。" class="headerlink" title="6、配置客户端（内网服务器），客户端同样需要下载包再解压的操作，首先删掉 frps、frps.ini 两个文件，然后再进行配置。"></a>6、配置客户端（内网服务器），客户端同样需要下载包再解压的操作，首先删掉 frps、frps.ini 两个文件，然后再进行配置。</h3><pre class="line-numbers language-none"><code class="language-none">vim .&#x2F;frpc.ini[common]server_addr &#x3D; x.x.x.x #公网服务器ipserver_port &#x3D; 7000            #与服务端bind_port一致 # 公网通过ssh访问内部服务器[ssh]type &#x3D; tcp              #连接协议local_ip &#x3D; 127.0.0.1   #内网服务器ip（127.0.0.1或者内网IP）local_port &#x3D; 22         #ssh默认端口号remote_port &#x3D; 6000      #自定义的访问内部ssh端口号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7、登录阿里云服务器配置安全组"><a href="#7、登录阿里云服务器配置安全组" class="headerlink" title="7、登录阿里云服务器配置安全组"></a>7、登录阿里云服务器配置安全组</h3><p><img src="https://img.hacpai.com/file/2020/05/image-4e07b915.png" alt="image.png"></p><blockquote><p>注意图中红框部分与配置文件对应</p></blockquote><h3 id="8、启动frp"><a href="#8、启动frp" class="headerlink" title="8、启动frp"></a>8、启动frp</h3><pre class="line-numbers language-none"><code class="language-none"># 客户端执行# 前台启动.&#x2F;frpc -c .&#x2F;frpc.ini# 后台启动nohup .&#x2F;frpc -c .&#x2F;frpc.ini &amp;# 服务器执行# 前台启动.&#x2F;frps -c .&#x2F;frps.ini# 后台启动nohup .&#x2F;frps -c .&#x2F;frps.ini &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9、查看状态"><a href="#9、查看状态" class="headerlink" title="9、查看状态"></a>9、查看状态</h3><pre class="line-numbers language-none"><code class="language-none">cat nohup.out# 客户端[I] [service.go:282] [9e7aff8044210603] login to server success, get run id [9e7aff8044210603], server udp port [0][I] [proxy_manager.go:144] [9e7aff8044210603] proxy added: [ssh][I] [control.go:179] [9e7aff8044210603] [ssh] start proxy success# 服务端[I] [service.go:432] [9e7aff8044210603] client login info: ip [x.x.x.x:43460] version [0.33.0] hostname [] os [linux] arch [amd64][I] [tcp.go:63] [9e7aff8044210603] [ssh] tcp proxy listen port [6000][I] [control.go:445] [9e7aff8044210603] new proxy [ssh] success<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10、通过阿里云服务器登录内网"><a href="#10、通过阿里云服务器登录内网" class="headerlink" title="10、通过阿里云服务器登录内网"></a>10、通过阿里云服务器登录内网</h3><pre class="line-numbers language-none"><code class="language-none">ssh -oPort&#x3D;6000 root@x.x.x.x# root为内网用户名# x.x.x.x为外网服务器地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>近期工作中遇到的一些问题及解决方式记录（持续更新）</title>
      <link href="/articles/2020/03/06/1583460362442.html"/>
      <url>/articles/2020/03/06/1583460362442.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20180907.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h1 id="近期工作中遇到的一些问题及解决方式记录（持续更新）"><a href="#近期工作中遇到的一些问题及解决方式记录（持续更新）" class="headerlink" title="近期工作中遇到的一些问题及解决方式记录（持续更新）"></a>近期工作中遇到的一些问题及解决方式记录（持续更新）</h1><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>很久没更新了，主要因为疫情的影响基本都是在家远程办公，导致在项目开发过程中与同事的沟通交流比较频繁但确效率较低，使得项目推进比较缓慢，导致工作较为繁忙。到现在可以稍微缓口气，余下的工作基本都是重复性较大的开发以及优化调试。此处记录一下这几个月在开发过程中遇到的一些问题以及自己解决的方式，前后端都有，就一起记录了。<br>PS：最近将 ECS 的宽带调整到了 2M，所以访问速度应该会比以前更快一些了。</p><h2 id="前端部分"><a href="#前端部分" class="headerlink" title="前端部分"></a>前端部分</h2><p>项目使用的是 eladmin 开源框架，所以前端部分采用的是 vue 的生态系统。</p><h3 id="问题一：blur-事件的重复触发"><a href="#问题一：blur-事件的重复触发" class="headerlink" title="问题一：blur 事件的重复触发"></a>问题一：blur 事件的重复触发</h3><blockquote><p>需求描述：客户提出需要在 Web 页面上体现表单、表格的修改痕迹；</p></blockquote><blockquote><p>实现方式：在页面加载时和父组件数据更新时进行监听，发生变化则异步查询所属对象对应的修改记录，给输入框绑定 blur 失焦事件，通过索引值和字段名与原数据进行比较的方式重新构建修改痕迹对象传入 elementUI 的时间轴组件进行展示；</p></blockquote><blockquote><p>问题描述：在失焦事件触发时会弹出修改原因的记录框，但是如果此时在输入的过程中输入法异常或者是其他的误操作会导致在点击弹出框取消或者确认按钮后，该失焦事件一直触发，使得弹出框一直弹出且无法关闭；</p></blockquote><blockquote><p>解决方式：在查阅相关博客后将 blur 失焦事件更换为 change 事件得以解决；</p></blockquote><p>相关代码如下：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scope.row.testProject==<span class="token punctuation">'</span>加压频率<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scope.row.valueA<span class="token punctuation">"</span></span> <span class="token attr-name">:readonly</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>status>1<span class="token punctuation">"</span></span> <span class="token attr-name">&lt;!--首先触发focus方法，记录修改前的值--</span><span class="token punctuation">></span></span>@focus="getModifyBefore(scope.row.valueA)"<span class="token comment">&lt;!--如果数据修改则再触发change方法，将相关信息记录到临时数组中，保存时一起提交到后台--></span>@change="trickModify(scope.$index,'valueA',scope.row.valueA)"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prepend<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scope.row.valueAHistoryFlag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-popover</span>                    <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top-start<span class="token punctuation">"</span></span>                    <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>250<span class="token punctuation">"</span></span>                    <span class="token attr-name">@show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parseList(scope.$index,<span class="token punctuation">'</span>valueA<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span>                    <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modify_history</span> <span class="token attr-name">:dataList</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>infoObject<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reference<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>el-icon-warning-outline<span class="token punctuation">"</span></span> <span class="token attr-name">circle</span><span class="token punctuation">/></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-popover</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>append<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hz<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>解决原因记录：<br>此处引用<a href="https://blog.csdn.net/yiifaa/article/details/52452153">该博客</a><br>blur 与 change 事件在绝大部分的情况下表现都非常相似，输入结束后，离开输入框，会先后触发 change 与 blur，唯有两点例外。</p><ol><li>没有进行任何输入时，不会触发 change<br>在这种情况下，输入框并不会触发 change 事件，但一定会触发 blur 事件。在判断表单的修改状态时，这种差异会非常有用，通过 change 事件能轻易地找到哪些字段发生了变更以及其值的变更轨迹。</li><li>输入后值并没有发生变更<br>这种情况是指，在没有失焦的情况下，在输入框内进行返回的删除与输入操作，但最终的值与原值一样，这种情况下，keydown、input、keyup、blur 都会触发，但 change 依旧不会触发。</li></ol></blockquote><blockquote><p>总结：根据上述描述会发现 change 事件会在一定程度上避免一些因为异常或者其他原因导致的失焦事件的一直触发，并且因为会自动与之前的数据进行比较所以也减少了人为的数据比较的代码，简化了开发，所以此处采用 change 事件效果会更好。</p></blockquote><h3 id="问题二：ElementUI-的-el-table-组件列对不齐"><a href="#问题二：ElementUI-的-el-table-组件列对不齐" class="headerlink" title="问题二：ElementUI 的 el-table 组件列对不齐"></a>问题二：ElementUI 的 el-table 组件列对不齐</h3><blockquote><p>问题描述：前端使用的 ElementUI 框架，在使用 el-table 组件的过程中发现一旦手动设置列宽则会出现表格线对不齐的情况<br><img src="https://img.hacpai.com/file/2020/03/image-9c65ef84.png" alt="image.png"></p></blockquote><blockquote><p>解决方式：在 app.vue 中加入以下 CSS 代码得以解决；</p></blockquote><p>相关代码如下：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body .el-table th.gutter</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> table-cell <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body .el-table colgroup.gutter</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> table-cell <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>总结：估计应该是部分样式覆盖或者是影响造成这种现象，在全局设置 CSS 后可以解决。</p></blockquote><h2 id="后端部分"><a href="#后端部分" class="headerlink" title="后端部分"></a>后端部分</h2><p>项目使用的是 eladmin 开源框架，所以后端部分采用的是 SpringBoot 的生态系统。</p><h3 id="问题一：The-user-specified-as-a-definer-‘criss’-’-’-does-not-exist"><a href="#问题一：The-user-specified-as-a-definer-‘criss’-’-’-does-not-exist" class="headerlink" title="问题一：The user specified as a definer (‘criss’@’%’) does not exist"></a>问题一：The user specified as a definer (‘criss’@’%’) does not exist</h3><blockquote><p>问题描述：因为开发环境的原因，工程所用的数据库包括我自己的这台ECS中的Mysql，还有公司内网的Mysql。在配置文件yml中修改数据库连接和用户密码后，执行某方法出现该问题；</p></blockquote><blockquote><p>具体错误代码：</p></blockquote><pre class="line-numbers language-none"><code class="language-none">Caused by: java.sql.SQLException: The user specified as a definer (&#39;criss&#39;@&#39;%&#39;) does not existat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)at com.mysql.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2079)at com.mysql.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2013)at com.mysql.jdbc.PreparedStatement.executeLargeUpdate(PreparedStatement.java:5104)at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1998)at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_executeUpdate(FilterChainImpl.java:3201)at com.alibaba.druid.filter.FilterAdapter.preparedStatement_executeUpdate(FilterAdapter.java:1091)at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_executeUpdate(FilterEventAdapter.java:491)at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_executeUpdate(FilterChainImpl.java:3199)at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.executeUpdate(PreparedStatementProxyImpl.java:194)at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:256)at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)... 145 more<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>解决方式：重新构建自定义函数和触发器；</p></blockquote><blockquote><p>解决原因记录：<br>导致该问题的主要原因在于数据库的切换。之前在远程数据库创建了函数和触发器，而在创建时会标记definer，如下所示。<br><img src="https://img.hacpai.com/file/2020/03/image-b7a737ac.png" alt="image.png"><br>所以，在切换数据库后，因为是直接运行的sql脚本，所以会导致在公司内网数据库中该definer仍然是criss，但是公司内网却是以root进行登录的。所以需要重新构建函数和触发器更换definer的值。</p></blockquote><blockquote><p>总结：实际上开发环境最好还是稳定一点，该项目较为特殊的是客户目前并没有提供内网开发环境，所以导致环境的切换，从而使得definer的值也随着数据库的切换失效了。同理，视图也是，更换环境后需要重新创建。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 问题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Java </tag>
            
            <tag> 前端 </tag>
            
            <tag> 问题记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Oracle与MybatisPlus在使用时遇到的一些问题</title>
      <link href="/articles/2019/12/27/1577437127246.html"/>
      <url>/articles/2019/12/27/1577437127246.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20190920.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h1 id="关于Oracle与MybatisPlus在使用时遇到的一些问题"><a href="#关于Oracle与MybatisPlus在使用时遇到的一些问题" class="headerlink" title="关于Oracle与MybatisPlus在使用时遇到的一些问题"></a>关于Oracle与MybatisPlus在使用时遇到的一些问题</h1><h2 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h2><p>问题的起源主要来自于最近完成的部分接口代码的开发，由于没有测试环境所以只能按照别人写好的逻辑思路进行完善，项目连接Oracle数据库并且持久层使用的是MybatisPlus（以下简称MP）。</p><p>但是我发现在使用MP，继承BaseMapper后，对方仍然在mapper里写了一个insertOne的方法，考虑到工作量比较大并且时间紧迫，所以如果不解决该问题会导致花较多的时间来完成每个实体类的insertOne的SQL编写。<br><img src="https://img.hacpai.com/file/2019/12/QQ%E6%88%AA%E5%9B%BE20191227144515-1e2ffb4c.png" alt="QQ截图20191227144515.png"></p><p>在询问后，对方表示因为时间比较紧所以在使用MP的代码生成器生成代码后，直接进行数据的插入会导致异常，所以采用自定义SQL的方式完成功能。</p><h2 id="整个解决过程记录"><a href="#整个解决过程记录" class="headerlink" title="整个解决过程记录"></a>整个解决过程记录</h2><h3 id="MP配置"><a href="#MP配置" class="headerlink" title="MP配置"></a>MP配置</h3><p>在查阅MP官方文档后，发现首先之前的代码中并没有在application.yml中配置MP的相关属性，所以优先先加入官方的配置属性并更改相关信息。</p><h3 id="主键策略"><a href="#主键策略" class="headerlink" title="主键策略"></a>主键策略</h3><p>再者考虑的就是主键策略的问题，该项目的实体类的主键ID均使用了<code>@TableId</code>，但是却没有指定主键的生成策略，而该注解默认的生成策略是<code>IdType type() default IdType.NONE;</code>，所以在后期业务中手动设置实体类的id为UUID后（此处并未使用Sequence作为主键），在插入数据库时会导致异常（此处存疑，后面测试发现的确会以手动设置的为准，但是这个问题在开发时确实遇到过）。实际上MP代码生成器是可以对这些策略进行配置的，但是要做的工作比较多。</p><p>由于之前也未使用过Oracle，所以首先在公司内网的Oracle进行了小测试。</p><p>由于项目使用UUID所以在yml中配置<code>mybatis-plus.global-config.id-type: 3</code></p><p>测试1：不设置生成策略，实体类手动设置主键UUID，插入成功；<br>测试2：设置生成策略IdType=INPUT，实体类手动设置主键UUID，插入成功；<br>测试3：设置生成策略IdType=UUID，实体类不设置主键，插入成功；<br>测试4：不进行yml配置，不设置生成策略，实体类手动设置主键UUID，插入异常<code>Caused by: java.lang.IllegalArgumentException: argument type mismatch</code></p><p>测试未进行完成，但是可以发现yml的配置是比较关键的。同时也测试了如果生成策略设置为UUID，然后由手动在实体类设置UUID，最终插入数据库的是手动设置的UUID。由于自身翻阅源码的能力还不够，所以此处猜测是有一定的优先级关系，MP在插入之前会检测是否有ID存在，如果有就用手动设置的，没有在按照设置的策略生成主键。</p><p>修改到这里已经能够顺利插入数据库了，接下来记录另一个遇到的关键字冲突的问题。</p><h3 id="关键字冲突"><a href="#关键字冲突" class="headerlink" title="关键字冲突"></a>关键字冲突</h3><p>开发的接口主要是用于调取别的接口数据并存入数据库，然后给予回调反馈。目前遇到冲突的是<code>shr</code>字段，表中为审核人或者收货人，这与Mybatis的关键字<code>shr(&gt;&gt;)</code>冲突了，所以会导致如下错误：</p><pre class="line-numbers language-none"><code class="language-none">Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression &#39;shr ! &#x3D; &#39;&#39;and  shr ！&#x3D;null&#39;. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: &#39;shr ! &#x3D; &#39;&#39;and  shr ！&#x3D;null&#39;[org.apache.ibatis.ognl.ParseException: Encountered &quot; &quot;shr&quot;Was expecting one of:    &lt;EOF&gt;     &quot;,&quot; ...    &quot;&#x3D;&quot; ...    &quot;?&quot; ...    &quot;||&quot; ...    &quot;or&quot; ...    &quot;&amp;&amp;&quot; ...    &quot;and&quot; ...    &quot;shr&quot; ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>顺便此处附上所有可能冲突的字段图：<br><img src="https://img.hacpai.com/file/2019/12/12596656bdf9d3eb103aa042-9a62aab8.webp" alt="12596656bdf9d3eb103aa042.webp"></p><p>问题在于，从客户那里调用的接口是很早之前写的，所以会出现数据库字段名命名不规范的情况是很正常，但是如何插入新建的数据库呢，此次开发我这里并没有项目的环境，所以只能保持新建的数据库与原有的数据库一致。</p><blockquote><p>PS：设计数据库表字段的时候一定要慎重，尽量不要全部使用拼音缩写！</p></blockquote><h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h3><ol><li>从网上搜素的结果，有一部分说是给实体类属性上的TableField注解加上反引号，<br>即：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span><span class="token string">"`SHR`"</span><span class="token punctuation">)</span><span class="token keyword">private</span> <span class="token class-name">String</span> shr<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><p>但是测试后发现并不能解决这个问题，猜测可能会在xml文件中有效果，但此处是使用MP进行自动生成SQL和填充值。</p><ol start="2"><li>修改实体类属性名。此方法的确可以解决该问题，但是只是修改属性名会导致fastJSON在解析JSON字符串的时候失败，于是想到可以通过<code>@JSONField</code>注解指定为“shr”，即：<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"SHR"</span><span class="token punctuation">)</span><span class="token keyword">private</span> <span class="token class-name">String</span> shry<span class="token punctuation">;</span><span class="token annotation punctuation">@JSONField</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"shr"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getShry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> shry<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>修改后插入成功。</li></ol><p>或许有更简便的方式，待以后补充。</p>]]></content>
      
      
      <categories>
          
          <category> 问题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 问题解决 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7利用Nginx简易部署前端项目（更新离线安装步骤）</title>
      <link href="/articles/2019/12/10/1575945371968.html"/>
      <url>/articles/2019/12/10/1575945371968.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20181002.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h1 id="CentOS7-利用-Nginx-部署前端项目"><a href="#CentOS7-利用-Nginx-部署前端项目" class="headerlink" title="CentOS7 利用 Nginx 部署前端项目"></a>CentOS7 利用 Nginx 部署前端项目</h1><p>最近研究如何将 bpmn-js 与 vue 进行整合，方便工作流开发，但始终出现依赖未找到问题，故采用额外部署前端项目，再在平台引入链接访问的方式，此处记录一下如何简易在 Nginx 上部署一个前端项目，主要参考<a href="https://blog.csdn.net/wsbgmofo/article/details/78771255">该博客</a></p><h2 id="整体流程"><a href="#整体流程" class="headerlink" title="整体流程"></a>整体流程</h2><ol><li>下载并解压 Nginx，这里以 1.4.7 为例</li></ol><pre class="line-numbers language-none"><code class="language-none">wget http:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.4.7.tar.gztar -zxvf nginx-1.4.7.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="2"><li>安装 gcc 等依赖包</li></ol><pre class="line-numbers language-none"><code class="language-none">yum -y install gcc pcre-devel openssl openssl-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>开始安装 nginx</li></ol><pre class="line-numbers language-none"><code class="language-none"># cd进入nginx-1.4.7目录内# 配置，默认安装路径为&#x2F;usr&#x2F;local&#x2F;nginx.&#x2F;configure# 编译安装make&amp;&amp;make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>修改配置文件</li></ol><pre class="line-numbers language-none"><code class="language-none"># nginx-1.4.7&#x2F;conf&#x2F;nginx.confserver &#123;# 该虚拟主机监听的端口号        listen       8999;        # 该虚拟主机访问的域名或ip地址，多个可用空格隔开        server_name  localhost;# 编码        #charset utf-8;        #access_log  logs&#x2F;host.access.log  main;        location &#x2F; &#123;            # nginx下HTML文件夹，访问上述域名会检索此文件夹下的文件进行访问            # 可以将上传的dist目录修改为项目名            root   html&#x2F;bpmn;            # 输入网址（server_name：port）后，默认的访问页面            index  index.html index.htm;        &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li><p>上传前端 dist 文件夹至/usr/local/nginx/html，修改 dist 与上述配置文件配置的 root 后的路径一致</p></li><li><p>启动，默认安装在/usr/local/nginx/sbin/nginx</p></li></ol><pre class="line-numbers language-Linux" data-language="Linux"><code class="language-Linux">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -c &#x2F;nginx-1.4.7&#x2F;conf&#x2F;nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="1-其他命令"><a href="#1-其他命令" class="headerlink" title="1. 其他命令"></a>1. 其他命令</h3><pre class="line-numbers language-Linux" data-language="Linux"><code class="language-Linux"># 切换至&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin目录cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin# fast shutdown.&#x2F;nginx -s stop# graceful shutdown.&#x2F;nginx -s quit# reloading the configuration file.&#x2F;nginx -s reload# reopening the log files.&#x2F;nginx -s reopen<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-配置跨域"><a href="#2-配置跨域" class="headerlink" title="2. 配置跨域"></a>2. 配置跨域</h3><p>可以在 location 下配置完成跨域：</p><pre class="line-numbers language-Linux" data-language="Linux"><code class="language-Linux">add_header &#39;Access-Control-Allow-Origin&#39; &#39;*&#39;;add_header &#39;Access-Control-Allow-Credentials&#39; &#39;true&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-离线安装"><a href="#3-离线安装" class="headerlink" title="3. 离线安装"></a>3. 离线安装</h3><p>有时候没有 root 权限的时候就需要离线安装，并且也可以指定 nginx 的安装位置，下面记录一下具体的过程</p><h4 id="安装编译依赖包"><a href="#安装编译依赖包" class="headerlink" title="安装编译依赖包"></a>安装编译依赖包</h4><ol><li>切换到依赖包安装位置</li></ol><pre class="line-numbers language-Linux" data-language="Linux"><code class="language-Linux">cd &#x2F;home&#x2F;criss&#x2F;nginx&#x2F;package&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>上传依赖包<br><a href="https://pan.baidu.com/s/1AxOHSglVwvch4J4Ti4nVWA">提取码：mdmf</a></li><li>安装 pcre</li></ol><pre class="line-numbers language-Linux" data-language="Linux"><code class="language-Linux"># 解压tar -zxvf pcre-8.38.tar.gz# 切换目录cd pcre-8.38# 编译.&#x2F;configuremake &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>安装 zlib</li></ol><pre class="line-numbers language-Linux" data-language="Linux"><code class="language-Linux"># 解压tar -zxvf zlib-1.2.11.tar.gz# 切换目录cd zlib-1.2.11# 编译.&#x2F;configuremake &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>安装 ssl</li></ol><pre class="line-numbers language-Linux" data-language="Linux"><code class="language-Linux"># 解压tar -zxvf openssl-1.0.1t.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="自定义安装-Nginx"><a href="#自定义安装-Nginx" class="headerlink" title="自定义安装 Nginx"></a>自定义安装 Nginx</h4><pre class="line-numbers language-none"><code class="language-none"># 解压tar -zxvf nginx-1.4.7.tar.gz# 切换目录cd nginx-1.4.7# 设置常量# 自定义位置 &#x3D; &#x2F;home&#x2F;criss&#x2F;nginx（需提前创建好目录）# 最好是删除换行后执行.&#x2F;configure\--prefix&#x3D;&#x2F;自定义位置&#x2F; \                                      --sbin-path&#x3D;&#x2F;自定义位置&#x2F;nginx\--conf-path&#x3D;&#x2F;自定义位置&#x2F;nginx.conf \--pid-path&#x3D;&#x2F;自定义位置&#x2F;nginx.pid \--with-http_ssl_module \# 下方注意换成上述3个依赖安装的具体目录--with-pcre&#x3D;&#x2F;home&#x2F;criss&#x2F;nginx&#x2F;package&#x2F;pcre-8.38 \--with-zlib&#x3D;&#x2F;home&#x2F;criss&#x2F;nginx&#x2F;package&#x2F;zlib-1.2.11 \--with-openssl&#x3D;&#x2F;home&#x2F;criss&#x2F;nginx&#x2F;package&#x2F;openssl-1.0.1t# 编译安装make &amp;&amp; make install                                  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 前端 </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小说推荐：《诡秘之主》- 爱潜水的乌贼</title>
      <link href="/articles/2019/12/03/1575356672479.html"/>
      <url>/articles/2019/12/03/1575356672479.html</url>
      
        <content type="html"><![CDATA[<h1 id="小说推荐：《诡秘之主》-爱潜水的乌贼"><a href="#小说推荐：《诡秘之主》-爱潜水的乌贼" class="headerlink" title="小说推荐：《诡秘之主》- 爱潜水的乌贼"></a>小说推荐：《诡秘之主》- 爱潜水的乌贼</h1><p><img src="https://img.hacpai.com/file/2019/12/7CDBAE1DF27A2896E93034F1DF192769-0dfa8495.JPG" alt="7CDBAE1DF27A2896E93034F1DF192769.JPG"></p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>有一段时间没更新博客了，最近忙于项目文档的编写、页面设计还有公司招聘相关的事情，不过该写的还是要写，不过在开始更新新的技术博客之前先推荐一本小说，正好目前刚完结第五部，那就是乌贼的《诡秘之主》，一下简称诡秘。随着《全球高武》的高开低走（前期虽然看着很爽但是方平到绝巅之后就感觉小说战力崩坏了，更别说爽文在基础上还是要比有深度的小说低一些），诡秘可以称为近几年我读过的最优秀的小说，没有之一。</p><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><p>诡秘按照百科介绍是一本异世大陆小说，掺杂了克苏鲁风格、SCP 基金会元素、第一次工业革命时代风情和蒸汽朋克情怀。<br>就个人而言，对于克苏鲁和 SCP 的了解只有一点，但是比较喜欢蒸汽朋克，实际在阅读过程中，诡秘基本已经确定了首都贝克兰德是以维多利亚时期的伦敦为原型，文中国家可以当作同时期的英国、法国来理解，一来是文中提到的各国的个性比如浪漫开放、保守文雅可以和现实对应上，二来文中的各个时期的战争也可以看出是根据历史上的战争为原型的，所以虽然是西方类的小说但是实际上理解要容易很多，更别说乌贼为了这本小说查阅了大量文献资料以保证文章的真实可信，不过传统西方类小说的缺点仍就存在，那就是记不住名字……不过诡秘比较好的是人物的塑造非常成功，除了一些酱油人物外基本还是分得清的。</p><h2 id="等级划分"><a href="#等级划分" class="headerlink" title="等级划分"></a>等级划分</h2><p>先说说等级划分方便后文理解，不过由于诡秘的设定比较多，这里只介绍部分。</p><p>诡秘中的力量来源于最初造物主，文中称为非凡特性，最初造物主死后将非凡特性分散，这样诡秘的第一个核心设定就出来了，那就是非凡特性的守恒，因为来源是固定的，不会无故增加减少，所以诡秘并不会出现其他小说圣阶多如狗的情况，这也和传统的修炼小说区分开，因为修炼小说的力量都是自身修炼来的，更强调开发潜力，而诡秘由于力量是外来的，所以控制很难，更容易失控，实际上可以理解为对修炼走火入魔的另一种改善。</p><p>诡秘的等级则参考的是塔罗牌，塔罗牌共 22 张主牌，所以小说中对应 22 条序列，可以理解为 22 个职业，和其他小说不同的是，由于非凡特性守恒的设定，这 22 个职业并不是完全不同，而是存在部分特性“雨露均沾”，比如占卜、隐秘等，这些特性并不是某一个序列独有的，而是由数个序列共享，只不过在不同的序列表现会有不同。等级上分为序列 1-9，不过序列 9 是低级，而序列 1 是高级，序列 0 是神级，根据诡秘目前的发展，应该还有更高级的存在。并且各个序列之间在低序列不能互换，而在高序列也只有部分序列可以互换</p><p>诡秘的升级也和传统升级不一样，不是讲究量变引起质变，毕竟力量都是外来的，所以诡秘的升级取决于序列魔药 + 仪式，低序列不需要仪式，而中高序列则需要仪式的辅助，没有仪式光靠自身的消化是无法吸收魔药的非凡特性的。</p><h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><p>推荐小说嘛主要还是要说说优缺点，个人在起点（支持正版，而且正版中的本章说可以看到沙雕网友的讨论，很有意思）读完这五部后，大致归纳了一下我认为的优点：</p><ol><li>等级设定新颖有趣。在传统的升级基础上扩充为序列的提升，传统的修炼更改为对魔药的消化，魔药的消化则在于对魔药名称的扮演，举个例子，主人公克莱恩所在的序列 9 魔药名称为占卜家，所以想要消化魔药则需要扮演占卜家这个职业，根据设定只有扮演成功并且魔药消化完毕才能在晋升下一个序列时有较高的成功率。这样的好处在于，哪怕是高序列也不会和现实生活脱离开，因为你需要扮演消化。</li><li>真实感。正如前文说到的，乌贼查阅了很多真实的文献资料，所以在阅读的过程中你会觉得小说所在的世界是真实的，包括各地的风俗人情，饮食文化还有最关键的货币系统，诡秘并没有出现其他小说中后期货币体系凌乱的情况，这得益于货币与物价良好的关联。所以推荐阅读诡秘时不要一目十行的看，而是需要慢慢阅读，因为你阅读的是一个新颖的世界，这种随着阅读将整个世界大幕缓缓拉开的感觉我自己是很久没体验过了。</li><li>人物塑造。诡秘告别了传统的贴标签式的人物塑造，而是以小见大，以事塑人，每个人物都是多面的，更符合现实的人物性格，比如诡秘中的罗塞尔大帝，至今大帝因为身亡的缘故并没有在克莱恩的现实世界中存活，但是只是根据他留下的笔记就能看出祂的性格和作风，并深受读者喜爱。更为难得的是主要人物的塑造，以克莱恩为例，作为穿越者，很多小说基本都是挂一个穿越的噱头而已，在开头表达一下思乡之情就没有了，而无论是克莱恩还是罗塞尔，他们都有着浓浓的思乡情绪，而且在地球的价值观也进一步推动了故事的剧情发展，更别说克莱恩自身的善良在众多小说中是真的不多见。</li><li>乌贼笔力的提升。这一点在读了乌贼前面写的《奥术神座》后尤为明显，奥术和诡秘都属于西方类玄幻吧算是，但是两者在阅读的体验上相差甚远，奥术重在解析现代科学与异世魔法的关联，更多的还是偏爽文一点，因为路西恩穿越自带图书馆，导致在知识方面是远远胜过异世的大部分魔法师的，更别说在奥术中，知识就是力量这一设定。而诡秘中克莱恩虽然也是自带灰雾外挂，但是在这个神秘、恐怖、克苏鲁的世界下，灰雾更多的是用于保命，因为这个世界的大人物的强大能力根本是防不胜防，第五部结尾部分克莱恩的疯狂逃命最能体现这一点，所以诡秘更侧重于通过克莱恩的艰辛历程来描写一个真实、神秘的世界，侧重点不同使得在阅读过程中你能随着克莱恩的了解深入体会到诡秘世界中各个阶层人物的真实情感，而不是像一般爽文一样只是跟随主角一路杀杀杀，下副本，升级然后循环。另外，乌贼也使用了很多有意思的写作手法，比如 POV（Point of View）、比如内心留白等，阅读时你就能自然而然在脑海中浮现出当时的场景。至于发刀出于不过度剧透考虑暂时不写。</li><li>智斗。诡秘的战斗大部分都是智斗，这也是阅读时很爽的一点，因为无论是主角还是敌人都是智商在线的，而且前面提到的 22 条序列之间是有一定的克制的，所以和其他小说比依靠外挂或者外力来以弱胜强，诡秘则是依靠智慧和准备，但是同一序列高对低的压制还是非常严重，所以也有很多读者表示自己在诡秘世界活不过一天。</li><li>伏笔与每部主题的诠释。诡秘中每一部均有一个主题，也有众多的伏笔，很多的伏笔我都是二刷三刷的时候才发现的，当然也可以通过本章说来发现，我认为这也是能够区分诡秘和其他小说的一个地方，特别是每一部结尾的时候，当伏笔收回，主题诠释的时候这种震撼力直插心底，大为过瘾。</li></ol><p>优点方面暂时归纳这么多，后期可能会有补充。下面说说我认为诡秘存在的一些缺点：</p><ol><li>更新进度。虽然乌贼能保持一周 12 更的频率但是因为剧情实在是吸引人所以导致众多卷毛狒狒（诡秘中对没头脑人的称呼）濒临失控（诡秘中掌握不当力量，失控是常态），我自己是在第四部的中期开始阅读的，当读完前三部大呼过瘾时在第四部高潮的地方更新追完了，那种痛苦简直是……所以我感觉在众多卷毛狒狒中二刷三刷的人应该不在少数。</li><li>部分剧情有所欠缺。这在乌贼每次的总结中也有提到，主要还是由于故事本身的缺点还有当时故事氛围的取舍，总的来说其实这一点不算是缺点而是本可以更好的地方。</li><li>初期节奏较慢。特别是第一部，因为第一部前期确实比较平淡一点，主要是克莱恩刚穿越过来，大部分还是在黑荆棘的日常，乌贼的想法是需要一点点的探索世界，慢慢的把世界观阐述清楚。我自己觉得其实这些日常也蛮有意思的，特别是每周的塔罗会，还有通过占卜解决的一些事情。不过，我个人呼吁请尽量耐下心，到了中后期你就会发现精彩之处，这里就不剧透了。</li><li>和爽文比较在某些地方会出现三观不合。这个从最近贴吧的部分争论就能看出来，因为如果你读过大量爽文后已经进入到新的地步，即老书虫，你会觉得克莱恩的三观是比较贴近于正常人的，也就是说换做你穿越过去或许会死得更快但是在某些选择上是一致的，而如果还处于习惯爽文带来的快感阶段那么你会不自觉地将爽文的主角带入克莱恩，这是在某些抉择上就会显得奇怪，比如明明对自己没好处的事，为什么偏要花大代价去做。这一点我个人认为还是读者的原因偏多一点。</li></ol><p>OK，大概总结这么多。实际上主要还是推荐大家去阅读一下，诡秘从去年到今年大部分时间都是起点月票第一，这已经很能说明问题了，还是那句话，建议慢慢读，当然如果受不了乌贼的独有的断章断卷也可以多等等，甚至完本后看，另外尽量支持正版，起点虽然在删减上比较恶心（一刀切），但是本章说是真的很有意思，能给你数倍的快乐。</p>]]></content>
      
      
      <categories>
          
          <category> 生活分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说推荐 </tag>
            
            <tag> 好物推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好物简评：AirPods Pro开箱与体验</title>
      <link href="/articles/2019/11/13/1573614610969.html"/>
      <url>/articles/2019/11/13/1573614610969.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/file/2019/11/1930645577-8b0d4aca.jpg" alt="1930645577.jpg"></p><p>29日，Apple官网上线了最新的AirPods Pro，稍微由于犹豫了下便果断入手刻字版。对个人而言早就眼馋之前的2代，可惜自己的耳朵戴Earpods很容易掉落，所以十分期待入耳式版本，早先推出的beats真无线又太大，佩戴不舒适。</p><p>等待了十天快递才到。<br>不多说，开箱！</p><p><img src="https://img.hacpai.com/file/2019/11/IMG6015-6b2a13df.JPG" alt="IMG6015.JPG"><br>盒子被胶带固定在快递盒上，保护还是十分到位的。</p><p><img src="https://img.hacpai.com/file/2019/11/IMG6017-e784d7d7.JPG" alt="IMG6017.JPG"><br>所有物件一览。</p><p><img src="https://img.hacpai.com/file/2019/11/IMG6019-3aeaac00.PNG" alt="IMG6019.PNG"><br>打开盖子，连接成功。</p><p>苹果在用户体验方面的确做得很好，连接很顺畅，在测试了耳塞契合度后，果断换上了最大号的（猜想可能是一直戴入耳式的耳机导致耳道变大了？）</p><p>不多说，打开降噪模式！</p><p>十分惊艳！</p><p>开箱是在家里开的，家里楼层较高，所以平时的噪声一般是不是很高的车笛声，还有邻居的噪声，不过在开启的瞬间就陡然安静了下来。</p><p>可能是我从未使用过主动降噪的产品，所以给我的冲击力蛮大的。打开网易云，音质感觉会比Earpods好一些，但是个人认为有降噪后你能听的更清楚的原因在里面，个人算是个木耳，所以只能大致感觉差不多，不过这种真无线耳机也不是为了更好的音质买的（说到这里推荐一下何同学的视频，讲的2代AirPods，文案满分!av：<a href="https://www.bilibili.com/video/av49432234">49432234</a>）。</p><p>对于音质，简单直白的表达就是能够听的更清楚，对音乐中的一些细节和小一点的声音能够更容易的辨别出来。</p><p>对于降噪，个人通勤主要靠公交，所以主要谈谈在公交上的体验。<br>公交的噪声主要包括人声、汽车本身的运行噪声、窗子抖动声、广告声、抖音外放声等，由于AirPods Pro采用的是反向声波的方式降噪的，所以对于比较低频率的声音能够消除得较好（很容易理解，低频意味着波长较长，软件在构造反向声波时误差较少，而较高频率会导致波长变短，软件在识别和构造上会存在困难，并且说不好还可能导致波峰重叠使得噪声更大）。</p><p>实际体验上，不能消除的是尖锐的人声、窗子抖动声和广告声（车上播放的广告声音是真的大），体验还是十分良好的，对于我这种喜好安静的人，每次公交都是一种折磨。但在使用了接近一周后，我自己的感觉还是比较舒服的，过滤掉嘈杂的声音后，能够更好地专注于播放的音乐或者闭目小憩。值得一说的是，降噪后在通话时你能够更好地听清楚对面的话，当然这种真无线耳机就不指望通话的质量了。</p><p>在行走时，AirPods Pro的降噪也十分优秀，我个人很讨厌在公共场合大声喧哗，播放外放的人，有AirPods Pro屏蔽后，心情也愉快了很多。</p><p>还值得说的一点是通透模式，这个模式我个人感觉十分厉害，本身是为了防止在外降噪后会导致一些事故的发生，而有了通透模式后让你在戴耳机时也能听清楚周周围的声音。这一点，我认为知乎上有个答主的回答比较直观</p><blockquote><p>如果说周围声音是3，那么不开降噪声音是2，开降噪声音是1，而通透模式会让声音回到2.5.</p></blockquote><p>我也看了b站上其他up的评测，他们都表示其他的降噪耳机在处理这一点时是采用将外界声音放大的方式，而苹果我个人感觉不是单纯的放大，原理说不清但是的确是非常通透，没有那种直接放大的感觉，如果你不听音乐打开通透模式你会感觉和不戴的感觉是十分接近的。</p><p>吹了这么久说一说缺点，老实说直接影响体验的缺点没有，都是一些感觉能做的更好的地方。</p><p>首先是味道，用了一个周，打开盒子还是能闻到胶臭味，虽说不是很难闻但是体验并不好。</p><p>再者是佩戴感受，AirPods最大的优点就在于佩戴的舒适性上，戴久了你甚至不会感觉在戴着，但是AirPods Pro毕竟是入耳式的，舒适性上会差一些。对于我这种习惯了佩戴入耳式耳机的人来说，在刚戴上AirPods Pro时还是会感觉到左耳的不适感，这并不是耳塞最大号的原因，这种不适感过了几天才慢慢习惯，看知乎，也有部分顾客表达佩戴时会有疼痛感，这个是客观存在的，但是会因为个人因素导致体验不同，不过不得不说，AirPods Pro的佩戴体验对于我来说还是要比其他的入耳式耳机来的舒服，特别是在长时间佩戴下。</p><p>最后是部分风的声音消除不好，有几次在公交车上，明明已经将其他声音降噪了，但是坐在窗边会听到类似风呼呼的声音，个人感觉应该并不是风声，原因未知，不过这种情况出现的频率较低，或许在应对某种特殊的声音是软件的降噪功能还不完善？</p><p>另外，AirPods Pro的盒子还是十分容易脏，需要保护套的保护，但是目前才推出不久，所以保护套的种类不多，等待日后各厂商的适配。</p><p>下面是总结</p><p>优点:</p><ol><li>降噪能力有不完善的地方，但是仍然十分出色，看b站其他up的评测也能反映这点，个人并未用过别的降噪产品所以不多做对比评价；</li><li>在入耳式耳机的佩戴体验上数一数二，可能存在人与人的不同导致的体验区别，个人建议最好还是去苹果体验店先试戴一下，顺便体验下降噪的效果；</li><li>得益于苹果的生态，AirPods在延迟、用户体验上十分优秀，如果你是苹果手机的用户更为推荐（哪怕是iPhone 6 也能使用全部功能，只是在手机上无法直接操作三种模式，只能通过按压耳机上的模拟按钮来切换）</li></ol><p>缺点：</p><ol><li>盒子不耐脏，需要保护套保护；</li><li>盒子本身的胶臭味；</li><li>待更新……</li></ol><p>总而言之，如果你是苹果手机用户，且像我一样需要主动降噪的耳机，那么AirPods Pro非常推荐，不过购买之前推荐先去体验店实际体验一下。如果不需要降噪且耳朵能挂住Earpods，那么更推荐2代的AirPods，最近2代的售价也降低了，可以考虑入手，毕竟2代的佩戴体验是真的不错。</p><p>AirPods对安卓阵营的匹配不是很好，能用是能用但是做不到苹果阵营的体验舒适度，个人感觉性价比不高，还不如考虑下华为最新出的Freebuds3，降噪效果也十分不错。</p><p>这是个人第一次简评，不专业，只说一说个人的实际使用体验，供大家参考。</p>]]></content>
      
      
      <categories>
          
          <category> 生活分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 简评 </tag>
            
            <tag> AirPods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7搭建CDH5.16.2</title>
      <link href="/articles/2019/11/08/1573204695172.html"/>
      <url>/articles/2019/11/08/1573204695172.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20190228.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><h1 id="CentOS7-搭建-CDH5-16-2"><a href="#CentOS7-搭建-CDH5-16-2" class="headerlink" title="CentOS7 搭建 CDH5.16.2"></a>CentOS7 搭建 CDH5.16.2</h1><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>很久之前就想在虚拟机上通过 CDH 搭建大数据集群，但是因为种种原因，还有网上博客的各种坑，一直到最近才安装成功，这里分享一下我自己整理后的安装步骤。自己主要在虚拟机 VMWare 上进行安装，但是参考的博客是在 ECS 上安装的，所以都可以进行参考。这里附上本文所用的软件链接：<a href="https://pan.baidu.com/s/1sQzZ7BMZhqtPPETfTHXmvw">nlyn</a></p><blockquote><p><a href="https://blog.csdn.net/chenhai201/article/details/78856007">参考博客</a>。需要注意的是，按照<a href="https://blog.csdn.net/chenhai201/article/details/78856007">该博客</a>安装 5.14.1 会导致在安装 CM 时卡在 40%的地方，根据文章下方的评论，建议直接安装最新版 cdh，故此处安装 CDH5.16.2</p></blockquote><h2 id="一、虚拟机配置与-CentOS7-环境安装"><a href="#一、虚拟机配置与-CentOS7-环境安装" class="headerlink" title="一、虚拟机配置与 CentOS7 环境安装"></a>一、虚拟机配置与 CentOS7 环境安装</h2><p>自身配置时注意更换 hostname</p><h3 id="个人虚拟机配置："><a href="#个人虚拟机配置：" class="headerlink" title="个人虚拟机配置："></a>个人虚拟机配置：</h3><pre class="line-numbers language-none"><code class="language-none">master 192.168.211.128 2*1核 5G+30Gslave1 192.168.211.129 1*1核 1G+20Gslave2 192.168.211.130 1*1核 1G+20Gslave3 192.168.211.131 1*1核 1G+20G个人安装的版本为CentOS-7-x86_64-DVD-1908，安装时均选择最小安装。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>需要注意的是，后期在 Web 页面会进行集群安装，这个时候需要密码登录或者私钥登录所有节点，故此处采用密码登录，<strong>所有节点配置了相同的 root 密码</strong></p></blockquote><h3 id="最小安装后的联网设置以及-yum-更新"><a href="#最小安装后的联网设置以及-yum-更新" class="headerlink" title="最小安装后的联网设置以及 yum 更新"></a>最小安装后的联网设置以及 yum 更新</h3><pre class="line-numbers language-none"><code class="language-none"># 所有节点均要配置# 配置ifcfg-ens33，若配置不叫ens33可换为对应的名字$ vi &#x2F;etc&#x2F;sysconfig&#x2F;network-script&#x2F;ifcfg-ens33TYPE&#x3D;&quot;Ethernet&quot;PROXY_METHOD&#x3D;&quot;none&quot;BROWSER_ONLY&#x3D;&quot;no&quot;BOOTPROTO&#x3D;&quot;static&quot; # 改为静态ipDEFROUTE&#x3D;&quot;yes&quot;IPV4_FAILURE_FATAL&#x3D;&quot;no&quot;IPV6INIT&#x3D;&quot;yes&quot;IPV6_AUTOCONF&#x3D;&quot;yes&quot;IPV6_DEFROUTE&#x3D;&quot;yes&quot;IPV6_FAILURE_FATAL&#x3D;&quot;no&quot;IPV6_ADDR_GEN_MODE&#x3D;&quot;stable-privacy&quot;NAME&#x3D;&quot;ens33&quot;UUID&#x3D;&quot;c29990a8-f310-46b8-bf73-1e31e92ec3af&quot;DEVICE&#x3D;&quot;ens33&quot;ONBOOT&#x3D;&quot;yes&quot; # 改为开机启动IPADDR&#x3D;192.168.211.128 # 修改对应ip地址NETMASK&#x3D;255.255.255.0 # 修改子网掩码GATEWAY&#x3D;192.168.211.2 # 修改网关与虚拟机网络配置中的网关相同DNS1&#x3D;8.8.8.8 # 添加DNSDNS2&#x3D;114.114.114.114# 重启网络$ systemctl restart network# ping外网$ ping www.baidu.com# yum更新（可更换yum源）$ yum update# 安装wget$ yum install -y wget# 安装net-tools$ yum install -y net-tools# 安装vim$ yum install -y vim<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置基本环境"><a href="#配置基本环境" class="headerlink" title="配置基本环境"></a>配置基本环境</h3><h4 id="最小安装不带-OpenJDK，此处省略卸载步骤，采用-rpm-本地安装-jdk8"><a href="#最小安装不带-OpenJDK，此处省略卸载步骤，采用-rpm-本地安装-jdk8" class="headerlink" title="最小安装不带 OpenJDK，此处省略卸载步骤，采用 rpm 本地安装 jdk8"></a>最小安装不带 OpenJDK，此处省略卸载步骤，采用 rpm 本地安装 jdk8</h4><pre class="line-numbers language-none"><code class="language-none"># 所有节点均要配置# 上传jdk安装包与Oracle依赖# rpm本地安装rpm -ivh jdk-8u65-linux-x64.rpmrpm -ivh oracle-j2sdk1.7-1.7.0+update67-1.x86_64.rpm #CM安装需要这个，否则会重新联网下载，造成安装速度非常缓慢# rpm安装会自动配置环境变量，采用其他方式安装需配置环境变量，此处省略# 检查jdk安装情况$ java -version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="设置-hosts-与-SSH"><a href="#设置-hosts-与-SSH" class="headerlink" title="设置 hosts 与 SSH"></a>设置 hosts 与 SSH</h4><pre class="line-numbers language-none"><code class="language-none"># 所有节点修改hostname$ hostnamectl --static set-hostname master# 所有节点修改hosts$ vim &#x2F;etc&#x2F;hosts# 在文件后追加192.168.211.128 master192.168.211.129 slave1192.168.211.130 slave2192.168.211.131 slave3# 关闭防火墙$ systemctl stop firewalld.service #停止firewall$ systemctl disable firewalld.service #禁止firewall开机启动$ firewall-cmd --state #查看默认防火墙状态（关闭后显示not running，开启后显示running）# 关闭selinux：vim &#x2F;etc&#x2F;selinux&#x2F;config# 找到SELINUX改为：SELINUX&#x3D;disabled# 设置ssh# 先在master上执行：$ ssh-keygen -t rsa   #一路回车到完成$ ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub root@master   #将公钥拷贝到本机的authorized_keys上# 再在其他节点分别执行以下命令：$ ssh-keygen -t rsa   #一路回车到完成$ ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_rsa.pub root@master   #注意此处不变，将公钥拷贝到master的authorized_keys上# 在master上，将authorized_keys分发到其他节点服务器：$ scp ~&#x2F;.ssh&#x2F;authorized_keys root@serve1:~&#x2F;.ssh&#x2F;$ scp ~&#x2F;.ssh&#x2F;authorized_keys root@serve2:~&#x2F;.ssh&#x2F;$ scp ~&#x2F;.ssh&#x2F;authorized_keys root@serve3:~&#x2F;.ssh&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="重启所有节点服务器"><a href="#重启所有节点服务器" class="headerlink" title="重启所有节点服务器"></a>重启所有节点服务器</h4><pre class="line-numbers language-none"><code class="language-none"># 重启服务器使配置生效$ reboot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="安装-ntp-时间同步软件"><a href="#安装-ntp-时间同步软件" class="headerlink" title="安装 ntp 时间同步软件"></a>安装 ntp 时间同步软件</h4><pre class="line-numbers language-none"><code class="language-none">$ yum install -y ntp# 配置NTP，在master节点$ vim &#x2F;etc&#x2F;ntp.conf# 修改成如下配置，此处采用国家ntp时间同步中心，原博给的地址目前已无法同步：server ntp.ntsc.ac.cn preferserver 0.centos.pool.ntp.org iburstserver 1.centos.pool.ntp.org iburstserver 2.centos.pool.ntp.org iburstserver 3.centos.pool.ntp.org iburst# 然后先进行一次时间同步：$ &#x2F;usr&#x2F;sbin&#x2F;ntpdate ntp.ntsc.ac.cn# 在salve1~3上，修改&#x2F;etc&#x2F;ntp.conf配置改为以下server masterserver 0.centos.pool.ntp.org iburstserver 1.centos.pool.ntp.org iburstserver 2.centos.pool.ntp.org iburstserver 3.centos.pool.ntp.org iburst# 子节点需要定期同步主节点的时间，所以需要在各个子节点增加一个定时任务：# 每个从节点，从master节点同步时间$ ntpdate master# 做一个计划任务（从节点）$ crontab -e# 表示每3小时同步一次时间00 *&#x2F;3 * * * &#x2F;usr&#x2F;sbin&#x2F;ntpdate  master &gt;&gt; &#x2F;root&#x2F;ntpdate.log 2&gt;&amp;1# 查看计划任务$ crontab  -l# 所有子节点ntp加入开机启动$ chkconfig ntpd on# 最后所有服务器检查一下时间是否一致即可。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、CM与CDH安装"><a href="#二、CM与CDH安装" class="headerlink" title="二、CM与CDH安装"></a>二、CM与CDH安装</h2><h3 id="上传本地安装文件"><a href="#上传本地安装文件" class="headerlink" title="上传本地安装文件"></a>上传本地安装文件</h3><p>为了便于执行命令，在所有节点中创建~/soft/目录，并按照下表上传安装文件</p><table><thead><tr><th>服务器</th><th>用途</th><th>所需文件</th></tr></thead><tbody><tr><td>master</td><td>主</td><td>cloudera-manager-agent-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm</br>cloudera-manager-daemons-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm</br>cloudera-manager-server-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm</br>cloudera-manager-server-db-2-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm</br>enterprise-debuginfo-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm</br>cloudera-manager-installer.bin</br>cloudera-manager.repo</br>CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel</br>CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel.sha1</td></tr><tr><td>slave1~3</td><td>从</td><td>cloudera-manager-agent-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm</br>cloudera-manager-daemons-5.16.2-1.cm5162.p0.7.el7.x86_64.rpm</br>cloudera-manager.repo</td></tr></tbody></table><h3 id="master主机安装"><a href="#master主机安装" class="headerlink" title="master主机安装"></a>master主机安装</h3><pre class="line-numbers language-none"><code class="language-none"># 切换目录$ cd ~&#x2F;soft# 修改仓库文件cloudera-manager.repo，把版本号加上[cloudera-manager]name &#x3D; Cloudera Managerbaseurl &#x3D; https:&#x2F;&#x2F;archive.cloudera.com&#x2F;cm5&#x2F;redhat&#x2F;7&#x2F;x86_64&#x2F;cm&#x2F;5.16.2&#x2F;  #主要改这里的版本号gpgkey &#x3D; https:&#x2F;&#x2F;archive.cloudera.com&#x2F;redhat&#x2F;cdh&#x2F;RPM-GPG-KEY-clouderagpgcheck &#x3D; 1# 开始master的安装：$ yum localinstall --nogpgcheck *.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="从机安装"><a href="#从机安装" class="headerlink" title="从机安装"></a>从机安装</h3><pre class="line-numbers language-none"><code class="language-none"># 参照上述同样修改cloudera-manager.repo# 开始slave1~3的安装：$ yum localinstall --nogpgcheck *.rpm# 最后在slave1~3节点检查我们安装包$ yum list | grep cloudera<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="安装cloduera-manager二进制安装包"><a href="#安装cloduera-manager二进制安装包" class="headerlink" title="安装cloduera manager二进制安装包"></a>安装cloduera manager二进制安装包</h3><pre class="line-numbers language-none"><code class="language-none"># 进入master的cloudera-manager-installer.bin所在目录# 设置安装权限：$ chmod u+x cloudera-manager-installer.bin# 执行安装命令:$ .&#x2F;cloudera-manager-installer.bin# 如果提示需要删除配置文件，则备份文件$ mv &#x2F;etc&#x2F;cloudera-scm-server&#x2F;db.properties &#x2F;etc&#x2F;cloudera-scm-server&#x2F;db.properties.bak<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重新执行安装命令，根据安装向导一路next。注意，如果之前master上没有手动安装rpm包此时就会联网下载，下载速度一般都较慢，太费时间。</p><p>相同配置下顺利安装时间在1分钟内即可完成。<br>然后我们在web浏览器访问 <a href="http://192.168.211.128:7180/">http://192.168.211.128:7180/</a><br>看是否能打开页面即可，先不要进行登录操作。</p><blockquote><p>注意：chd server服务器启动需要一些时间，等1分钟左右。</p></blockquote><p>如果能访问，那证明 cloudera manager安装正常。</p><h3 id="CDH服务安装"><a href="#CDH服务安装" class="headerlink" title="CDH服务安装"></a>CDH服务安装</h3><h4 id="制作本地parcel"><a href="#制作本地parcel" class="headerlink" title="制作本地parcel"></a>制作本地parcel</h4><p>前面完成cloudera manager安装之后master会在/opt目录下生成cloudera文件夹，将之前下载好的CDH-*文件移动到parcel-repo文件夹中</p><pre class="line-numbers language-none"><code class="language-none">$ mv CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel &#x2F;opt&#x2F;cloudera&#x2F;parcel-repo&#x2F;$ mv CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel.sha1 &#x2F;opt&#x2F;cloudera&#x2F;parcel-repo&#x2F;CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel.sha  #注意这里有重命名# 将cloudera manager的用户授权给&#x2F;opt和日志目录：$ chown cloudera-scm.cloudera-scm  &#x2F;opt  -R$ chown cloudera-scm.cloudera-scm  &#x2F;var&#x2F;log&#x2F;cloudera-scm-agent -R# 重启cloudera-scm-server（重要）$ &#x2F;etc&#x2F;init.d&#x2F;cloudera-scm-server restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启速度较慢，约1分钟后访问 <a href="http://192.168.211.128:7180/">http://192.168.211.128:7180/</a><br>登陆，账号密码 admin<br>选择免费版本，开始安装。</p><h4 id="安装CDH"><a href="#安装CDH" class="headerlink" title="安装CDH"></a>安装CDH</h4><p>此步骤的安装图可参考<a href="https://blog.csdn.net/chenhai201/article/details/78856007">原博客</a></p><ol><li>为CDH集群安装指定主机<br> 框中输入：192.168.211.[128-131]<br> 搜索并全选添加继续</li><li>集群安装<br> 默认Parcel安装，选择CDH版本为5.16.2，其余保持默认即可</li><li>JDK安装<br> 我们已经安装了JDK8所以不勾选直接继续</li><li>启用单用户模式<br> 暂时不使用单用户模式，简化安装</li><li>提供SSH登录凭据<br> 使用root用户，所有主机接受相同密码，继续</li><li>等待安装完成</li><li>集群设置<br> 建议先安装核心Hadoop，后期有需要再进行添加</li><li>数据库设置<br> 有独立的数据库可以配置独立数据库，没有的可以使用自带的嵌入式数据库，使用自带数据库建议将密码截一下图</li><li>等待安装完成</li></ol><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>其实根据目前这个配置运转CDH是比较勉强的，安装完进入页面后会发现一大堆的警告报警，可以选择提高服务器配置（<del>调低报警阈值</del>）来解决</p>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CDH </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7本地化搭建Easy-Mock</title>
      <link href="/articles/2019/10/30/1572398264251.html"/>
      <url>/articles/2019/10/30/1572398264251.html</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS7本地化搭建Easy-Mock"><a href="#CentOS7本地化搭建Easy-Mock" class="headerlink" title="CentOS7本地化搭建Easy-Mock"></a>CentOS7本地化搭建Easy-Mock</h1><blockquote><p>Easy-Mock是一款个人使用较为舒服的mock框架，在开发时可以较为方便地自定义mock数据结构，并且可以无缝对接Swagger。官网目前提供了对应的docker镜像，目前已按照此方法部署在该ECS实例上。</p></blockquote><p>下面是具体步骤可做参考：</p><h2 id="yum升级"><a href="#yum升级" class="headerlink" title="yum升级"></a>yum升级</h2><pre class="line-numbers language-none"><code class="language-none">yum update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><pre class="line-numbers language-none"><code class="language-none">sudo yum install -y yum-utils device-mapper-persistent-data lvm2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装最新社区版docker"><a href="#安装最新社区版docker" class="headerlink" title="安装最新社区版docker"></a>安装最新社区版docker</h2><pre class="line-numbers language-none"><code class="language-none">sudo yum install docker-ce docker-ce-cli containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h2><pre class="line-numbers language-none"><code class="language-none">sudo systemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="其他可能用到的命令"><a href="#其他可能用到的命令" class="headerlink" title="其他可能用到的命令"></a>其他可能用到的命令</h3><h5 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h5><pre class="line-numbers language-none"><code class="language-none">sudo systemctl stop docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h5><pre class="line-numbers language-none"><code class="language-none">sudo systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h2><pre class="line-numbers language-none"><code class="language-none">sudo curl -L &quot;https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.24.0&#x2F;docker-compose-$(uname -s)-$(uname -m)&quot; -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="添加可执行权限"><a href="#添加可执行权限" class="headerlink" title="添加可执行权限"></a>添加可执行权限</h2><pre class="line-numbers language-none"><code class="language-none">sudo chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="添加easy-mock配置文件"><a href="#添加easy-mock配置文件" class="headerlink" title="添加easy-mock配置文件"></a>添加easy-mock配置文件</h2><pre class="line-numbers language-none"><code class="language-none"># docker-compose.ymlversion: &#39;3&#39;services:  mongodb:    image: mongo:3.4    volumes:      # .&#x2F;data&#x2F;db 数据库文件存放地址，根据需要修改为本地地址      - &#39;.&#x2F;data&#x2F;db&#39;    networks:      - easy-mock    restart: always  redis:    image: redis:4.0.6    command: redis-server --appendonly yes    volumes:      # .&#x2F;data&#x2F;redis redis 数据文件存放地址，根据需要修改为本地地址      - &#39;.&#x2F;data&#x2F;redis&#39;    networks:      - easy-mock    restart: always  web:    image: easymock&#x2F;easymock:1.6.0    command: &#x2F;bin&#x2F;bash -c &quot;npm start&quot;    ports:      - 7300:7300    volumes:      # 日志地址，根据需要修改为本地地址      - &#39;.&#x2F;logs&#39;      # 配置地址，请使用本地配置地址替换      # - &#39;.&#x2F;production.json&#39;    networks:      - easy-mock    restart: alwaysnetworks:  easy-mock:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="新建production-json"><a href="#新建production-json" class="headerlink" title="新建production.json"></a>新建production.json</h2><pre class="line-numbers language-none"><code class="language-none">&#123;  &quot;port&quot;: 7300,  &quot;host&quot;: &quot;0.0.0.0&quot;,  &quot;pageSize&quot;: 30,  &quot;proxy&quot;: false,  &quot;db&quot;: &quot;mongodb:&#x2F;&#x2F;localhost&#x2F;easy-mock&quot;,  &quot;unsplashClientId&quot;: &quot;&quot;,  &quot;redis&quot;: &#123;    &quot;keyPrefix&quot;: &quot;[Easy Mock]&quot;,    &quot;port&quot;: 6379,    &quot;host&quot;: &quot;redis&quot;,    &quot;password&quot;: &quot;&quot;,    &quot;db&quot;: 0  &#125;,  &quot;blackList&quot;: &#123;    &quot;projects&quot;: [], &#x2F;&#x2F; projectId, e.g.&quot;5a4495e16ef711102113e500&quot;    &quot;ips&quot;: [] &#x2F;&#x2F; ip, e.g. &quot;127.0.0.1&quot;  &#125;,  &quot;rateLimit&quot;: &#123; &#x2F;&#x2F; https:&#x2F;&#x2F;github.com&#x2F;koajs&#x2F;ratelimit    &quot;max&quot;: 1000,    &quot;duration&quot;: 1000  &#125;,  &quot;jwt&quot;: &#123;    &quot;expire&quot;: &quot;14 days&quot;,    &quot;secret&quot;: &quot;shared-secret&quot;  &#125;,  &quot;upload&quot;: &#123;    &quot;types&quot;: [&quot;.jpg&quot;, &quot;.jpeg&quot;, &quot;.png&quot;, &quot;.gif&quot;, &quot;.json&quot;, &quot;.yml&quot;, &quot;.yaml&quot;],    &quot;size&quot;: 5242880,    &quot;dir&quot;: &quot;..&#x2F;public&#x2F;upload&quot;,    &quot;expire&quot;: &#123;      &quot;types&quot;: [&quot;.json&quot;, &quot;.yml&quot;, &quot;.yaml&quot;],      &quot;day&quot;: -1    &#125;  &#125;,  &quot;ldap&quot;: &#123;    &quot;server&quot;: &quot;&quot;, &#x2F;&#x2F; Set server to enable LDAP login. e.g. &quot;ldap:&#x2F;&#x2F;localhost:389&quot; or &quot;ldaps:&#x2F;&#x2F;localhost:389&quot;（use SSL）    &quot;bindDN&quot;: &quot;&quot;, &#x2F;&#x2F; Username，e.g. &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;com&quot;    &quot;password&quot;: &quot;&quot;,    &quot;filter&quot;: &#123;      &quot;base&quot;: &quot;&quot;, &#x2F;&#x2F; Base where we can search for users，e.g. &quot;dc&#x3D;example,dc&#x3D;com&quot;      &quot;attributeName&quot;: &quot;&quot; &#x2F;&#x2F; e.g. &quot;mail&quot; or &quot;email&quot; etc.    &#125;  &#125;,  &quot;fe&quot;: &#123;    &quot;copyright&quot;: &quot;&quot;,    &quot;storageNamespace&quot;: &quot;easy-mock_&quot;,    &quot;timeout&quot;: 25000,    &quot;publicPath&quot;: &quot;&#x2F;dist&#x2F;&quot;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="启动Docker-Compose"><a href="#启动Docker-Compose" class="headerlink" title="启动Docker-Compose"></a>启动Docker-Compose</h2><pre class="line-numbers language-none"><code class="language-none">docker-compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><pre class="line-numbers language-none"><code class="language-none"># 停止docker-compose stop# 查看运行状态docker-compose ps# 查看运行日志docker-compose logs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Linux </tag>
            
            <tag> Mock </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>b站视频推荐：彩铅手绘十元老婆</title>
      <link href="/articles/2019/10/24/1571886721471.html"/>
      <url>/articles/2019/10/24/1571886721471.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/file/2019/10/1399A2748E0D04D20B1EB1A1D9F26F2C-3476c26a.JPG" alt="1399A2748E0D04D20B1EB1A1D9F26F2C.JPG"></p><p>看封面以为是照片，结果是彩铅，十分怀疑这个up是打印机成的精，彩铅大佬恐怖如斯<br>av号：<a href="https://www.bilibili.com/video/av70256945">70256945</a></p><p>这个视频让我想起之前学素描和板绘的时候，老实说非科班的人练习绘画一大难点就是构形，素描还好，当时有老师指导，差不多3天左右能够出来多静物素描线稿（因为是周末去的，平时要上课），再加上阴影差不多6次课左右；板绘更是一言难尽，不过电脑上的橡皮擦可比现实中的橡皮用起舒服多了。也不知道以后还会不会把板绘捡起来（说起来想捡起来的爱好太多了），做开发之后确实时间少了很多。</p>]]></content>
      
      
      <categories>
          
          <category> 生活分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> b站视频推荐 </tag>
            
            <tag> 老婆 </tag>
            
            <tag> 十元 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git本地仓库关联、解除关联远程仓库流程及遇到的问题</title>
      <link href="/articles/2019/10/24/1571884156680.html"/>
      <url>/articles/2019/10/24/1571884156680.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20171111.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><p>开发过程中需要将自己的代码用git做版本管理，那么此时需要将本地仓库与远程仓库进行关联，此处记录一下相关流程以及遇到的问题和处理方式</p><h2 id="关联远程仓库"><a href="#关联远程仓库" class="headerlink" title="关联远程仓库"></a>关联远程仓库</h2><p>以Github平台为例，GitLab、Gitee类似</p><ol><li><p>在github上面创建一个空的仓库</p></li><li><p>在Git Bash上输入如下命令，将本地仓库与远程仓库关联</p><pre class="line-numbers language-none"><code class="language-none">#git初始化$ git init#设置remote地址$ git remote add github 地址#将全部文件加入git版本管理 .的意思是将当前文件夹下的全部文件放到版本管理中$ git add .#提交文件 使用-m 编写注释$ git commit -m &quot;注释&quot;#推送到远程分支$ git push<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这里需要注意的是上面命令中的<strong>github</strong>是远程仓库在本地Git的名称，默认情况下一般命名为origin，但是这里为了区分不同平台的远程仓库（例如：Gitee平台的远程仓库在本地可以命名为gitee），所以为github。仓库地址为你建立的新仓库的地址</p></blockquote></li></ol><p>查看本地仓库与远程仓库的关联详情</p><pre class="line-numbers language-none"><code class="language-none">$ git remote -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还有一种情况是，远程仓库里已经有文件，这时候你执行上面的步骤是不可以的，因为需要把远程仓库的文件先更新下来。步骤如下</p><pre class="line-numbers language-none"><code class="language-none"># git初始化$ git init# 设置remote地址$ git remote add github 地址# 获取远程仓库master分支上的内容$ git pull origin master# 将当前分支设置为远程仓库的master分支$ git branch --set-upstream-to&#x3D;origin&#x2F;master master# 将全部文件加入git版本管理 .的意思是将当前文件夹下的全部文件放到版本管理中$ git add .# 提交文件 使用-m 编写注释$ git commit -m &quot;注释&quot;# 推送到远程分支$ git push<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后就可以进行add、commit、push等操作了</p><h2 id="解除远程仓库"><a href="#解除远程仓库" class="headerlink" title="解除远程仓库"></a>解除远程仓库</h2><p>删除与远程仓库的关联就比较简单了，直接输入以下命令：</p><pre class="line-numbers language-none"><code class="language-none">$ git remote rm github<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>在将自己的代码保管至公司GitLab上是出现了问题，按照上面的流程输入<code>git branch --set-upstream-to=origin/master master</code>后，bash报错</p><pre class="line-numbers language-none"><code class="language-none">fatal: branch &#39;master&#39; does not exist<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时的问题是本地仓库并不在master分支上，所以需要先切换到master分支</p><pre class="line-numbers language-none"><code class="language-none">$ git checkout masterAlready on &#39;master&#39;Branch &#39;master&#39; set up to track remote branch &#39;master&#39; from &#39;origin&#39;.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>之后则可正常进行添加、提交等操作</p><h2 id="设置仓库级别的用户名和邮箱"><a href="#设置仓库级别的用户名和邮箱" class="headerlink" title="设置仓库级别的用户名和邮箱"></a>设置仓库级别的用户名和邮箱</h2><p>有时候需要使用多个git帐号，就对应的需要配置多个用户名和密码，git 配置相关的命令为 git config，这里顺便记录一下修改方式</p><pre class="line-numbers language-none"><code class="language-none">#查看当前全部的配置git config -l<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>执行这个命令会进入一个配置文件页，使用vim编辑器的推出命令退出 :wq</p><pre class="line-numbers language-none"><code class="language-none">#全局级配置，如果没有仓库级别的特殊配置，默认读取这个配置git config --global user.name &quot;name&quot;git config --global user.email &quot;email&quot;#仓库级配置，一般一个项目配置一次git config user.name &quot;name&quot;git config user.email &quot;email&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题解决 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Application.properties全配置（下）</title>
      <link href="/articles/2019/10/21/1571628717779.html"/>
      <url>/articles/2019/10/21/1571628717779.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none"># ----------------------------------------  # DATA PROPERTIES  # ----------------------------------------      # FLYWAY (FlywayProperties)  spring.flyway.baseline-description&#x3D;&lt;&lt; Flyway Baseline &gt;&gt; # Description to tag an existing schema with when applying a baseline.  spring.flyway.baseline-on-migrate&#x3D;false # Whether to automatically call baseline when migrating a non-empty schema.  spring.flyway.baseline-version&#x3D;1 # Version to tag an existing schema with when executing baseline.  spring.flyway.check-location&#x3D;true # Whether to check that migration scripts location exists.  spring.flyway.clean-disabled&#x3D;false # Whether to disable cleaning of the database.  spring.flyway.clean-on-validation-error&#x3D;false # Whether to automatically call clean when a validation error occurs.  spring.flyway.connect-retries&#x3D;0 # Maximum number of retries when attempting to connect to the database.  spring.flyway.enabled&#x3D;true # Whether to enable flyway.  spring.flyway.encoding&#x3D;UTF-8 # Encoding of SQL migrations.  spring.flyway.group&#x3D;false # Whether to group all pending migrations together in the same transaction when applying them.  spring.flyway.ignore-future-migrations&#x3D;true # Whether to ignore future migrations when reading the schema history table.  spring.flyway.ignore-ignored-migrations&#x3D;false # Whether to ignore ignored migrations when reading the schema history table.  spring.flyway.ignore-missing-migrations&#x3D;false # Whether to ignore missing migrations when reading the schema history table.  spring.flyway.ignore-pending-migrations&#x3D;false # Whether to ignore pending migrations when reading the schema history table.  spring.flyway.init-sqls&#x3D; # SQL statements to execute to initialize a connection immediately after obtaining it.  spring.flyway.installed-by&#x3D; # Username recorded in the schema history table as having applied the migration.  spring.flyway.locations&#x3D;classpath:db&#x2F;migration # Locations of migrations scripts. Can contain the special &quot;&#123;vendor&#125;&quot; placeholder to use vendor-specific locations.  spring.flyway.mixed&#x3D;false # Whether to allow mixing transactional and non-transactional statements within the same migration.  spring.flyway.out-of-order&#x3D;false # Whether to allow migrations to be run out of order.  spring.flyway.password&#x3D; # Login password of the database to migrate.  spring.flyway.placeholder-prefix&#x3D;$&#123; # Prefix of placeholders in migration scripts.  spring.flyway.placeholder-replacement&#x3D;true # Perform placeholder replacement in migration scripts.  spring.flyway.placeholder-suffix&#x3D;&#125; # Suffix of placeholders in migration scripts.  spring.flyway.placeholders&#x3D; # Placeholders and their replacements to apply to sql migration scripts.  spring.flyway.repeatable-sql-migration-prefix&#x3D;R # File name prefix for repeatable SQL migrations.  spring.flyway.schemas&#x3D; # Scheme names managed by Flyway (case-sensitive).  spring.flyway.skip-default-callbacks&#x3D;false # Whether to skip default callbacks. If true, only custom callbacks are used.  spring.flyway.skip-default-resolvers&#x3D;false # Whether to skip default resolvers. If true, only custom resolvers are used.  spring.flyway.sql-migration-prefix&#x3D;V # File name prefix for SQL migrations.  spring.flyway.sql-migration-separator&#x3D;__ # File name separator for SQL migrations.  spring.flyway.sql-migration-suffixes&#x3D;.sql # File name suffix for SQL migrations.  spring.flyway.table&#x3D;flyway_schema_history # Name of the schema schema history table that will be used by Flyway.  spring.flyway.target&#x3D; # Target version up to which migrations should be considered.  spring.flyway.url&#x3D; # JDBC url of the database to migrate. If not set, the primary configured data source is used.  spring.flyway.user&#x3D; # Login user of the database to migrate.  spring.flyway.validate-on-migrate&#x3D;true # Whether to automatically call validate when performing a migration.      # LIQUIBASE (LiquibaseProperties)  spring.liquibase.change-log&#x3D;classpath:&#x2F;db&#x2F;changelog&#x2F;db.changelog-master.yaml # Change log configuration path.  spring.liquibase.check-change-log-location&#x3D;true # Whether to check that the change log location exists.  spring.liquibase.contexts&#x3D; # Comma-separated list of runtime contexts to use.  spring.liquibase.database-change-log-lock-table&#x3D;DATABASECHANGELOGLOCK # Name of table to use for tracking concurrent Liquibase usage.  spring.liquibase.database-change-log-table&#x3D;DATABASECHANGELOG # Name of table to use for tracking change history.  spring.liquibase.default-schema&#x3D; # Default database schema.  spring.liquibase.drop-first&#x3D;false # Whether to first drop the database schema.  spring.liquibase.enabled&#x3D;true # Whether to enable Liquibase support.  spring.liquibase.labels&#x3D; # Comma-separated list of runtime labels to use.  spring.liquibase.liquibase-schema&#x3D; # Schema to use for Liquibase objects.  spring.liquibase.liquibase-tablespace&#x3D; # Tablespace to use for Liquibase objects.  spring.liquibase.parameters.*&#x3D; # Change log parameters.  spring.liquibase.password&#x3D; # Login password of the database to migrate.  spring.liquibase.rollback-file&#x3D; # File to which rollback SQL is written when an update is performed.  spring.liquibase.test-rollback-on-update&#x3D;false # Whether rollback should be tested before update is performed.  spring.liquibase.url&#x3D; # JDBC URL of the database to migrate. If not set, the primary configured data source is used.  spring.liquibase.user&#x3D; # Login user of the database to migrate.      # COUCHBASE (CouchbaseProperties)  spring.couchbase.bootstrap-hosts&#x3D; # Couchbase nodes (host or IP address) to bootstrap from.  spring.couchbase.bucket.name&#x3D;default # Name of the bucket to connect to.  spring.couchbase.bucket.password&#x3D;  # Password of the bucket.  spring.couchbase.env.endpoints.key-value&#x3D;1 # Number of sockets per node against the key&#x2F;value service.  spring.couchbase.env.endpoints.queryservice.min-endpoints&#x3D;1 # Minimum number of sockets per node.  spring.couchbase.env.endpoints.queryservice.max-endpoints&#x3D;1 # Maximum number of sockets per node.  spring.couchbase.env.endpoints.viewservice.min-endpoints&#x3D;1 # Minimum number of sockets per node.  spring.couchbase.env.endpoints.viewservice.max-endpoints&#x3D;1 # Maximum number of sockets per node.  spring.couchbase.env.ssl.enabled&#x3D; # Whether to enable SSL support. Enabled automatically if a &quot;keyStore&quot; is provided unless specified otherwise.  spring.couchbase.env.ssl.key-store&#x3D; # Path to the JVM key store that holds the certificates.  spring.couchbase.env.ssl.key-store-password&#x3D; # Password used to access the key store.  spring.couchbase.env.timeouts.connect&#x3D;5000ms # Bucket connections timeouts.  spring.couchbase.env.timeouts.key-value&#x3D;2500ms # Blocking operations performed on a specific key timeout.  spring.couchbase.env.timeouts.query&#x3D;7500ms # N1QL query operations timeout.  spring.couchbase.env.timeouts.socket-connect&#x3D;1000ms # Socket connect connections timeout.  spring.couchbase.env.timeouts.view&#x3D;7500ms # Regular and geospatial view operations timeout.      # DAO (PersistenceExceptionTranslationAutoConfiguration)  spring.dao.exceptiontranslation.enabled&#x3D;true # Whether to enable the PersistenceExceptionTranslationPostProcessor.      # CASSANDRA (CassandraProperties)  spring.data.cassandra.cluster-name&#x3D; # Name of the Cassandra cluster.  spring.data.cassandra.compression&#x3D;none # Compression supported by the Cassandra binary protocol.  spring.data.cassandra.connect-timeout&#x3D; # Socket option: connection time out.  spring.data.cassandra.consistency-level&#x3D; # Queries consistency level.  spring.data.cassandra.contact-points&#x3D;localhost # Cluster node addresses.  spring.data.cassandra.fetch-size&#x3D; # Queries default fetch size.  spring.data.cassandra.jmx-enabled&#x3D;false # Whether to enable JMX reporting.  spring.data.cassandra.keyspace-name&#x3D; # Keyspace name to use.  spring.data.cassandra.port&#x3D; # Port of the Cassandra server.  spring.data.cassandra.password&#x3D; # Login password of the server.  spring.data.cassandra.pool.heartbeat-interval&#x3D;30s # Heartbeat interval after which a message is sent on an idle connection to make sure it&#39;s still alive. If a duration suffix is not specified, seconds will be used.  spring.data.cassandra.pool.idle-timeout&#x3D;120s # Idle timeout before an idle connection is removed. If a duration suffix is not specified, seconds will be used.  spring.data.cassandra.pool.max-queue-size&#x3D;256 # Maximum number of requests that get queued if no connection is available.  spring.data.cassandra.pool.pool-timeout&#x3D;5000ms # Pool timeout when trying to acquire a connection from a host&#39;s pool.  spring.data.cassandra.read-timeout&#x3D; # Socket option: read time out.  spring.data.cassandra.repositories.type&#x3D;auto # Type of Cassandra repositories to enable.  spring.data.cassandra.serial-consistency-level&#x3D; # Queries serial consistency level.  spring.data.cassandra.schema-action&#x3D;none # Schema action to take at startup.  spring.data.cassandra.ssl&#x3D;false # Enable SSL support.  spring.data.cassandra.username&#x3D; # Login user of the server.      # DATA COUCHBASE (CouchbaseDataProperties)  spring.data.couchbase.auto-index&#x3D;false # Automatically create views and indexes.  spring.data.couchbase.consistency&#x3D;read-your-own-writes # Consistency to apply by default on generated queries.  spring.data.couchbase.repositories.type&#x3D;auto # Type of Couchbase repositories to enable.      # ELASTICSEARCH (ElasticsearchProperties)  spring.data.elasticsearch.cluster-name&#x3D;elasticsearch # Elasticsearch cluster name.  spring.data.elasticsearch.cluster-nodes&#x3D; # Comma-separated list of cluster node addresses.  spring.data.elasticsearch.properties.*&#x3D; # Additional properties used to configure the client.  spring.data.elasticsearch.repositories.enabled&#x3D;true # Whether to enable Elasticsearch repositories.      # DATA JDBC  spring.data.jdbc.repositories.enabled&#x3D;true # Whether to enable JDBC repositories.      # DATA LDAP  spring.data.ldap.repositories.enabled&#x3D;true # Whether to enable LDAP repositories.      # MONGODB (MongoProperties)  spring.data.mongodb.authentication-database&#x3D; # Authentication database name.  spring.data.mongodb.database&#x3D; # Database name.  spring.data.mongodb.field-naming-strategy&#x3D; # Fully qualified name of the FieldNamingStrategy to use.  spring.data.mongodb.grid-fs-database&#x3D; # GridFS database name.  spring.data.mongodb.host&#x3D; # Mongo server host. Cannot be set with URI.  spring.data.mongodb.password&#x3D; # Login password of the mongo server. Cannot be set with URI.  spring.data.mongodb.port&#x3D; # Mongo server port. Cannot be set with URI.  spring.data.mongodb.repositories.type&#x3D;auto # Type of Mongo repositories to enable.  spring.data.mongodb.uri&#x3D;mongodb:&#x2F;&#x2F;localhost&#x2F;test # Mongo database URI. Cannot be set with host, port and credentials.  spring.data.mongodb.username&#x3D; # Login user of the mongo server. Cannot be set with URI.      # DATA REDIS  spring.data.redis.repositories.enabled&#x3D;true # Whether to enable Redis repositories.      # NEO4J (Neo4jProperties)  spring.data.neo4j.auto-index&#x3D;none # Auto index mode.  spring.data.neo4j.embedded.enabled&#x3D;true # Whether to enable embedded mode if the embedded driver is available.  spring.data.neo4j.open-in-view&#x3D;true # Register OpenSessionInViewInterceptor. Binds a Neo4j Session to the thread for the entire processing of the request.  spring.data.neo4j.password&#x3D; # Login password of the server.  spring.data.neo4j.repositories.enabled&#x3D;true # Whether to enable Neo4j repositories.  spring.data.neo4j.uri&#x3D; # URI used by the driver. Auto-detected by default.  spring.data.neo4j.username&#x3D; # Login user of the server.      # DATA REST (RepositoryRestProperties)  spring.data.rest.base-path&#x3D; # Base path to be used by Spring Data REST to expose repository resources.  spring.data.rest.default-media-type&#x3D; # Content type to use as a default when none is specified.  spring.data.rest.default-page-size&#x3D; # Default size of pages.  spring.data.rest.detection-strategy&#x3D;default # Strategy to use to determine which repositories get exposed.  spring.data.rest.enable-enum-translation&#x3D; # Whether to enable enum value translation through the Spring Data REST default resource bundle.  spring.data.rest.limit-param-name&#x3D; # Name of the URL query string parameter that indicates how many results to return at once.  spring.data.rest.max-page-size&#x3D; # Maximum size of pages.  spring.data.rest.page-param-name&#x3D; # Name of the URL query string parameter that indicates what page to return.  spring.data.rest.return-body-on-create&#x3D; # Whether to return a response body after creating an entity.  spring.data.rest.return-body-on-update&#x3D; # Whether to return a response body after updating an entity.  spring.data.rest.sort-param-name&#x3D; # Name of the URL query string parameter that indicates what direction to sort results.      # SOLR (SolrProperties)  spring.data.solr.host&#x3D;http:&#x2F;&#x2F;127.0.0.1:8983&#x2F;solr # Solr host. Ignored if &quot;zk-host&quot; is set.  spring.data.solr.repositories.enabled&#x3D;true # Whether to enable Solr repositories.  spring.data.solr.zk-host&#x3D; # ZooKeeper host address in the form HOST:PORT.      # DATA WEB (SpringDataWebProperties)  spring.data.web.pageable.default-page-size&#x3D;20 # Default page size.  spring.data.web.pageable.max-page-size&#x3D;2000 # Maximum page size to be accepted.  spring.data.web.pageable.one-indexed-parameters&#x3D;false # Whether to expose and assume 1-based page number indexes.  spring.data.web.pageable.page-parameter&#x3D;page # Page index parameter name.  spring.data.web.pageable.prefix&#x3D; # General prefix to be prepended to the page number and page size parameters.  spring.data.web.pageable.qualifier-delimiter&#x3D;_ # Delimiter to be used between the qualifier and the actual page number and size properties.  spring.data.web.pageable.size-parameter&#x3D;size # Page size parameter name.  spring.data.web.sort.sort-parameter&#x3D;sort # Sort parameter name.      # DATASOURCE (DataSourceAutoConfiguration &amp; DataSourceProperties)  spring.datasource.continue-on-error&#x3D;false # Whether to stop if an error occurs while initializing the database.  spring.datasource.data&#x3D; # Data (DML) script resource references.  spring.datasource.data-username&#x3D; # Username of the database to execute DML scripts (if different).  spring.datasource.data-password&#x3D; # Password of the database to execute DML scripts (if different).  spring.datasource.dbcp2.*&#x3D; # Commons DBCP2 specific settings  spring.datasource.driver-class-name&#x3D; # Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.  spring.datasource.generate-unique-name&#x3D;false # Whether to generate a random datasource name.  spring.datasource.hikari.*&#x3D; # Hikari specific settings  spring.datasource.initialization-mode&#x3D;embedded # Initialize the datasource with available DDL and DML scripts.  spring.datasource.jmx-enabled&#x3D;false # Whether to enable JMX support (if provided by the underlying pool).  spring.datasource.jndi-name&#x3D; # JNDI location of the datasource. Class, url, username &amp; password are ignored when set.  spring.datasource.name&#x3D; # Name of the datasource. Default to &quot;testdb&quot; when using an embedded database.  spring.datasource.password&#x3D; # Login password of the database.  spring.datasource.platform&#x3D;all # Platform to use in the DDL or DML scripts (such as schema-$&#123;platform&#125;.sql or data-$&#123;platform&#125;.sql).  spring.datasource.schema&#x3D; # Schema (DDL) script resource references.  spring.datasource.schema-username&#x3D; # Username of the database to execute DDL scripts (if different).  spring.datasource.schema-password&#x3D; # Password of the database to execute DDL scripts (if different).  spring.datasource.separator&#x3D;; # Statement separator in SQL initialization scripts.  spring.datasource.sql-script-encoding&#x3D; # SQL scripts encoding.  spring.datasource.tomcat.*&#x3D; # Tomcat datasource specific settings  spring.datasource.type&#x3D; # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.  spring.datasource.url&#x3D; # JDBC URL of the database.  spring.datasource.username&#x3D; # Login username of the database.  spring.datasource.xa.data-source-class-name&#x3D; # XA datasource fully qualified name.  spring.datasource.xa.properties&#x3D; # Properties to pass to the XA data source.      # JEST (Elasticsearch HTTP client) (JestProperties)  spring.elasticsearch.jest.connection-timeout&#x3D;3s # Connection timeout.  spring.elasticsearch.jest.multi-threaded&#x3D;true # Whether to enable connection requests from multiple execution threads.  spring.elasticsearch.jest.password&#x3D; # Login password.  spring.elasticsearch.jest.proxy.host&#x3D; # Proxy host the HTTP client should use.  spring.elasticsearch.jest.proxy.port&#x3D; # Proxy port the HTTP client should use.  spring.elasticsearch.jest.read-timeout&#x3D;3s # Read timeout.  spring.elasticsearch.jest.uris&#x3D;http:&#x2F;&#x2F;localhost:9200 # Comma-separated list of the Elasticsearch instances to use.  spring.elasticsearch.jest.username&#x3D; # Login username.      # Elasticsearch REST clients (RestClientProperties)  spring.elasticsearch.rest.password&#x3D; # Credentials password.   spring.elasticsearch.rest.uris&#x3D;http:&#x2F;&#x2F;localhost:9200 # Comma-separated list of the Elasticsearch instances to use.   spring.elasticsearch.rest.username&#x3D; # Credentials username.      # H2 Web Console (H2ConsoleProperties)  spring.h2.console.enabled&#x3D;false # Whether to enable the console.  spring.h2.console.path&#x3D;&#x2F;h2-console # Path at which the console is available.  spring.h2.console.settings.trace&#x3D;false # Whether to enable trace output.  spring.h2.console.settings.web-allow-others&#x3D;false # Whether to enable remote access.      # InfluxDB (InfluxDbProperties)  spring.influx.password&#x3D; # Login password.  spring.influx.url&#x3D; # URL of the InfluxDB instance to which to connect.  spring.influx.user&#x3D; # Login user.      # JOOQ (JooqProperties)  spring.jooq.sql-dialect&#x3D; # SQL dialect to use. Auto-detected by default.      # JDBC (JdbcProperties)  spring.jdbc.template.fetch-size&#x3D;-1 # Number of rows that should be fetched from the database when more rows are needed.  spring.jdbc.template.max-rows&#x3D;-1 # Maximum number of rows.  spring.jdbc.template.query-timeout&#x3D; # Query timeout. Default is to use the JDBC driver&#39;s default configuration. If a duration suffix is not specified, seconds will be used.      # JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)  spring.data.jpa.repositories.bootstrap-mode&#x3D;default # Bootstrap mode for JPA repositories.  spring.data.jpa.repositories.enabled&#x3D;true # Whether to enable JPA repositories.  spring.jpa.database&#x3D; # Target database to operate on, auto-detected by default. Can be alternatively set using the &quot;databasePlatform&quot; property.  spring.jpa.database-platform&#x3D; # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the &quot;Database&quot; enum.  spring.jpa.generate-ddl&#x3D;false # Whether to initialize the schema on startup.  spring.jpa.hibernate.ddl-auto&#x3D; # DDL mode. This is actually a shortcut for the &quot;hibernate.hbm2ddl.auto&quot; property. Defaults to &quot;create-drop&quot; when using an embedded database and no schema manager was detected. Otherwise, defaults to &quot;none&quot;.  spring.jpa.hibernate.naming.implicit-strategy&#x3D; # Fully qualified name of the implicit naming strategy.  spring.jpa.hibernate.naming.physical-strategy&#x3D; # Fully qualified name of the physical naming strategy.  spring.jpa.hibernate.use-new-id-generator-mappings&#x3D; # Whether to use Hibernate&#39;s newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.  spring.jpa.mapping-resources&#x3D; # Mapping resources (equivalent to &quot;mapping-file&quot; entries in persistence.xml).  spring.jpa.open-in-view&#x3D;true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.  spring.jpa.properties.*&#x3D; # Additional native properties to set on the JPA provider.  spring.jpa.show-sql&#x3D;false # Whether to enable logging of SQL statements.      # JTA (JtaAutoConfiguration)  spring.jta.enabled&#x3D;true # Whether to enable JTA support.  spring.jta.log-dir&#x3D; # Transaction logs directory.  spring.jta.transaction-manager-id&#x3D; # Transaction manager unique identifier.      # ATOMIKOS (AtomikosProperties)  spring.jta.atomikos.connectionfactory.borrow-connection-timeout&#x3D;30 # Timeout, in seconds, for borrowing connections from the pool.  spring.jta.atomikos.connectionfactory.ignore-session-transacted-flag&#x3D;true # Whether to ignore the transacted flag when creating session.  spring.jta.atomikos.connectionfactory.local-transaction-mode&#x3D;false # Whether local transactions are desired.  spring.jta.atomikos.connectionfactory.maintenance-interval&#x3D;60 # The time, in seconds, between runs of the pool&#39;s maintenance thread.  spring.jta.atomikos.connectionfactory.max-idle-time&#x3D;60 # The time, in seconds, after which connections are cleaned up from the pool.  spring.jta.atomikos.connectionfactory.max-lifetime&#x3D;0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.  spring.jta.atomikos.connectionfactory.max-pool-size&#x3D;1 # The maximum size of the pool.  spring.jta.atomikos.connectionfactory.min-pool-size&#x3D;1 # The minimum size of the pool.  spring.jta.atomikos.connectionfactory.reap-timeout&#x3D;0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.  spring.jta.atomikos.connectionfactory.unique-resource-name&#x3D;jmsConnectionFactory # The unique name used to identify the resource during recovery.  spring.jta.atomikos.connectionfactory.xa-connection-factory-class-name&#x3D; # Vendor-specific implementation of XAConnectionFactory.  spring.jta.atomikos.connectionfactory.xa-properties&#x3D; # Vendor-specific XA properties.  spring.jta.atomikos.datasource.borrow-connection-timeout&#x3D;30 # Timeout, in seconds, for borrowing connections from the pool.  spring.jta.atomikos.datasource.concurrent-connection-validation&#x3D; # Whether to use concurrent connection validation.  spring.jta.atomikos.datasource.default-isolation-level&#x3D; # Default isolation level of connections provided by the pool.  spring.jta.atomikos.datasource.login-timeout&#x3D; # Timeout, in seconds, for establishing a database connection.  spring.jta.atomikos.datasource.maintenance-interval&#x3D;60 # The time, in seconds, between runs of the pool&#39;s maintenance thread.  spring.jta.atomikos.datasource.max-idle-time&#x3D;60 # The time, in seconds, after which connections are cleaned up from the pool.  spring.jta.atomikos.datasource.max-lifetime&#x3D;0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.  spring.jta.atomikos.datasource.max-pool-size&#x3D;1 # The maximum size of the pool.  spring.jta.atomikos.datasource.min-pool-size&#x3D;1 # The minimum size of the pool.  spring.jta.atomikos.datasource.reap-timeout&#x3D;0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.  spring.jta.atomikos.datasource.test-query&#x3D; # SQL query or statement used to validate a connection before returning it.  spring.jta.atomikos.datasource.unique-resource-name&#x3D;dataSource # The unique name used to identify the resource during recovery.  spring.jta.atomikos.datasource.xa-data-source-class-name&#x3D; # Vendor-specific implementation of XAConnectionFactory.  spring.jta.atomikos.datasource.xa-properties&#x3D; # Vendor-specific XA properties.  spring.jta.atomikos.properties.allow-sub-transactions&#x3D;true # Specify whether sub-transactions are allowed.  spring.jta.atomikos.properties.checkpoint-interval&#x3D;500 # Interval between checkpoints, expressed as the number of log writes between two checkpoints.  spring.jta.atomikos.properties.default-jta-timeout&#x3D;10000ms # Default timeout for JTA transactions.  spring.jta.atomikos.properties.default-max-wait-time-on-shutdown&#x3D;9223372036854775807 # How long should normal shutdown (no-force) wait for transactions to complete.  spring.jta.atomikos.properties.enable-logging&#x3D;true # Whether to enable disk logging.  spring.jta.atomikos.properties.force-shutdown-on-vm-exit&#x3D;false # Whether a VM shutdown should trigger forced shutdown of the transaction core.  spring.jta.atomikos.properties.log-base-dir&#x3D; # Directory in which the log files should be stored.  spring.jta.atomikos.properties.log-base-name&#x3D;tmlog # Transactions log file base name.  spring.jta.atomikos.properties.max-actives&#x3D;50 # Maximum number of active transactions.  spring.jta.atomikos.properties.max-timeout&#x3D;300000ms # Maximum timeout that can be allowed for transactions.  spring.jta.atomikos.properties.recovery.delay&#x3D;10000ms # Delay between two recovery scans.  spring.jta.atomikos.properties.recovery.forget-orphaned-log-entries-delay&#x3D;86400000ms # Delay after which recovery can cleanup pending (&#39;orphaned&#39;) log entries.  spring.jta.atomikos.properties.recovery.max-retries&#x3D;5 # Number of retry attempts to commit the transaction before throwing an exception.  spring.jta.atomikos.properties.recovery.retry-interval&#x3D;10000ms # Delay between retry attempts.  spring.jta.atomikos.properties.serial-jta-transactions&#x3D;true # Whether sub-transactions should be joined when possible.  spring.jta.atomikos.properties.service&#x3D; # Transaction manager implementation that should be started.  spring.jta.atomikos.properties.threaded-two-phase-commit&#x3D;false # Whether to use different (and concurrent) threads for two-phase commit on the participating resources.  spring.jta.atomikos.properties.transaction-manager-unique-name&#x3D; # The transaction manager&#39;s unique name.      # BITRONIX  spring.jta.bitronix.connectionfactory.acquire-increment&#x3D;1 # Number of connections to create when growing the pool.  spring.jta.bitronix.connectionfactory.acquisition-interval&#x3D;1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.  spring.jta.bitronix.connectionfactory.acquisition-timeout&#x3D;30 # Timeout, in seconds, for acquiring connections from the pool.  spring.jta.bitronix.connectionfactory.allow-local-transactions&#x3D;true # Whether the transaction manager should allow mixing XA and non-XA transactions.  spring.jta.bitronix.connectionfactory.apply-transaction-timeout&#x3D;false # Whether the transaction timeout should be set on the XAResource when it is enlisted.  spring.jta.bitronix.connectionfactory.automatic-enlisting-enabled&#x3D;true # Whether resources should be enlisted and delisted automatically.  spring.jta.bitronix.connectionfactory.cache-producers-consumers&#x3D;true # Whether producers and consumers should be cached.  spring.jta.bitronix.connectionfactory.class-name&#x3D; # Underlying implementation class name of the XA resource.  spring.jta.bitronix.connectionfactory.defer-connection-release&#x3D;true # Whether the provider can run many transactions on the same connection and supports transaction interleaving.  spring.jta.bitronix.connectionfactory.disabled&#x3D; # Whether this resource is disabled, meaning it&#39;s temporarily forbidden to acquire a connection from its pool.  spring.jta.bitronix.connectionfactory.driver-properties&#x3D; # Properties that should be set on the underlying implementation.  spring.jta.bitronix.connectionfactory.failed&#x3D; # Mark this resource producer as failed.  spring.jta.bitronix.connectionfactory.ignore-recovery-failures&#x3D;false # Whether recovery failures should be ignored.  spring.jta.bitronix.connectionfactory.max-idle-time&#x3D;60 # The time, in seconds, after which connections are cleaned up from the pool.  spring.jta.bitronix.connectionfactory.max-pool-size&#x3D;10 # The maximum size of the pool. 0 denotes no limit.  spring.jta.bitronix.connectionfactory.min-pool-size&#x3D;0 # The minimum size of the pool.  spring.jta.bitronix.connectionfactory.password&#x3D; # The password to use to connect to the JMS provider.  spring.jta.bitronix.connectionfactory.share-transaction-connections&#x3D;false #  Whether connections in the ACCESSIBLE state can be shared within the context of a transaction.  spring.jta.bitronix.connectionfactory.test-connections&#x3D;true # Whether connections should be tested when acquired from the pool.  spring.jta.bitronix.connectionfactory.two-pc-ordering-position&#x3D;1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, always last is Integer.MAX_VALUE).  spring.jta.bitronix.connectionfactory.unique-name&#x3D;jmsConnectionFactory # The unique name used to identify the resource during recovery.  spring.jta.bitronix.connectionfactory.use-tm-join&#x3D;true # Whether TMJOIN should be used when starting XAResources.  spring.jta.bitronix.connectionfactory.user&#x3D; # The user to use to connect to the JMS provider.  spring.jta.bitronix.datasource.acquire-increment&#x3D;1 # Number of connections to create when growing the pool.  spring.jta.bitronix.datasource.acquisition-interval&#x3D;1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.  spring.jta.bitronix.datasource.acquisition-timeout&#x3D;30 # Timeout, in seconds, for acquiring connections from the pool.  spring.jta.bitronix.datasource.allow-local-transactions&#x3D;true # Whether the transaction manager should allow mixing XA and non-XA transactions.  spring.jta.bitronix.datasource.apply-transaction-timeout&#x3D;false # Whether the transaction timeout should be set on the XAResource when it is enlisted.  spring.jta.bitronix.datasource.automatic-enlisting-enabled&#x3D;true # Whether resources should be enlisted and delisted automatically.  spring.jta.bitronix.datasource.class-name&#x3D; # Underlying implementation class name of the XA resource.  spring.jta.bitronix.datasource.cursor-holdability&#x3D; # The default cursor holdability for connections.  spring.jta.bitronix.datasource.defer-connection-release&#x3D;true # Whether the database can run many transactions on the same connection and supports transaction interleaving.  spring.jta.bitronix.datasource.disabled&#x3D; # Whether this resource is disabled, meaning it&#39;s temporarily forbidden to acquire a connection from its pool.  spring.jta.bitronix.datasource.driver-properties&#x3D; # Properties that should be set on the underlying implementation.  spring.jta.bitronix.datasource.enable-jdbc4-connection-test&#x3D; # Whether Connection.isValid() is called when acquiring a connection from the pool.  spring.jta.bitronix.datasource.failed&#x3D; # Mark this resource producer as failed.  spring.jta.bitronix.datasource.ignore-recovery-failures&#x3D;false # Whether recovery failures should be ignored.  spring.jta.bitronix.datasource.isolation-level&#x3D; # The default isolation level for connections.  spring.jta.bitronix.datasource.local-auto-commit&#x3D; # The default auto-commit mode for local transactions.  spring.jta.bitronix.datasource.login-timeout&#x3D; # Timeout, in seconds, for establishing a database connection.  spring.jta.bitronix.datasource.max-idle-time&#x3D;60 # The time, in seconds, after which connections are cleaned up from the pool.  spring.jta.bitronix.datasource.max-pool-size&#x3D;10 # The maximum size of the pool. 0 denotes no limit.  spring.jta.bitronix.datasource.min-pool-size&#x3D;0 # The minimum size of the pool.  spring.jta.bitronix.datasource.prepared-statement-cache-size&#x3D;0 # The target size of the prepared statement cache. 0 disables the cache.  spring.jta.bitronix.datasource.share-transaction-connections&#x3D;false #  Whether connections in the ACCESSIBLE state can be shared within the context of a transaction.  spring.jta.bitronix.datasource.test-query&#x3D; # SQL query or statement used to validate a connection before returning it.  spring.jta.bitronix.datasource.two-pc-ordering-position&#x3D;1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, and always last is Integer.MAX_VALUE).  spring.jta.bitronix.datasource.unique-name&#x3D;dataSource # The unique name used to identify the resource during recovery.  spring.jta.bitronix.datasource.use-tm-join&#x3D;true # Whether TMJOIN should be used when starting XAResources.  spring.jta.bitronix.properties.allow-multiple-lrc&#x3D;false # Whether to allow multiple LRC resources to be enlisted into the same transaction.  spring.jta.bitronix.properties.asynchronous2-pc&#x3D;false # Whether to enable asynchronously execution of two phase commit.  spring.jta.bitronix.properties.background-recovery-interval-seconds&#x3D;60 # Interval in seconds at which to run the recovery process in the background.  spring.jta.bitronix.properties.current-node-only-recovery&#x3D;true # Whether to recover only the current node.  spring.jta.bitronix.properties.debug-zero-resource-transaction&#x3D;false # Whether to log the creation and commit call stacks of transactions executed without a single enlisted resource.  spring.jta.bitronix.properties.default-transaction-timeout&#x3D;60 # Default transaction timeout, in seconds.  spring.jta.bitronix.properties.disable-jmx&#x3D;false # Whether to enable JMX support.  spring.jta.bitronix.properties.exception-analyzer&#x3D; # Set the fully qualified name of the exception analyzer implementation to use.  spring.jta.bitronix.properties.filter-log-status&#x3D;false # Whether to enable filtering of logs so that only mandatory logs are written.  spring.jta.bitronix.properties.force-batching-enabled&#x3D;true #  Whether disk forces are batched.  spring.jta.bitronix.properties.forced-write-enabled&#x3D;true # Whether logs are forced to disk.  spring.jta.bitronix.properties.graceful-shutdown-interval&#x3D;60 # Maximum amount of seconds the TM waits for transactions to get done before aborting them at shutdown time.  spring.jta.bitronix.properties.jndi-transaction-synchronization-registry-name&#x3D; # JNDI name of the TransactionSynchronizationRegistry.  spring.jta.bitronix.properties.jndi-user-transaction-name&#x3D; # JNDI name of the UserTransaction.  spring.jta.bitronix.properties.journal&#x3D;disk # Name of the journal. Can be &#39;disk&#39;, &#39;null&#39;, or a class name.  spring.jta.bitronix.properties.log-part1-filename&#x3D;btm1.tlog # Name of the first fragment of the journal.  spring.jta.bitronix.properties.log-part2-filename&#x3D;btm2.tlog # Name of the second fragment of the journal.  spring.jta.bitronix.properties.max-log-size-in-mb&#x3D;2 # Maximum size in megabytes of the journal fragments.  spring.jta.bitronix.properties.resource-configuration-filename&#x3D; # ResourceLoader configuration file name.  spring.jta.bitronix.properties.server-id&#x3D; # ASCII ID that must uniquely identify this TM instance. Defaults to the machine&#39;s IP address.  spring.jta.bitronix.properties.skip-corrupted-logs&#x3D;false # Skip corrupted transactions log entries.  spring.jta.bitronix.properties.warn-about-zero-resource-transaction&#x3D;true # Whether to log a warning for transactions executed without a single enlisted resource.      # EMBEDDED MONGODB (EmbeddedMongoProperties)  spring.mongodb.embedded.features&#x3D;sync_delay # Comma-separated list of features to enable.  spring.mongodb.embedded.storage.database-dir&#x3D; # Directory used for data storage.  spring.mongodb.embedded.storage.oplog-size&#x3D; # Maximum size of the oplog.  spring.mongodb.embedded.storage.repl-set-name&#x3D; # Name of the replica set.  spring.mongodb.embedded.version&#x3D;3.5.5 # Version of Mongo to use.      # REDIS (RedisProperties)  spring.redis.cluster.max-redirects&#x3D; # Maximum number of redirects to follow when executing commands across the cluster.  spring.redis.cluster.nodes&#x3D; # Comma-separated list of &quot;host:port&quot; pairs to bootstrap from.  spring.redis.database&#x3D;0 # Database index used by the connection factory.  spring.redis.url&#x3D; # Connection URL. Overrides host, port, and password. User is ignored. Example: redis:&#x2F;&#x2F;user:password@example.com:6379  spring.redis.host&#x3D;localhost # Redis server host.  spring.redis.jedis.pool.max-active&#x3D;8 # Maximum number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.  spring.redis.jedis.pool.max-idle&#x3D;8 # Maximum number of &quot;idle&quot; connections in the pool. Use a negative value to indicate an unlimited number of idle connections.  spring.redis.jedis.pool.max-wait&#x3D;-1ms # Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.  spring.redis.jedis.pool.min-idle&#x3D;0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.  spring.redis.lettuce.pool.max-active&#x3D;8 # Maximum number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.  spring.redis.lettuce.pool.max-idle&#x3D;8 # Maximum number of &quot;idle&quot; connections in the pool. Use a negative value to indicate an unlimited number of idle connections.  spring.redis.lettuce.pool.max-wait&#x3D;-1ms # Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.  spring.redis.lettuce.pool.min-idle&#x3D;0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.  spring.redis.lettuce.shutdown-timeout&#x3D;100ms # Shutdown timeout.  spring.redis.password&#x3D; # Login password of the redis server.  spring.redis.port&#x3D;6379 # Redis server port.  spring.redis.sentinel.master&#x3D; # Name of the Redis server.  spring.redis.sentinel.nodes&#x3D; # Comma-separated list of &quot;host:port&quot; pairs.  spring.redis.ssl&#x3D;false # Whether to enable SSL support.  spring.redis.timeout&#x3D; # Connection timeout.      # TRANSACTION (TransactionProperties)  spring.transaction.default-timeout&#x3D; # Default transaction timeout. If a duration suffix is not specified, seconds will be used.  spring.transaction.rollback-on-commit-failure&#x3D; # Whether to roll back on commit failures.  # ----------------------------------------# INTEGRATION PROPERTIES# ---------------------------------------- # ACTIVEMQ (ActiveMQProperties)spring.activemq.broker-url&#x3D; # URL of the ActiveMQ broker. Auto-generated by default.spring.activemq.close-timeout&#x3D;15s # Time to wait before considering a close complete.spring.activemq.in-memory&#x3D;true # Whether the default broker URL should be in memory. Ignored if an explicit broker has been specified.spring.activemq.non-blocking-redelivery&#x3D;false # Whether to stop message delivery before re-delivering messages from a rolled back transaction. This implies that message order is not preserved when this is enabled.spring.activemq.password&#x3D; # Login password of the broker.spring.activemq.send-timeout&#x3D;0ms # Time to wait on message sends for a response. Set it to 0 to wait forever.spring.activemq.user&#x3D; # Login user of the broker.spring.activemq.packages.trust-all&#x3D; # Whether to trust all packages.spring.activemq.packages.trusted&#x3D; # Comma-separated list of specific packages to trust (when not trusting all packages).spring.activemq.pool.block-if-full&#x3D;true # Whether to block when a connection is requested and the pool is full. Set it to false to throw a &quot;JMSException&quot; instead.spring.activemq.pool.block-if-full-timeout&#x3D;-1ms # Blocking period before throwing an exception if the pool is still full.spring.activemq.pool.enabled&#x3D;false # Whether a JmsPoolConnectionFactory should be created, instead of a regular ConnectionFactory.spring.activemq.pool.idle-timeout&#x3D;30s # Connection idle timeout.spring.activemq.pool.max-connections&#x3D;1 # Maximum number of pooled connections.spring.activemq.pool.max-sessions-per-connection&#x3D;500 # Maximum number of pooled sessions per connection in the pool.spring.activemq.pool.time-between-expiration-check&#x3D;-1ms # Time to sleep between runs of the idle connection eviction thread. When negative, no idle connection eviction thread runs.spring.activemq.pool.use-anonymous-producers&#x3D;true # Whether to use only one anonymous &quot;MessageProducer&quot; instance. Set it to false to create one &quot;MessageProducer&quot; every time one is required. # ARTEMIS (ArtemisProperties)spring.artemis.embedded.cluster-password&#x3D; # Cluster password. Randomly generated on startup by default.spring.artemis.embedded.data-directory&#x3D; # Journal file directory. Not necessary if persistence is turned off.spring.artemis.embedded.enabled&#x3D;true # Whether to enable embedded mode if the Artemis server APIs are available.spring.artemis.embedded.persistent&#x3D;false # Whether to enable persistent store.spring.artemis.embedded.queues&#x3D; # Comma-separated list of queues to create on startup.spring.artemis.embedded.server-id&#x3D; # Server ID. By default, an auto-incremented counter is used.spring.artemis.embedded.topics&#x3D; # Comma-separated list of topics to create on startup.spring.artemis.host&#x3D;localhost # Artemis broker host.spring.artemis.mode&#x3D; # Artemis deployment mode, auto-detected by default.spring.artemis.password&#x3D; # Login password of the broker.spring.artemis.pool.block-if-full&#x3D;true # Whether to block when a connection is requested and the pool is full. Set it to false to throw a &quot;JMSException&quot; instead.spring.artemis.pool.block-if-full-timeout&#x3D;-1ms # Blocking period before throwing an exception if the pool is still full.spring.artemis.pool.enabled&#x3D;false # Whether a JmsPoolConnectionFactory should be created, instead of a regular ConnectionFactory.spring.artemis.pool.idle-timeout&#x3D;30s # Connection idle timeout.spring.artemis.pool.max-connections&#x3D;1 # Maximum number of pooled connections.spring.artemis.pool.max-sessions-per-connection&#x3D;500 # Maximum number of pooled sessions per connection in the pool.spring.artemis.pool.time-between-expiration-check&#x3D;-1ms # Time to sleep between runs of the idle connection eviction thread. When negative, no idle connection eviction thread runs.spring.artemis.pool.use-anonymous-producers&#x3D;true # Whether to use only one anonymous &quot;MessageProducer&quot; instance. Set it to false to create one &quot;MessageProducer&quot; every time one is required.spring.artemis.port&#x3D;61616 # Artemis broker port.spring.artemis.user&#x3D; # Login user of the broker. # SPRING BATCH (BatchProperties)spring.batch.initialize-schema&#x3D;embedded # Database schema initialization mode.spring.batch.job.enabled&#x3D;true # Execute all Spring Batch jobs in the context on startup.spring.batch.job.names&#x3D; # Comma-separated list of job names to execute on startup (for instance, &#96;job1,job2&#96;). By default, all Jobs found in the context are executed.spring.batch.schema&#x3D;classpath:org&#x2F;springframework&#x2F;batch&#x2F;core&#x2F;schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.spring.batch.table-prefix&#x3D; # Table prefix for all the batch meta-data tables. # SPRING INTEGRATION (IntegrationProperties)spring.integration.jdbc.initialize-schema&#x3D;embedded # Database schema initialization mode.spring.integration.jdbc.schema&#x3D;classpath:org&#x2F;springframework&#x2F;integration&#x2F;jdbc&#x2F;schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema. # JMS (JmsProperties)spring.jms.cache.consumers&#x3D;false # Whether to cache message consumers.spring.jms.cache.enabled&#x3D;true # Whether to cache sessions.spring.jms.cache.producers&#x3D;true # Whether to cache message producers.spring.jms.cache.session-cache-size&#x3D;1 # Size of the session cache (per JMS Session type).spring.jms.jndi-name&#x3D; # Connection factory JNDI name. When set, takes precedence to others connection factory auto-configurations.spring.jms.listener.acknowledge-mode&#x3D; # Acknowledge mode of the container. By default, the listener is transacted with automatic acknowledgment.spring.jms.listener.auto-startup&#x3D;true # Start the container automatically on startup.spring.jms.listener.concurrency&#x3D; # Minimum number of concurrent consumers.spring.jms.listener.max-concurrency&#x3D; # Maximum number of concurrent consumers.spring.jms.pub-sub-domain&#x3D;false # Whether the default destination type is topic.spring.jms.template.default-destination&#x3D; # Default destination to use on send and receive operations that do not have a destination parameter.spring.jms.template.delivery-delay&#x3D; # Delivery delay to use for send calls.spring.jms.template.delivery-mode&#x3D; # Delivery mode. Enables QoS (Quality of Service) when set.spring.jms.template.priority&#x3D; # Priority of a message when sending. Enables QoS (Quality of Service) when set.spring.jms.template.qos-enabled&#x3D; # Whether to enable explicit QoS (Quality of Service) when sending a message.spring.jms.template.receive-timeout&#x3D; # Timeout to use for receive calls.spring.jms.template.time-to-live&#x3D; # Time-to-live of a message when sending. Enables QoS (Quality of Service) when set. # APACHE KAFKA (KafkaProperties)spring.kafka.admin.client-id&#x3D; # ID to pass to the server when making requests. Used for server-side logging.spring.kafka.admin.fail-fast&#x3D;false # Whether to fail fast if the broker is not available on startup.spring.kafka.admin.properties.*&#x3D; # Additional admin-specific properties used to configure the client.spring.kafka.admin.ssl.key-password&#x3D; # Password of the private key in the key store file.spring.kafka.admin.ssl.key-store-location&#x3D; # Location of the key store file.spring.kafka.admin.ssl.key-store-password&#x3D; # Store password for the key store file.spring.kafka.admin.ssl.key-store-type&#x3D; # Type of the key store.spring.kafka.admin.ssl.protocol&#x3D; # SSL protocol to use.spring.kafka.admin.ssl.trust-store-location&#x3D; # Location of the trust store file.spring.kafka.admin.ssl.trust-store-password&#x3D; # Store password for the trust store file.spring.kafka.admin.ssl.trust-store-type&#x3D; # Type of the trust store.spring.kafka.bootstrap-servers&#x3D; # Comma-delimited list of host:port pairs to use for establishing the initial connections to the Kafka cluster. Applies to all components unless overridden.spring.kafka.client-id&#x3D; # ID to pass to the server when making requests. Used for server-side logging.spring.kafka.consumer.auto-commit-interval&#x3D; # Frequency with which the consumer offsets are auto-committed to Kafka if &#39;enable.auto.commit&#39; is set to true.spring.kafka.consumer.auto-offset-reset&#x3D; # What to do when there is no initial offset in Kafka or if the current offset no longer exists on the server.spring.kafka.consumer.bootstrap-servers&#x3D; # Comma-delimited list of host:port pairs to use for establishing the initial connections to the Kafka cluster. Overrides the global property, for consumers.spring.kafka.consumer.client-id&#x3D; # ID to pass to the server when making requests. Used for server-side logging.spring.kafka.consumer.enable-auto-commit&#x3D; # Whether the consumer&#39;s offset is periodically committed in the background.spring.kafka.consumer.fetch-max-wait&#x3D; # Maximum amount of time the server blocks before answering the fetch request if there isn&#39;t sufficient data to immediately satisfy the requirement given by &quot;fetch-min-size&quot;.spring.kafka.consumer.fetch-min-size&#x3D; # Minimum amount of data the server should return for a fetch request.spring.kafka.consumer.group-id&#x3D; # Unique string that identifies the consumer group to which this consumer belongs.spring.kafka.consumer.heartbeat-interval&#x3D; # Expected time between heartbeats to the consumer coordinator.spring.kafka.consumer.key-deserializer&#x3D; # Deserializer class for keys.spring.kafka.consumer.max-poll-records&#x3D; # Maximum number of records returned in a single call to poll().spring.kafka.consumer.properties.*&#x3D; # Additional consumer-specific properties used to configure the client.spring.kafka.consumer.ssl.key-password&#x3D; # Password of the private key in the key store file.spring.kafka.consumer.ssl.key-store-location&#x3D; # Location of the key store file.spring.kafka.consumer.ssl.key-store-password&#x3D; # Store password for the key store file.spring.kafka.consumer.ssl.key-store-type&#x3D; # Type of the key store.spring.kafka.consumer.ssl.protocol&#x3D; # SSL protocol to use.spring.kafka.consumer.ssl.trust-store-location&#x3D; # Location of the trust store file.spring.kafka.consumer.ssl.trust-store-password&#x3D; # Store password for the trust store file.spring.kafka.consumer.ssl.trust-store-type&#x3D; # Type of the trust store.spring.kafka.consumer.value-deserializer&#x3D; # Deserializer class for values.spring.kafka.jaas.control-flag&#x3D;required # Control flag for login configuration.spring.kafka.jaas.enabled&#x3D;false # Whether to enable JAAS configuration.spring.kafka.jaas.login-module&#x3D;com.sun.security.auth.module.Krb5LoginModule # Login module.spring.kafka.jaas.options&#x3D; # Additional JAAS options.spring.kafka.listener.ack-count&#x3D; # Number of records between offset commits when ackMode is &quot;COUNT&quot; or &quot;COUNT_TIME&quot;.spring.kafka.listener.ack-mode&#x3D; # Listener AckMode. See the spring-kafka documentation.spring.kafka.listener.ack-time&#x3D; # Time between offset commits when ackMode is &quot;TIME&quot; or &quot;COUNT_TIME&quot;.spring.kafka.listener.client-id&#x3D; # Prefix for the listener&#39;s consumer client.id property.spring.kafka.listener.concurrency&#x3D; # Number of threads to run in the listener containers.spring.kafka.listener.idle-event-interval&#x3D; # Time between publishing idle consumer events (no data received).spring.kafka.listener.log-container-config&#x3D; # Whether to log the container configuration during initialization (INFO level).spring.kafka.listener.monitor-interval&#x3D; # Time between checks for non-responsive consumers. If a duration suffix is not specified, seconds will be used.spring.kafka.listener.no-poll-threshold&#x3D; # Multiplier applied to &quot;pollTimeout&quot; to determine if a consumer is non-responsive.spring.kafka.listener.poll-timeout&#x3D; # Timeout to use when polling the consumer.spring.kafka.listener.type&#x3D;single # Listener type.spring.kafka.producer.acks&#x3D; # Number of acknowledgments the producer requires the leader to have received before considering a request complete.spring.kafka.producer.batch-size&#x3D; # Default batch size.spring.kafka.producer.bootstrap-servers&#x3D; # Comma-delimited list of host:port pairs to use for establishing the initial connections to the Kafka cluster. Overrides the global property, for producers.spring.kafka.producer.buffer-memory&#x3D; # Total memory size the producer can use to buffer records waiting to be sent to the server.spring.kafka.producer.client-id&#x3D; # ID to pass to the server when making requests. Used for server-side logging.spring.kafka.producer.compression-type&#x3D; # Compression type for all data generated by the producer.spring.kafka.producer.key-serializer&#x3D; # Serializer class for keys.spring.kafka.producer.properties.*&#x3D; # Additional producer-specific properties used to configure the client.spring.kafka.producer.retries&#x3D; # When greater than zero, enables retrying of failed sends.spring.kafka.producer.ssl.key-password&#x3D; # Password of the private key in the key store file.spring.kafka.producer.ssl.key-store-location&#x3D; # Location of the key store file.spring.kafka.producer.ssl.key-store-password&#x3D; # Store password for the key store file.spring.kafka.producer.ssl.key-store-type&#x3D; # Type of the key store.spring.kafka.producer.ssl.protocol&#x3D; # SSL protocol to use.spring.kafka.producer.ssl.trust-store-location&#x3D; # Location of the trust store file.spring.kafka.producer.ssl.trust-store-password&#x3D; # Store password for the trust store file.spring.kafka.producer.ssl.trust-store-type&#x3D; # Type of the trust store.spring.kafka.producer.transaction-id-prefix&#x3D; # When non empty, enables transaction support for producer.spring.kafka.producer.value-serializer&#x3D; # Serializer class for values.spring.kafka.properties.*&#x3D; # Additional properties, common to producers and consumers, used to configure the client.spring.kafka.ssl.key-password&#x3D; # Password of the private key in the key store file.spring.kafka.ssl.key-store-location&#x3D; # Location of the key store file.spring.kafka.ssl.key-store-password&#x3D; # Store password for the key store file.spring.kafka.ssl.key-store-type&#x3D; # Type of the key store.spring.kafka.ssl.protocol&#x3D; # SSL protocol to use.spring.kafka.ssl.trust-store-location&#x3D; # Location of the trust store file.spring.kafka.ssl.trust-store-password&#x3D; # Store password for the trust store file.spring.kafka.ssl.trust-store-type&#x3D; # Type of the trust store.spring.kafka.streams.application-id&#x3D; # Kafka streams application.id property; default spring.application.name.spring.kafka.streams.auto-startup&#x3D;true # Whether or not to auto-start the streams factory bean.spring.kafka.streams.bootstrap-servers&#x3D; # Comma-delimited list of host:port pairs to use for establishing the initial connections to the Kafka cluster. Overrides the global property, for streams.spring.kafka.streams.cache-max-size-buffering&#x3D; # Maximum memory size to be used for buffering across all threads.spring.kafka.streams.client-id&#x3D; # ID to pass to the server when making requests. Used for server-side logging.spring.kafka.streams.properties.*&#x3D; # Additional Kafka properties used to configure the streams.spring.kafka.streams.replication-factor&#x3D; # The replication factor for change log topics and repartition topics created by the stream processing application.spring.kafka.streams.ssl.key-password&#x3D; # Password of the private key in the key store file.spring.kafka.streams.ssl.key-store-location&#x3D; # Location of the key store file.spring.kafka.streams.ssl.key-store-password&#x3D; # Store password for the key store file.spring.kafka.streams.ssl.key-store-type&#x3D; # Type of the key store.spring.kafka.streams.ssl.protocol&#x3D; # SSL protocol to use.spring.kafka.streams.ssl.trust-store-location&#x3D; # Location of the trust store file.spring.kafka.streams.ssl.trust-store-password&#x3D; # Store password for the trust store file.spring.kafka.streams.ssl.trust-store-type&#x3D; # Type of the trust store.spring.kafka.streams.state-dir&#x3D; # Directory location for the state store.spring.kafka.template.default-topic&#x3D; # Default topic to which messages are sent. # RABBIT (RabbitProperties)spring.rabbitmq.addresses&#x3D; # Comma-separated list of addresses to which the client should connect.spring.rabbitmq.cache.channel.checkout-timeout&#x3D; # Duration to wait to obtain a channel if the cache size has been reached.spring.rabbitmq.cache.channel.size&#x3D; # Number of channels to retain in the cache.spring.rabbitmq.cache.connection.mode&#x3D;channel # Connection factory cache mode.spring.rabbitmq.cache.connection.size&#x3D; # Number of connections to cache.spring.rabbitmq.connection-timeout&#x3D; # Connection timeout. Set it to zero to wait forever.spring.rabbitmq.dynamic&#x3D;true # Whether to create an AmqpAdmin bean.spring.rabbitmq.host&#x3D;localhost # RabbitMQ host.spring.rabbitmq.listener.direct.acknowledge-mode&#x3D; # Acknowledge mode of container.spring.rabbitmq.listener.direct.auto-startup&#x3D;true # Whether to start the container automatically on startup.spring.rabbitmq.listener.direct.consumers-per-queue&#x3D; # Number of consumers per queue.spring.rabbitmq.listener.direct.default-requeue-rejected&#x3D; # Whether rejected deliveries are re-queued by default.spring.rabbitmq.listener.direct.idle-event-interval&#x3D; # How often idle container events should be published.spring.rabbitmq.listener.direct.missing-queues-fatal&#x3D;false # Whether to fail if the queues declared by the container are not available on the broker.spring.rabbitmq.listener.direct.prefetch&#x3D; # Maximum number of unacknowledged messages that can be outstanding at each consumer.spring.rabbitmq.listener.direct.retry.enabled&#x3D;false # Whether publishing retries are enabled.spring.rabbitmq.listener.direct.retry.initial-interval&#x3D;1000ms # Duration between the first and second attempt to deliver a message.spring.rabbitmq.listener.direct.retry.max-attempts&#x3D;3 # Maximum number of attempts to deliver a message.spring.rabbitmq.listener.direct.retry.max-interval&#x3D;10000ms # Maximum duration between attempts.spring.rabbitmq.listener.direct.retry.multiplier&#x3D;1 # Multiplier to apply to the previous retry interval.spring.rabbitmq.listener.direct.retry.stateless&#x3D;true # Whether retries are stateless or stateful.spring.rabbitmq.listener.simple.acknowledge-mode&#x3D; # Acknowledge mode of container.spring.rabbitmq.listener.simple.auto-startup&#x3D;true # Whether to start the container automatically on startup.spring.rabbitmq.listener.simple.concurrency&#x3D; # Minimum number of listener invoker threads.spring.rabbitmq.listener.simple.default-requeue-rejected&#x3D; # Whether rejected deliveries are re-queued by default.spring.rabbitmq.listener.simple.idle-event-interval&#x3D; # How often idle container events should be published.spring.rabbitmq.listener.simple.max-concurrency&#x3D; # Maximum number of listener invoker threads.spring.rabbitmq.listener.simple.missing-queues-fatal&#x3D;true # Whether to fail if the queues declared by the container are not available on the broker and&#x2F;or whether to stop the container if one or more queues are deleted at runtime.spring.rabbitmq.listener.simple.prefetch&#x3D; # Maximum number of unacknowledged messages that can be outstanding at each consumer.spring.rabbitmq.listener.simple.retry.enabled&#x3D;false # Whether publishing retries are enabled.spring.rabbitmq.listener.simple.retry.initial-interval&#x3D;1000ms # Duration between the first and second attempt to deliver a message.spring.rabbitmq.listener.simple.retry.max-attempts&#x3D;3 # Maximum number of attempts to deliver a message.spring.rabbitmq.listener.simple.retry.max-interval&#x3D;10000ms # Maximum duration between attempts.spring.rabbitmq.listener.simple.retry.multiplier&#x3D;1 # Multiplier to apply to the previous retry interval.spring.rabbitmq.listener.simple.retry.stateless&#x3D;true # Whether retries are stateless or stateful.spring.rabbitmq.listener.simple.transaction-size&#x3D; # Number of messages to be processed between acks when the acknowledge mode is AUTO. If larger than prefetch, prefetch will be increased to this value.spring.rabbitmq.listener.type&#x3D;simple # Listener container type.spring.rabbitmq.password&#x3D;guest # Login to authenticate against the broker.spring.rabbitmq.port&#x3D;5672 # RabbitMQ port.spring.rabbitmq.publisher-confirms&#x3D;false # Whether to enable publisher confirms.spring.rabbitmq.publisher-returns&#x3D;false # Whether to enable publisher returns.spring.rabbitmq.requested-heartbeat&#x3D; # Requested heartbeat timeout; zero for none. If a duration suffix is not specified, seconds will be used.spring.rabbitmq.ssl.algorithm&#x3D; # SSL algorithm to use. By default, configured by the Rabbit client library.spring.rabbitmq.ssl.enabled&#x3D;false # Whether to enable SSL support.spring.rabbitmq.ssl.key-store&#x3D; # Path to the key store that holds the SSL certificate.spring.rabbitmq.ssl.key-store-password&#x3D; # Password used to access the key store.spring.rabbitmq.ssl.key-store-type&#x3D;PKCS12 # Key store type.spring.rabbitmq.ssl.trust-store&#x3D; # Trust store that holds SSL certificates.spring.rabbitmq.ssl.trust-store-password&#x3D; # Password used to access the trust store.spring.rabbitmq.ssl.trust-store-type&#x3D;JKS # Trust store type.spring.rabbitmq.ssl.validate-server-certificate&#x3D;true # Whether to enable server side certificate validation.spring.rabbitmq.ssl.verify-hostname&#x3D;true # Whether to enable hostname verification.spring.rabbitmq.template.default-receive-queue&#x3D; # Name of the default queue to receive messages from when none is specified explicitly.spring.rabbitmq.template.exchange&#x3D; # Name of the default exchange to use for send operations.spring.rabbitmq.template.mandatory&#x3D; # Whether to enable mandatory messages.spring.rabbitmq.template.receive-timeout&#x3D; # Timeout for &#96;receive()&#96; operations.spring.rabbitmq.template.reply-timeout&#x3D; # Timeout for &#96;sendAndReceive()&#96; operations.spring.rabbitmq.template.retry.enabled&#x3D;false # Whether publishing retries are enabled.spring.rabbitmq.template.retry.initial-interval&#x3D;1000ms # Duration between the first and second attempt to deliver a message.spring.rabbitmq.template.retry.max-attempts&#x3D;3 # Maximum number of attempts to deliver a message.spring.rabbitmq.template.retry.max-interval&#x3D;10000ms # Maximum duration between attempts.spring.rabbitmq.template.retry.multiplier&#x3D;1 # Multiplier to apply to the previous retry interval.spring.rabbitmq.template.routing-key&#x3D; # Value of a default routing key to use for send operations.spring.rabbitmq.username&#x3D;guest # Login user to authenticate to the broker.spring.rabbitmq.virtual-host&#x3D; # Virtual host to use when connecting to the broker.  # ----------------------------------------# ACTUATOR PROPERTIES# ---------------------------------------- # MANAGEMENT HTTP SERVER (ManagementServerProperties)management.server.add-application-context-header&#x3D;false # Add the &quot;X-Application-Context&quot; HTTP header in each response.management.server.address&#x3D; # Network address to which the management endpoints should bind. Requires a custom management.server.port.management.server.port&#x3D; # Management endpoint HTTP port (uses the same port as the application by default). Configure a different port to use management-specific SSL.management.server.servlet.context-path&#x3D; # Management endpoint context-path (for instance, &#96;&#x2F;management&#96;). Requires a custom management.server.port.management.server.ssl.ciphers&#x3D; # Supported SSL ciphers.management.server.ssl.client-auth&#x3D; # Client authentication mode.management.server.ssl.enabled&#x3D;true # Whether to enable SSL support.management.server.ssl.enabled-protocols&#x3D; # Enabled SSL protocols.management.server.ssl.key-alias&#x3D; # Alias that identifies the key in the key store.management.server.ssl.key-password&#x3D; # Password used to access the key in the key store.management.server.ssl.key-store&#x3D; # Path to the key store that holds the SSL certificate (typically a jks file).management.server.ssl.key-store-password&#x3D; # Password used to access the key store.management.server.ssl.key-store-provider&#x3D; # Provider for the key store.management.server.ssl.key-store-type&#x3D; # Type of the key store.management.server.ssl.protocol&#x3D;TLS # SSL protocol to use.management.server.ssl.trust-store&#x3D; # Trust store that holds SSL certificates.management.server.ssl.trust-store-password&#x3D; # Password used to access the trust store.management.server.ssl.trust-store-provider&#x3D; # Provider for the trust store.management.server.ssl.trust-store-type&#x3D; # Type of the trust store. # CLOUDFOUNDRYmanagement.cloudfoundry.enabled&#x3D;true # Whether to enable extended Cloud Foundry actuator endpoints.management.cloudfoundry.skip-ssl-validation&#x3D;false # Whether to skip SSL verification for Cloud Foundry actuator endpoint security calls. # ENDPOINTS GENERAL CONFIGURATIONmanagement.endpoints.enabled-by-default&#x3D; # Whether to enable or disable all endpoints by default. # ENDPOINTS JMX CONFIGURATION (JmxEndpointProperties)management.endpoints.jmx.domain&#x3D;org.springframework.boot # Endpoints JMX domain name. Fallback to &#39;spring.jmx.default-domain&#39; if set.management.endpoints.jmx.exposure.include&#x3D;* # Endpoint IDs that should be included or &#39;*&#39; for all.management.endpoints.jmx.exposure.exclude&#x3D; # Endpoint IDs that should be excluded or &#39;*&#39; for all.management.endpoints.jmx.static-names&#x3D; # Additional static properties to append to all ObjectNames of MBeans representing Endpoints. # ENDPOINTS WEB CONFIGURATION (WebEndpointProperties)management.endpoints.web.exposure.include&#x3D;health,info # Endpoint IDs that should be included or &#39;*&#39; for all.management.endpoints.web.exposure.exclude&#x3D; # Endpoint IDs that should be excluded or &#39;*&#39; for all.management.endpoints.web.base-path&#x3D;&#x2F;actuator # Base path for Web endpoints. Relative to server.servlet.context-path or management.server.servlet.context-path if management.server.port is configured.management.endpoints.web.path-mapping&#x3D; # Mapping between endpoint IDs and the path that should expose them. # ENDPOINTS CORS CONFIGURATION (CorsEndpointProperties)management.endpoints.web.cors.allow-credentials&#x3D; # Whether credentials are supported. When not set, credentials are not supported.management.endpoints.web.cors.allowed-headers&#x3D; # Comma-separated list of headers to allow in a request. &#39;*&#39; allows all headers.management.endpoints.web.cors.allowed-methods&#x3D; # Comma-separated list of methods to allow. &#39;*&#39; allows all methods. When not set, defaults to GET.management.endpoints.web.cors.allowed-origins&#x3D; # Comma-separated list of origins to allow. &#39;*&#39; allows all origins. When not set, CORS support is disabled.management.endpoints.web.cors.exposed-headers&#x3D; # Comma-separated list of headers to include in a response.management.endpoints.web.cors.max-age&#x3D;1800s # How long the response from a pre-flight request can be cached by clients. If a duration suffix is not specified, seconds will be used. # AUDIT EVENTS ENDPOINT (AuditEventsEndpoint)management.endpoint.auditevents.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.auditevents.enabled&#x3D;true # Whether to enable the auditevents endpoint. # BEANS ENDPOINT (BeansEndpoint)management.endpoint.beans.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.beans.enabled&#x3D;true # Whether to enable the beans endpoint. # CACHES ENDPOINT (CachesEndpoint)management.endpoint.caches.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.caches.enabled&#x3D;true # Whether to enable the caches endpoint. # CONDITIONS REPORT ENDPOINT (ConditionsReportEndpoint)management.endpoint.conditions.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.conditions.enabled&#x3D;true # Whether to enable the conditions endpoint. # CONFIGURATION PROPERTIES REPORT ENDPOINT (ConfigurationPropertiesReportEndpoint, ConfigurationPropertiesReportEndpointProperties)management.endpoint.configprops.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.configprops.enabled&#x3D;true # Whether to enable the configprops endpoint.management.endpoint.configprops.keys-to-sanitize&#x3D;password,secret,key,token,.*credentials.*,vcap_services,sun.java.command # Keys that should be sanitized. Keys can be simple strings that the property ends with or regular expressions. # ENVIRONMENT ENDPOINT (EnvironmentEndpoint, EnvironmentEndpointProperties)management.endpoint.env.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.env.enabled&#x3D;true # Whether to enable the env endpoint.management.endpoint.env.keys-to-sanitize&#x3D;password,secret,key,token,.*credentials.*,vcap_services,sun.java.command # Keys that should be sanitized. Keys can be simple strings that the property ends with or regular expressions. # FLYWAY ENDPOINT (FlywayEndpoint)management.endpoint.flyway.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.flyway.enabled&#x3D;true # Whether to enable the flyway endpoint. # HEALTH ENDPOINT (HealthEndpoint, HealthEndpointProperties)management.endpoint.health.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.health.enabled&#x3D;true # Whether to enable the health endpoint.management.endpoint.health.roles&#x3D; # Roles used to determine whether or not a user is authorized to be shown details. When empty, all authenticated users are authorized.management.endpoint.health.show-details&#x3D;never # When to show full health details. # HEAP DUMP ENDPOINT (HeapDumpWebEndpoint)management.endpoint.heapdump.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.heapdump.enabled&#x3D;true # Whether to enable the heapdump endpoint. # HTTP TRACE ENDPOINT (HttpTraceEndpoint)management.endpoint.httptrace.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.httptrace.enabled&#x3D;true # Whether to enable the httptrace endpoint. # INFO ENDPOINT (InfoEndpoint)info&#x3D; # Arbitrary properties to add to the info endpoint.management.endpoint.info.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.info.enabled&#x3D;true # Whether to enable the info endpoint. # INTEGRATION GRAPH ENDPOINT (IntegrationGraphEndpoint)management.endpoint.integrationgraph.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.integrationgraph.enabled&#x3D;true # Whether to enable the integrationgraph endpoint. # JOLOKIA ENDPOINT (JolokiaProperties)management.endpoint.jolokia.config.*&#x3D; # Jolokia settings. Refer to the documentation of Jolokia for more details.management.endpoint.jolokia.enabled&#x3D;true # Whether to enable the jolokia endpoint. # LIQUIBASE ENDPOINT (LiquibaseEndpoint)management.endpoint.liquibase.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.liquibase.enabled&#x3D;true # Whether to enable the liquibase endpoint. # LOG FILE ENDPOINT (LogFileWebEndpoint, LogFileWebEndpointProperties)management.endpoint.logfile.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.logfile.enabled&#x3D;true # Whether to enable the logfile endpoint.management.endpoint.logfile.external-file&#x3D; # External Logfile to be accessed. Can be used if the logfile is written by output redirect and not by the logging system itself. # LOGGERS ENDPOINT (LoggersEndpoint)management.endpoint.loggers.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.loggers.enabled&#x3D;true # Whether to enable the loggers endpoint. # REQUEST MAPPING ENDPOINT  (MappingsEndpoint)management.endpoint.mappings.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.mappings.enabled&#x3D;true # Whether to enable the mappings endpoint. # METRICS ENDPOINT (MetricsEndpoint)management.endpoint.metrics.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.metrics.enabled&#x3D;true # Whether to enable the metrics endpoint. # PROMETHEUS ENDPOINT (PrometheusScrapeEndpoint)management.endpoint.prometheus.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.prometheus.enabled&#x3D;true # Whether to enable the prometheus endpoint. # SCHEDULED TASKS ENDPOINT (ScheduledTasksEndpoint)management.endpoint.scheduledtasks.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.scheduledtasks.enabled&#x3D;true # Whether to enable the scheduledtasks endpoint. # SESSIONS ENDPOINT (SessionsEndpoint)management.endpoint.sessions.enabled&#x3D;true # Whether to enable the sessions endpoint. # SHUTDOWN ENDPOINT (ShutdownEndpoint)management.endpoint.shutdown.enabled&#x3D;false # Whether to enable the shutdown endpoint. # THREAD DUMP ENDPOINT (ThreadDumpEndpoint)management.endpoint.threaddump.cache.time-to-live&#x3D;0ms # Maximum time that a response can be cached.management.endpoint.threaddump.enabled&#x3D;true # Whether to enable the threaddump endpoint. # HEALTH INDICATORSmanagement.health.db.enabled&#x3D;true # Whether to enable database health check.management.health.cassandra.enabled&#x3D;true # Whether to enable Cassandra health check.management.health.couchbase.enabled&#x3D;true # Whether to enable Couchbase health check.management.health.defaults.enabled&#x3D;true # Whether to enable default health indicators.management.health.diskspace.enabled&#x3D;true # Whether to enable disk space health check.management.health.diskspace.path&#x3D; # Path used to compute the available disk space.management.health.diskspace.threshold&#x3D;10MB # Minimum disk space that should be available.management.health.elasticsearch.enabled&#x3D;true # Whether to enable Elasticsearch health check.management.health.elasticsearch.indices&#x3D; # Comma-separated index names.management.health.elasticsearch.response-timeout&#x3D;100ms # Time to wait for a response from the cluster.management.health.influxdb.enabled&#x3D;true # Whether to enable InfluxDB health check.management.health.jms.enabled&#x3D;true # Whether to enable JMS health check.management.health.ldap.enabled&#x3D;true # Whether to enable LDAP health check.management.health.mail.enabled&#x3D;true # Whether to enable Mail health check.management.health.mongo.enabled&#x3D;true # Whether to enable MongoDB health check.management.health.neo4j.enabled&#x3D;true # Whether to enable Neo4j health check.management.health.rabbit.enabled&#x3D;true # Whether to enable RabbitMQ health check.management.health.redis.enabled&#x3D;true # Whether to enable Redis health check.management.health.solr.enabled&#x3D;true # Whether to enable Solr health check.management.health.status.http-mapping&#x3D; # Mapping of health statuses to HTTP status codes. By default, registered health statuses map to sensible defaults (for example, UP maps to 200).management.health.status.order&#x3D;DOWN,OUT_OF_SERVICE,UP,UNKNOWN # Comma-separated list of health statuses in order of severity. # HTTP TRACING (HttpTraceProperties)management.trace.http.enabled&#x3D;true # Whether to enable HTTP request-response tracing.management.trace.http.include&#x3D;request-headers,response-headers,cookies,errors # Items to be included in the trace. # INFO CONTRIBUTORS (InfoContributorProperties)management.info.build.enabled&#x3D;true # Whether to enable build info.management.info.defaults.enabled&#x3D;true # Whether to enable default info contributors.management.info.env.enabled&#x3D;true # Whether to enable environment info.management.info.git.enabled&#x3D;true # Whether to enable git info.management.info.git.mode&#x3D;simple # Mode to use to expose git information. # METRICSmanagement.metrics.distribution.maximum-expected-value.*&#x3D; # Maximum value that meter IDs starting-with the specified name are expected to observe.management.metrics.distribution.minimum-expected-value.*&#x3D; # Minimum value that meter IDs starting-with the specified name are expected to observe.management.metrics.distribution.percentiles.*&#x3D; # Specific computed non-aggregable percentiles to ship to the backend for meter IDs starting-with the specified name.management.metrics.distribution.percentiles-histogram.*&#x3D; # Whether meter IDs starting with the specified name should publish percentile histograms.management.metrics.distribution.sla.*&#x3D; # Specific SLA boundaries for meter IDs starting-with the specified name. The longest match wins.management.metrics.enable.*&#x3D; # Whether meter IDs starting-with the specified name should be enabled. The longest match wins, the key &#96;all&#96; can also be used to configure all meters.management.metrics.export.appoptics.api-token&#x3D; # AppOptics API token.management.metrics.export.appoptics.batch-size&#x3D;500 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.management.metrics.export.appoptics.connect-timeout&#x3D;5s # Connection timeout for requests to this backend.management.metrics.export.appoptics.enabled&#x3D;true # Whether exporting of metrics to this backend is enabled.management.metrics.export.appoptics.host-tag&#x3D;instance # Tag that will be mapped to &quot;@host&quot; when shipping metrics to AppOptics.management.metrics.export.appoptics.num-threads&#x3D;2 # Number of threads to use with the metrics publishing scheduler.management.metrics.export.appoptics.read-timeout&#x3D;10s # Read timeout for requests to this backend.management.metrics.export.appoptics.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.appoptics.uri&#x3D;https:&#x2F;&#x2F;api.appoptics.com&#x2F;v1&#x2F;measurements # URI to ship metrics to.management.metrics.export.atlas.batch-size&#x3D;10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.management.metrics.export.atlas.config-refresh-frequency&#x3D;10s # Frequency for refreshing config settings from the LWC service.management.metrics.export.atlas.config-time-to-live&#x3D;150s # Time to live for subscriptions from the LWC service.management.metrics.export.atlas.config-uri&#x3D;http:&#x2F;&#x2F;localhost:7101&#x2F;lwc&#x2F;api&#x2F;v1&#x2F;expressions&#x2F;local-dev # URI for the Atlas LWC endpoint to retrieve current subscriptions.management.metrics.export.atlas.connect-timeout&#x3D;1s # Connection timeout for requests to this backend.management.metrics.export.atlas.enabled&#x3D;true # Whether exporting of metrics to this backend is enabled.management.metrics.export.atlas.eval-uri&#x3D;http:&#x2F;&#x2F;localhost:7101&#x2F;lwc&#x2F;api&#x2F;v1&#x2F;evaluate # URI for the Atlas LWC endpoint to evaluate the data for a subscription.management.metrics.export.atlas.lwc-enabled&#x3D;false # Whether to enable streaming to Atlas LWC.management.metrics.export.atlas.meter-time-to-live&#x3D;15m # Time to live for meters that do not have any activity. After this period the meter will be considered expired and will not get reported.management.metrics.export.atlas.num-threads&#x3D;2 # Number of threads to use with the metrics publishing scheduler.management.metrics.export.atlas.read-timeout&#x3D;10s # Read timeout for requests to this backend.management.metrics.export.atlas.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.atlas.uri&#x3D;http:&#x2F;&#x2F;localhost:7101&#x2F;api&#x2F;v1&#x2F;publish # URI of the Atlas server.management.metrics.export.datadog.api-key&#x3D; # Datadog API key.management.metrics.export.datadog.application-key&#x3D; # Datadog application key. Not strictly required, but improves the Datadog experience by sending meter descriptions, types, and base units to Datadog.management.metrics.export.datadog.batch-size&#x3D;10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.management.metrics.export.datadog.connect-timeout&#x3D;1s # Connection timeout for requests to this backend.management.metrics.export.datadog.descriptions&#x3D;true # Whether to publish descriptions metadata to Datadog. Turn this off to minimize the amount of metadata sent.management.metrics.export.datadog.enabled&#x3D;true # Whether exporting of metrics to this backend is enabled.management.metrics.export.datadog.host-tag&#x3D;instance # Tag that will be mapped to &quot;host&quot; when shipping metrics to Datadog.management.metrics.export.datadog.num-threads&#x3D;2 # Number of threads to use with the metrics publishing scheduler.management.metrics.export.datadog.read-timeout&#x3D;10s # Read timeout for requests to this backend.management.metrics.export.datadog.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.datadog.uri&#x3D;https:&#x2F;&#x2F;app.datadoghq.com # URI to ship metrics to. If you need to publish metrics to an internal proxy en-route to Datadog, you can define the location of the proxy with this.management.metrics.export.dynatrace.api-token&#x3D; # Dynatrace authentication token.management.metrics.export.dynatrace.batch-size&#x3D;10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.management.metrics.export.dynatrace.connect-timeout&#x3D;1s # Connection timeout for requests to this backend.management.metrics.export.dynatrace.device-id&#x3D; # ID of the custom device that is exporting metrics to Dynatrace.management.metrics.export.dynatrace.enabled&#x3D;true # Whether exporting of metrics to this backend is enabled.management.metrics.export.dynatrace.num-threads&#x3D;2 # Number of threads to use with the metrics publishing scheduler.management.metrics.export.dynatrace.read-timeout&#x3D;10s # Read timeout for requests to this backend.management.metrics.export.dynatrace.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.dynatrace.technology-type&#x3D;java # Technology type for exported metrics. Used to group metrics under a logical technology name in the Dynatrace UI.management.metrics.export.dynatrace.uri&#x3D; # URI to ship metrics to. Should be used for SaaS, self managed instances or to en-route through an internal proxy.management.metrics.export.elastic.auto-create-index&#x3D;true # Whether to create the index automatically if it does not exist.management.metrics.export.elastic.batch-size&#x3D;10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.management.metrics.export.elastic.connect-timeout&#x3D;1s # Connection timeout for requests to this backend.management.metrics.export.elastic.enabled&#x3D;true # Whether exporting of metrics to this backend is enabled.management.metrics.export.elastic.host&#x3D;http:&#x2F;&#x2F;localhost:9200 # Host to export metrics to.management.metrics.export.elastic.index&#x3D;metrics # Index to export metrics to.management.metrics.export.elastic.index-date-format&#x3D;yyyy-MM # Index date format used for rolling indices. Appended to the index name, preceded by a &#39;-&#39;.management.metrics.export.elastic.num-threads&#x3D;2 # Number of threads to use with the metrics publishing scheduler.management.metrics.export.elastic.password&#x3D; # Login password of the Elastic server.management.metrics.export.elastic.read-timeout&#x3D;10s # Read timeout for requests to this backend.management.metrics.export.elastic.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.elastic.timestamp-field-name&#x3D;@timestamp # Name of the timestamp field.management.metrics.export.elastic.user-name&#x3D; # Login user of the Elastic server.management.metrics.export.ganglia.addressing-mode&#x3D;multicast # UDP addressing mode, either unicast or multicast.management.metrics.export.ganglia.duration-units&#x3D;milliseconds # Base time unit used to report durations.management.metrics.export.ganglia.enabled&#x3D;true # Whether exporting of metrics to Ganglia is enabled.management.metrics.export.ganglia.host&#x3D;localhost # Host of the Ganglia server to receive exported metrics.management.metrics.export.ganglia.port&#x3D;8649 # Port of the Ganglia server to receive exported metrics.management.metrics.export.ganglia.protocol-version&#x3D;3.1 # Ganglia protocol version. Must be either 3.1 or 3.0.management.metrics.export.ganglia.rate-units&#x3D;seconds # Base time unit used to report rates.management.metrics.export.ganglia.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.ganglia.time-to-live&#x3D;1 # Time to live for metrics on Ganglia. Set the multi-cast Time-To-Live to be one greater than the number of hops (routers) between the hosts.management.metrics.export.graphite.duration-units&#x3D;milliseconds # Base time unit used to report durations.management.metrics.export.graphite.enabled&#x3D;true # Whether exporting of metrics to Graphite is enabled.management.metrics.export.graphite.host&#x3D;localhost # Host of the Graphite server to receive exported metrics.management.metrics.export.graphite.port&#x3D;2004 # Port of the Graphite server to receive exported metrics.management.metrics.export.graphite.protocol&#x3D;pickled # Protocol to use while shipping data to Graphite.management.metrics.export.graphite.rate-units&#x3D;seconds # Base time unit used to report rates.management.metrics.export.graphite.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.graphite.tags-as-prefix&#x3D; # For the default naming convention, turn the specified tag keys into part of the metric prefix.management.metrics.export.humio.api-token&#x3D; # Humio API token.management.metrics.export.humio.batch-size&#x3D;10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.management.metrics.export.humio.connect-timeout&#x3D;5s # Connection timeout for requests to this backend.management.metrics.export.humio.enabled&#x3D;true # Whether exporting of metrics to this backend is enabled.management.metrics.export.humio.num-threads&#x3D;2 # Number of threads to use with the metrics publishing scheduler.management.metrics.export.humio.read-timeout&#x3D;10s # Read timeout for requests to this backend.management.metrics.export.humio.repository&#x3D;sandbox # Name of the repository to publish metrics to.management.metrics.export.humio.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.humio.tags.*&#x3D; # Humio tags describing the data source in which metrics will be stored. Humio tags are a distinct concept from Micrometer&#39;s tags. Micrometer&#39;s tags are used to divide metrics along dimensional boundaries.management.metrics.export.humio.uri&#x3D;https:&#x2F;&#x2F;cloud.humio.com # URI to ship metrics to. If you need to publish metrics to an internal proxy en-route to Humio, you can define the location of the proxy with this.management.metrics.export.influx.auto-create-db&#x3D;true # Whether to create the Influx database if it does not exist before attempting to publish metrics to it.management.metrics.export.influx.batch-size&#x3D;10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.management.metrics.export.influx.compressed&#x3D;true # Whether to enable GZIP compression of metrics batches published to Influx.management.metrics.export.influx.connect-timeout&#x3D;1s # Connection timeout for requests to this backend.management.metrics.export.influx.consistency&#x3D;one # Write consistency for each point.management.metrics.export.influx.db&#x3D;mydb # Tag that will be mapped to &quot;host&quot; when shipping metrics to Influx.management.metrics.export.influx.enabled&#x3D;true # Whether exporting of metrics to this backend is enabled.management.metrics.export.influx.num-threads&#x3D;2 # Number of threads to use with the metrics publishing scheduler.management.metrics.export.influx.password&#x3D; # Login password of the Influx server.management.metrics.export.influx.read-timeout&#x3D;10s # Read timeout for requests to this backend.management.metrics.export.influx.retention-duration&#x3D; # Time period for which Influx should retain data in the current database.management.metrics.export.influx.retention-shard-duration&#x3D; # Time range covered by a shard group.management.metrics.export.influx.retention-policy&#x3D; # Retention policy to use (Influx writes to the DEFAULT retention policy if one is not specified).management.metrics.export.influx.retention-replication-factor&#x3D; # How many copies of the data are stored in the cluster.management.metrics.export.influx.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.influx.uri&#x3D;http:&#x2F;&#x2F;localhost:8086 # URI of the Influx server.management.metrics.export.influx.user-name&#x3D; # Login user of the Influx server.management.metrics.export.jmx.domain&#x3D;metrics # Metrics JMX domain name.management.metrics.export.jmx.enabled&#x3D;true # Whether exporting of metrics to JMX is enabled.management.metrics.export.jmx.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.kairos.batch-size&#x3D;10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.management.metrics.export.kairos.connect-timeout&#x3D;1s # Connection timeout for requests to this backend.management.metrics.export.kairos.enabled&#x3D;true # Whether exporting of metrics to this backend is enabled.management.metrics.export.kairos.num-threads&#x3D;2 # Number of threads to use with the metrics publishing scheduler.management.metrics.export.kairos.password&#x3D; # Login password of the KairosDB server.management.metrics.export.kairos.read-timeout&#x3D;10s # Read timeout for requests to this backend.management.metrics.export.kairos.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.kairos.uri&#x3D; localhost:8080&#x2F;api&#x2F;v1&#x2F;datapoints # URI of the KairosDB server.management.metrics.export.kairos.user-name&#x3D; # Login user of the KairosDB server.management.metrics.export.newrelic.account-id&#x3D; # New Relic account ID.management.metrics.export.newrelic.api-key&#x3D; # New Relic API key.management.metrics.export.newrelic.batch-size&#x3D;10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.management.metrics.export.newrelic.connect-timeout&#x3D;1s # Connection timeout for requests to this backend.management.metrics.export.newrelic.enabled&#x3D;true # Whether exporting of metrics to this backend is enabled.management.metrics.export.newrelic.num-threads&#x3D;2 # Number of threads to use with the metrics publishing scheduler.management.metrics.export.newrelic.read-timeout&#x3D;10s # Read timeout for requests to this backend.management.metrics.export.newrelic.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.newrelic.uri&#x3D;https:&#x2F;&#x2F;insights-collector.newrelic.com # URI to ship metrics to.management.metrics.export.prometheus.descriptions&#x3D;true # Whether to enable publishing descriptions as part of the scrape payload to Prometheus. Turn this off to minimize the amount of data sent on each scrape.management.metrics.export.prometheus.enabled&#x3D;true # Whether exporting of metrics to Prometheus is enabled.management.metrics.export.prometheus.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.prometheus.pushgateway.base-url&#x3D;localhost:9091 # Base URL for the Pushgateway.management.metrics.export.prometheus.pushgateway.enabled&#x3D;false # Enable publishing via a Prometheus Pushgateway.management.metrics.export.prometheus.pushgateway.grouping-key&#x3D; # Grouping key for the pushed metrics.management.metrics.export.prometheus.pushgateway.job&#x3D; # Job identifier for this application instance.management.metrics.export.prometheus.pushgateway.push-rate&#x3D;1m # Frequency with which to push metrics.management.metrics.export.prometheus.pushgateway.shutdown-operation&#x3D; # Operation that should be performed on shutdown.management.metrics.export.signalfx.access-token&#x3D; # SignalFX access token.management.metrics.export.signalfx.batch-size&#x3D;10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.management.metrics.export.signalfx.connect-timeout&#x3D;1s # Connection timeout for requests to this backend.management.metrics.export.signalfx.enabled&#x3D;true # Whether exporting of metrics to this backend is enabled.management.metrics.export.signalfx.num-threads&#x3D;2 # Number of threads to use with the metrics publishing scheduler.management.metrics.export.signalfx.read-timeout&#x3D;10s # Read timeout for requests to this backend.management.metrics.export.signalfx.source&#x3D; # Uniquely identifies the app instance that is publishing metrics to SignalFx. Defaults to the local host name.management.metrics.export.signalfx.step&#x3D;10s # Step size (i.e. reporting frequency) to use.management.metrics.export.signalfx.uri&#x3D;https:&#x2F;&#x2F;ingest.signalfx.com # URI to ship metrics to.management.metrics.export.simple.enabled&#x3D;true # Whether, in the absence of any other exporter, exporting of metrics to an in-memory backend is enabled.management.metrics.export.simple.mode&#x3D;cumulative # Counting mode.management.metrics.export.simple.step&#x3D;1m # Step size (i.e. reporting frequency) to use.management.metrics.export.statsd.enabled&#x3D;true # Whether exporting of metrics to StatsD is enabled.management.metrics.export.statsd.flavor&#x3D;datadog # StatsD line protocol to use.management.metrics.export.statsd.host&#x3D;localhost # Host of the StatsD server to receive exported metrics.management.metrics.export.statsd.max-packet-length&#x3D;1400 # Total length of a single payload should be kept within your network&#39;s MTU.management.metrics.export.statsd.polling-frequency&#x3D;10s # How often gauges will be polled. When a gauge is polled, its value is recalculated and if the value has changed (or publishUnchangedMeters is true), it is sent to the StatsD server.management.metrics.export.statsd.port&#x3D;8125 # Port of the StatsD server to receive exported metrics.management.metrics.export.statsd.publish-unchanged-meters&#x3D;true # Whether to send unchanged meters to the StatsD server.management.metrics.export.wavefront.api-token&#x3D; # API token used when publishing metrics directly to the Wavefront API host.management.metrics.export.wavefront.batch-size&#x3D;10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.management.metrics.export.wavefront.connect-timeout&#x3D;1s # Connection timeout for requests to this backend.management.metrics.export.wavefront.enabled&#x3D;true # Whether exporting of metrics to this backend is enabled.management.metrics.export.wavefront.global-prefix&#x3D; # Global prefix to separate metrics originating from this app&#39;s white box instrumentation from those originating from other Wavefront integrations when viewed in the Wavefront UI.management.metrics.export.wavefront.num-threads&#x3D;2 # Number of threads to use with the metrics publishing scheduler.management.metrics.export.wavefront.read-timeout&#x3D;10s # Read timeout for requests to this backend.management.metrics.export.wavefront.source&#x3D; # Unique identifier for the app instance that is the source of metrics being published to Wavefront. Defaults to the local host name.management.metrics.export.wavefront.step&#x3D;10s # Step size (i.e. reporting frequency) to use.management.metrics.export.wavefront.uri&#x3D;https:&#x2F;&#x2F;longboard.wavefront.com # URI to ship metrics to.management.metrics.use-global-registry&#x3D;true # Whether auto-configured MeterRegistry implementations should be bound to the global static registry on Metrics.management.metrics.tags.*&#x3D; # Common tags that are applied to every meter.management.metrics.web.client.max-uri-tags&#x3D;100 # Maximum number of unique URI tag values allowed. After the max number of tag values is reached, metrics with additional tag values are denied by filter.management.metrics.web.client.requests-metric-name&#x3D;http.client.requests # Name of the metric for sent requests.management.metrics.web.server.auto-time-requests&#x3D;true # Whether requests handled by Spring MVC, WebFlux or Jersey should be automatically timed.management.metrics.web.server.max-uri-tags&#x3D;100 # Maximum number of unique URI tag values allowed. After the max number of tag values is reached, metrics with additional tag values are denied by filter.management.metrics.web.server.requests-metric-name&#x3D;http.server.requests # Name of the metric for received requests.  # ----------------------------------------# DEVTOOLS PROPERTIES# ---------------------------------------- # DEVTOOLS (DevToolsProperties)spring.devtools.add-properties&#x3D;true # Whether to enable development property defaults.spring.devtools.livereload.enabled&#x3D;true # Whether to enable a livereload.com-compatible server.spring.devtools.livereload.port&#x3D;35729 # Server port.spring.devtools.restart.additional-exclude&#x3D; # Additional patterns that should be excluded from triggering a full restart.spring.devtools.restart.additional-paths&#x3D; # Additional paths to watch for changes.spring.devtools.restart.enabled&#x3D;true # Whether to enable automatic restart.spring.devtools.restart.exclude&#x3D;META-INF&#x2F;maven&#x2F;**,META-INF&#x2F;resources&#x2F;**,resources&#x2F;**,static&#x2F;**,public&#x2F;**,templates&#x2F;**,**&#x2F;*Test.class,**&#x2F;*Tests.class,git.properties,META-INF&#x2F;build-info.properties # Patterns that should be excluded from triggering a full restart.spring.devtools.restart.log-condition-evaluation-delta&#x3D;true # Whether to log the condition evaluation delta upon restart.spring.devtools.restart.poll-interval&#x3D;1s # Amount of time to wait between polling for classpath changes.spring.devtools.restart.quiet-period&#x3D;400ms # Amount of quiet time required without any classpath changes before a restart is triggered.spring.devtools.restart.trigger-file&#x3D; # Name of a specific file that, when changed, triggers the restart check. If not specified, any classpath file change triggers the restart. # REMOTE DEVTOOLS (RemoteDevToolsProperties)spring.devtools.remote.context-path&#x3D;&#x2F;.~~spring-boot!~ # Context path used to handle the remote connection.spring.devtools.remote.proxy.host&#x3D; # The host of the proxy to use to connect to the remote application.spring.devtools.remote.proxy.port&#x3D; # The port of the proxy to use to connect to the remote application.spring.devtools.remote.restart.enabled&#x3D;true # Whether to enable remote restart.spring.devtools.remote.secret&#x3D; # A shared secret required to establish a connection (required to enable remote support).spring.devtools.remote.secret-header-name&#x3D;X-AUTH-TOKEN # HTTP header used to transfer the shared secret.  # ----------------------------------------# TESTING PROPERTIES# ---------------------------------------- spring.test.database.replace&#x3D;any # Type of existing DataSource to replace.spring.test.mockmvc.print&#x3D;default # MVC Print option.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Application.properties全配置（上）</title>
      <link href="/articles/2019/10/21/1571628649893.html"/>
      <url>/articles/2019/10/21/1571628649893.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;# COMMON SPRING BOOT PROPERTIES## This sample file is provided as a guideline. Do NOT copy it in its# entirety to your own application.               ^^^# &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;  # ----------------------------------------# CORE PROPERTIES# ----------------------------------------debug&#x3D;false # Enable debug logs.trace&#x3D;false # Enable trace logs. # LOGGINGlogging.config&#x3D; # Location of the logging configuration file. For instance, &#96;classpath:logback.xml&#96; for Logback.logging.exception-conversion-word&#x3D;%wEx # Conversion word used when logging exceptions.logging.file&#x3D; # Log file name (for instance, &#96;myapp.log&#96;). Names can be an exact location or relative to the current directory.logging.file.max-history&#x3D;0 # Maximum of archive log files to keep. Only supported with the default logback setup.logging.file.max-size&#x3D;10MB # Maximum log file size. Only supported with the default logback setup.logging.group.*&#x3D; # Log groups to quickly change multiple loggers at the same time. For instance, &#96;logging.level.db&#x3D;org.hibernate,org.springframework.jdbc&#96;.logging.level.*&#x3D; # Log levels severity mapping. For instance, &#96;logging.level.org.springframework&#x3D;DEBUG&#96;.logging.path&#x3D; # Location of the log file. For instance, &#96;&#x2F;var&#x2F;log&#96;.logging.pattern.console&#x3D; # Appender pattern for output to the console. Supported only with the default Logback setup.logging.pattern.dateformat&#x3D;yyyy-MM-dd HH:mm:ss.SSS # Appender pattern for log date format. Supported only with the default Logback setup.logging.pattern.file&#x3D; # Appender pattern for output to a file. Supported only with the default Logback setup.logging.pattern.level&#x3D;%5p # Appender pattern for log level. Supported only with the default Logback setup.logging.register-shutdown-hook&#x3D;false # Register a shutdown hook for the logging system when it is initialized. # AOPspring.aop.auto&#x3D;true # Add @EnableAspectJAutoProxy.spring.aop.proxy-target-class&#x3D;true # Whether subclass-based (CGLIB) proxies are to be created (true), as opposed to standard Java interface-based proxies (false). # IDENTITY (ContextIdApplicationContextInitializer)spring.application.name&#x3D; # Application name. # ADMIN (SpringApplicationAdminJmxAutoConfiguration)spring.application.admin.enabled&#x3D;false # Whether to enable admin features for the application.spring.application.admin.jmx-name&#x3D;org.springframework.boot:type&#x3D;Admin,name&#x3D;SpringApplication # JMX name of the application admin MBean. # AUTO-CONFIGURATIONspring.autoconfigure.exclude&#x3D; # Auto-configuration classes to exclude. # BANNERspring.banner.charset&#x3D;UTF-8 # Banner file encoding.spring.banner.location&#x3D;classpath:banner.txt # Banner text resource location.spring.banner.image.location&#x3D;classpath:banner.gif # Banner image file location (jpg or png can also be used).spring.banner.image.width&#x3D;76 # Width of the banner image in chars.spring.banner.image.height&#x3D; # Height of the banner image in chars (default based on image height).spring.banner.image.margin&#x3D;2 # Left hand image margin in chars.spring.banner.image.invert&#x3D;false # Whether images should be inverted for dark terminal themes. # SPRING COREspring.beaninfo.ignore&#x3D;true # Whether to skip search of BeanInfo classes. # SPRING CACHE (CacheProperties)spring.cache.cache-names&#x3D; # Comma-separated list of cache names to create if supported by the underlying cache manager.spring.cache.caffeine.spec&#x3D; # The spec to use to create caches. See CaffeineSpec for more details on the spec format.spring.cache.couchbase.expiration&#x3D; # Entry expiration. By default the entries never expire. Note that this value is ultimately converted to seconds.spring.cache.ehcache.config&#x3D; # The location of the configuration file to use to initialize EhCache.spring.cache.infinispan.config&#x3D; # The location of the configuration file to use to initialize Infinispan.spring.cache.jcache.config&#x3D; # The location of the configuration file to use to initialize the cache manager.spring.cache.jcache.provider&#x3D; # Fully qualified name of the CachingProvider implementation to use to retrieve the JSR-107 compliant cache manager. Needed only if more than one JSR-107 implementation is available on the classpath.spring.cache.redis.cache-null-values&#x3D;true # Allow caching null values.spring.cache.redis.key-prefix&#x3D; # Key prefix.spring.cache.redis.time-to-live&#x3D; # Entry expiration. By default the entries never expire.spring.cache.redis.use-key-prefix&#x3D;true # Whether to use the key prefix when writing to Redis.spring.cache.type&#x3D; # Cache type. By default, auto-detected according to the environment. # SPRING CONFIG - using environment property only (ConfigFileApplicationListener)spring.config.additional-location&#x3D; # Config file locations used in addition to the defaults.spring.config.location&#x3D; # Config file locations that replace the defaults.spring.config.name&#x3D;application # Config file name. # HAZELCAST (HazelcastProperties)spring.hazelcast.config&#x3D; # The location of the configuration file to use to initialize Hazelcast. # PROJECT INFORMATION (ProjectInfoProperties)spring.info.build.encoding&#x3D;UTF-8 # File encoding.spring.info.build.location&#x3D;classpath:META-INF&#x2F;build-info.properties # Location of the generated build-info.properties file.spring.info.git.encoding&#x3D;UTF-8 # File encoding.spring.info.git.location&#x3D;classpath:git.properties # Location of the generated git.properties file. # JMXspring.jmx.default-domain&#x3D; # JMX domain name.spring.jmx.enabled&#x3D;true # Expose management beans to the JMX domain.spring.jmx.server&#x3D;mbeanServer # MBeanServer bean name.spring.jmx.unique-names&#x3D;false # Whether unique runtime object names should be ensured. # Email (MailProperties)spring.mail.default-encoding&#x3D;UTF-8 # Default MimeMessage encoding.spring.mail.host&#x3D; # SMTP server host. For instance, &#96;smtp.example.com&#96;.spring.mail.jndi-name&#x3D; # Session JNDI name. When set, takes precedence over other Session settings.spring.mail.password&#x3D; # Login password of the SMTP server.spring.mail.port&#x3D; # SMTP server port.spring.mail.properties.*&#x3D; # Additional JavaMail Session properties.spring.mail.protocol&#x3D;smtp # Protocol used by the SMTP server.spring.mail.test-connection&#x3D;false # Whether to test that the mail server is available on startup.spring.mail.username&#x3D; # Login user of the SMTP server. # APPLICATION SETTINGS (SpringApplication)spring.main.allow-bean-definition-overriding&#x3D;false # Whether bean definition overriding, by registering a definition with the same name as an existing definition, is allowed.spring.main.banner-mode&#x3D;console # Mode used to display the banner when the application runs.spring.main.sources&#x3D; # Sources (class names, package names, or XML resource locations) to include in the ApplicationContext.spring.main.web-application-type&#x3D; # Flag to explicitly request a specific type of web application. If not set, auto-detected based on the classpath. # FILE ENCODING (FileEncodingApplicationListener)spring.mandatory-file-encoding&#x3D; # Expected character encoding the application must use. # INTERNATIONALIZATION (MessageSourceProperties)spring.messages.always-use-message-format&#x3D;false # Whether to always apply the MessageFormat rules, parsing even messages without arguments.spring.messages.basename&#x3D;messages # Comma-separated list of basenames (essentially a fully-qualified classpath location), each following the ResourceBundle convention with relaxed support for slash based locations.spring.messages.cache-duration&#x3D; # Loaded resource bundle files cache duration. When not set, bundles are cached forever. If a duration suffix is not specified, seconds will be used.spring.messages.encoding&#x3D;UTF-8 # Message bundles encoding.spring.messages.fallback-to-system-locale&#x3D;true # Whether to fall back to the system Locale if no files for a specific Locale have been found.spring.messages.use-code-as-default-message&#x3D;false # Whether to use the message code as the default message instead of throwing a &quot;NoSuchMessageException&quot;. Recommended during development only. # OUTPUTspring.output.ansi.enabled&#x3D;detect # Configures the ANSI output. # PID FILE (ApplicationPidFileWriter)spring.pid.fail-on-write-error&#x3D; # Fails if ApplicationPidFileWriter is used but it cannot write the PID file.spring.pid.file&#x3D; # Location of the PID file to write (if ApplicationPidFileWriter is used). # PROFILESspring.profiles.active&#x3D; # Comma-separated list of active profiles. Can be overridden by a command line switch.spring.profiles.include&#x3D; # Unconditionally activate the specified comma-separated list of profiles (or list of profiles if using YAML). # QUARTZ SCHEDULER (QuartzProperties)spring.quartz.auto-startup&#x3D;true # Whether to automatically start the scheduler after initialization.spring.quartz.jdbc.comment-prefix&#x3D;-- # Prefix for single-line comments in SQL initialization scripts.spring.quartz.jdbc.initialize-schema&#x3D;embedded # Database schema initialization mode.spring.quartz.jdbc.schema&#x3D;classpath:org&#x2F;quartz&#x2F;impl&#x2F;jdbcjobstore&#x2F;tables_@@platform@@.sql # Path to the SQL file to use to initialize the database schema.spring.quartz.job-store-type&#x3D;memory # Quartz job store type.spring.quartz.overwrite-existing-jobs&#x3D;false # Whether configured jobs should overwrite existing job definitions.spring.quartz.properties.*&#x3D; # Additional Quartz Scheduler properties.spring.quartz.scheduler-name&#x3D;quartzScheduler # Name of the scheduler.spring.quartz.startup-delay&#x3D;0s # Delay after which the scheduler is started once initialization completes.spring.quartz.wait-for-jobs-to-complete-on-shutdown&#x3D;false # Whether to wait for running jobs to complete on shutdown. # REACTOR (ReactorCoreProperties)spring.reactor.stacktrace-mode.enabled&#x3D;false # Whether Reactor should collect stacktrace information at runtime. # SENDGRID (SendGridAutoConfiguration)spring.sendgrid.api-key&#x3D; # SendGrid API key.spring.sendgrid.proxy.host&#x3D; # SendGrid proxy host.spring.sendgrid.proxy.port&#x3D; # SendGrid proxy port. # TASK EXECUTION  (TaskExecutionProperties)spring.task.execution.pool.allow-core-thread-timeout&#x3D;true # Whether core threads are allowed to time out. This enables dynamic growing and shrinking of the pool.spring.task.execution.pool.core-size&#x3D;8 # Core number of threads.spring.task.execution.pool.keep-alive&#x3D;60s # Time limit for which threads may remain idle before being terminated.spring.task.execution.pool.max-size&#x3D; # Maximum allowed number of threads. If tasks are filling up the queue, the pool can expand up to that size to accommodate the load. Ignored if the queue is unbounded.spring.task.execution.pool.queue-capacity&#x3D; # Queue capacity. An unbounded capacity does not increase the pool and therefore ignores the &quot;max-size&quot; property.spring.task.execution.thread-name-prefix&#x3D;task- # Prefix to use for the names of newly created threads. # TASK SCHEDULING  (TaskSchedulingProperties)spring.task.scheduling.pool.size&#x3D;1 # Maximum allowed number of threads.spring.task.scheduling.thread-name-prefix&#x3D;scheduling- # Prefix to use for the names of newly created threads. # ----------------------------------------# WEB PROPERTIES# ---------------------------------------- # EMBEDDED SERVER CONFIGURATION (ServerProperties)server.address&#x3D; # Network address to which the server should bind.server.compression.enabled&#x3D;false # Whether response compression is enabled.server.compression.excluded-user-agents&#x3D; # Comma-separated list of user agents for which responses should not be compressed.server.compression.mime-types&#x3D;text&#x2F;html,text&#x2F;xml,text&#x2F;plain,text&#x2F;css,text&#x2F;javascript,application&#x2F;javascript,application&#x2F;json,application&#x2F;xml # Comma-separated list of MIME types that should be compressed.server.compression.min-response-size&#x3D;2KB # Minimum &quot;Content-Length&quot; value that is required for compression to be performed.server.connection-timeout&#x3D; # Time that connectors wait for another HTTP request before closing the connection. When not set, the connector&#39;s container-specific default is used. Use a value of -1 to indicate no (that is, an infinite) timeout.server.error.include-exception&#x3D;false # Include the &quot;exception&quot; attribute.server.error.include-stacktrace&#x3D;never # When to include a &quot;stacktrace&quot; attribute.server.error.path&#x3D;&#x2F;error # Path of the error controller.server.error.whitelabel.enabled&#x3D;true # Whether to enable the default error page displayed in browsers in case of a server error.server.http2.enabled&#x3D;false # Whether to enable HTTP&#x2F;2 support, if the current environment supports it.server.jetty.acceptors&#x3D;-1 # Number of acceptor threads to use. When the value is -1, the default, the number of acceptors is derived from the operating environment.server.jetty.accesslog.append&#x3D;false # Append to log.server.jetty.accesslog.date-format&#x3D;dd&#x2F;MMM&#x2F;yyyy:HH:mm:ss Z # Timestamp format of the request log.server.jetty.accesslog.enabled&#x3D;false # Enable access log.server.jetty.accesslog.extended-format&#x3D;false # Enable extended NCSA format.server.jetty.accesslog.file-date-format&#x3D; # Date format to place in log file name.server.jetty.accesslog.filename&#x3D; # Log filename. If not specified, logs redirect to &quot;System.err&quot;.server.jetty.accesslog.locale&#x3D; # Locale of the request log.server.jetty.accesslog.log-cookies&#x3D;false # Enable logging of the request cookies.server.jetty.accesslog.log-latency&#x3D;false # Enable logging of request processing time.server.jetty.accesslog.log-server&#x3D;false # Enable logging of the request hostname.server.jetty.accesslog.retention-period&#x3D;31 # Number of days before rotated log files are deleted.server.jetty.accesslog.time-zone&#x3D;GMT # Timezone of the request log.server.jetty.max-http-post-size&#x3D;200000B # Maximum size of the HTTP post or put content.server.jetty.selectors&#x3D;-1 # Number of selector threads to use. When the value is -1, the default, the number of selectors is derived from the operating environment.server.max-http-header-size&#x3D;8KB # Maximum size of the HTTP message header.server.port&#x3D;8080 # Server HTTP port.server.server-header&#x3D; # Value to use for the Server response header (if empty, no header is sent).server.use-forward-headers&#x3D; # Whether X-Forwarded-* headers should be applied to the HttpRequest.server.servlet.context-parameters.*&#x3D; # Servlet context init parameters.server.servlet.context-path&#x3D; # Context path of the application.server.servlet.application-display-name&#x3D;application # Display name of the application.server.servlet.jsp.class-name&#x3D;org.apache.jasper.servlet.JspServlet # Class name of the servlet to use for JSPs.server.servlet.jsp.init-parameters.*&#x3D; # Init parameters used to configure the JSP servlet.server.servlet.jsp.registered&#x3D;true # Whether the JSP servlet is registered.server.servlet.session.cookie.comment&#x3D; # Comment for the session cookie.server.servlet.session.cookie.domain&#x3D; # Domain for the session cookie.server.servlet.session.cookie.http-only&#x3D; # Whether to use &quot;HttpOnly&quot; cookies for session cookies.server.servlet.session.cookie.max-age&#x3D; # Maximum age of the session cookie. If a duration suffix is not specified, seconds will be used.server.servlet.session.cookie.name&#x3D; # Session cookie name.server.servlet.session.cookie.path&#x3D; # Path of the session cookie.server.servlet.session.cookie.secure&#x3D; # Whether to always mark the session cookie as secure.server.servlet.session.persistent&#x3D;false # Whether to persist session data between restarts.server.servlet.session.store-dir&#x3D; # Directory used to store session data.server.servlet.session.timeout&#x3D;30m # Session timeout. If a duration suffix is not specified, seconds will be used.server.servlet.session.tracking-modes&#x3D; # Session tracking modes.server.ssl.ciphers&#x3D; # Supported SSL ciphers.server.ssl.client-auth&#x3D; # Client authentication mode.server.ssl.enabled&#x3D;true # Whether to enable SSL support.server.ssl.enabled-protocols&#x3D; # Enabled SSL protocols.server.ssl.key-alias&#x3D; # Alias that identifies the key in the key store.server.ssl.key-password&#x3D; # Password used to access the key in the key store.server.ssl.key-store&#x3D; # Path to the key store that holds the SSL certificate (typically a jks file).server.ssl.key-store-password&#x3D; # Password used to access the key store.server.ssl.key-store-provider&#x3D; # Provider for the key store.server.ssl.key-store-type&#x3D; # Type of the key store.server.ssl.protocol&#x3D;TLS # SSL protocol to use.server.ssl.trust-store&#x3D; # Trust store that holds SSL certificates.server.ssl.trust-store-password&#x3D; # Password used to access the trust store.server.ssl.trust-store-provider&#x3D; # Provider for the trust store.server.ssl.trust-store-type&#x3D; # Type of the trust store.server.tomcat.accept-count&#x3D;100 # Maximum queue length for incoming connection requests when all possible request processing threads are in use.server.tomcat.accesslog.buffered&#x3D;true # Whether to buffer output such that it is flushed only periodically.server.tomcat.accesslog.directory&#x3D;logs # Directory in which log files are created. Can be absolute or relative to the Tomcat base dir.server.tomcat.accesslog.enabled&#x3D;false # Enable access log.server.tomcat.accesslog.file-date-format&#x3D;.yyyy-MM-dd # Date format to place in the log file name.server.tomcat.accesslog.pattern&#x3D;common # Format pattern for access logs.server.tomcat.accesslog.prefix&#x3D;access_log # Log file name prefix.server.tomcat.accesslog.rename-on-rotate&#x3D;false # Whether to defer inclusion of the date stamp in the file name until rotate time.server.tomcat.accesslog.request-attributes-enabled&#x3D;false # Set request attributes for the IP address, Hostname, protocol, and port used for the request.server.tomcat.accesslog.rotate&#x3D;true # Whether to enable access log rotation.server.tomcat.accesslog.suffix&#x3D;.log # Log file name suffix.server.tomcat.additional-tld-skip-patterns&#x3D; # Comma-separated list of additional patterns that match jars to ignore for TLD scanning.server.tomcat.background-processor-delay&#x3D;10s # Delay between the invocation of backgroundProcess methods. If a duration suffix is not specified, seconds will be used.server.tomcat.basedir&#x3D; # Tomcat base directory. If not specified, a temporary directory is used.server.tomcat.internal-proxies&#x3D;10\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\192\\.168\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\169\\.254\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\127\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\172\\.1[6-9]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\172\\.2[0-9]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\172\\.3[0-1]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\0:0:0:0:0:0:0:1\\::1 # Regular expression that matches proxies that are to be trusted.server.tomcat.max-connections&#x3D;10000 # Maximum number of connections that the server accepts and processes at any given time.server.tomcat.max-http-post-size&#x3D;2MB # Maximum size of the HTTP post content.server.tomcat.max-swallow-size&#x3D;2MB # Maximum amount of request body to swallow.server.tomcat.max-threads&#x3D;200 # Maximum amount of worker threads.server.tomcat.min-spare-threads&#x3D;10 # Minimum amount of worker threads.server.tomcat.port-header&#x3D;X-Forwarded-Port # Name of the HTTP header used to override the original port value.server.tomcat.protocol-header&#x3D; # Header that holds the incoming protocol, usually named &quot;X-Forwarded-Proto&quot;.server.tomcat.protocol-header-https-value&#x3D;https # Value of the protocol header indicating whether the incoming request uses SSL.server.tomcat.redirect-context-root&#x3D;true # Whether requests to the context root should be redirected by appending a &#x2F; to the path.server.tomcat.remote-ip-header&#x3D; # Name of the HTTP header from which the remote IP is extracted. For instance, &#96;X-FORWARDED-FOR&#96;.server.tomcat.resource.allow-caching&#x3D;true # Whether static resource caching is permitted for this web application.server.tomcat.resource.cache-ttl&#x3D; # Time-to-live of the static resource cache.server.tomcat.uri-encoding&#x3D;UTF-8 # Character encoding to use to decode the URI.server.tomcat.use-relative-redirects&#x3D; # Whether HTTP 1.1 and later location headers generated by a call to sendRedirect will use relative or absolute redirects.server.undertow.accesslog.dir&#x3D; # Undertow access log directory.server.undertow.accesslog.enabled&#x3D;false # Whether to enable the access log.server.undertow.accesslog.pattern&#x3D;common # Format pattern for access logs.server.undertow.accesslog.prefix&#x3D;access_log. # Log file name prefix.server.undertow.accesslog.rotate&#x3D;true # Whether to enable access log rotation.server.undertow.accesslog.suffix&#x3D;log # Log file name suffix.server.undertow.buffer-size&#x3D; # Size of each buffer.server.undertow.direct-buffers&#x3D; # Whether to allocate buffers outside the Java heap. The default is derived from the maximum amount of memory that is available to the JVM.server.undertow.eager-filter-init&#x3D;true # Whether servlet filters should be initialized on startup.server.undertow.io-threads&#x3D; # Number of I&#x2F;O threads to create for the worker. The default is derived from the number of available processors.server.undertow.max-http-post-size&#x3D;-1B # Maximum size of the HTTP post content. When the value is -1, the default, the size is unlimited.server.undertow.worker-threads&#x3D; # Number of worker threads. The default is 8 times the number of I&#x2F;O threads. # FREEMARKER (FreeMarkerProperties)spring.freemarker.allow-request-override&#x3D;false # Whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.spring.freemarker.allow-session-override&#x3D;false # Whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.spring.freemarker.cache&#x3D;false # Whether to enable template caching.spring.freemarker.charset&#x3D;UTF-8 # Template encoding.spring.freemarker.check-template-location&#x3D;true # Whether to check that the templates location exists.spring.freemarker.content-type&#x3D;text&#x2F;html # Content-Type value.spring.freemarker.enabled&#x3D;true # Whether to enable MVC view resolution for this technology.spring.freemarker.expose-request-attributes&#x3D;false # Whether all request attributes should be added to the model prior to merging with the template.spring.freemarker.expose-session-attributes&#x3D;false # Whether all HttpSession attributes should be added to the model prior to merging with the template.spring.freemarker.expose-spring-macro-helpers&#x3D;true # Whether to expose a RequestContext for use by Spring&#39;s macro library, under the name &quot;springMacroRequestContext&quot;.spring.freemarker.prefer-file-system-access&#x3D;true # Whether to prefer file system access for template loading. File system access enables hot detection of template changes.spring.freemarker.prefix&#x3D; # Prefix that gets prepended to view names when building a URL.spring.freemarker.request-context-attribute&#x3D; # Name of the RequestContext attribute for all views.spring.freemarker.settings.*&#x3D; # Well-known FreeMarker keys which are passed to FreeMarker&#39;s Configuration.spring.freemarker.suffix&#x3D;.ftl # Suffix that gets appended to view names when building a URL.spring.freemarker.template-loader-path&#x3D;classpath:&#x2F;templates&#x2F; # Comma-separated list of template paths.spring.freemarker.view-names&#x3D; # White list of view names that can be resolved. # GROOVY TEMPLATES (GroovyTemplateProperties)spring.groovy.template.allow-request-override&#x3D;false # Whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.spring.groovy.template.allow-session-override&#x3D;false # Whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.spring.groovy.template.cache&#x3D;false # Whether to enable template caching.spring.groovy.template.charset&#x3D;UTF-8 # Template encoding.spring.groovy.template.check-template-location&#x3D;true # Whether to check that the templates location exists.spring.groovy.template.configuration.*&#x3D; # See GroovyMarkupConfigurerspring.groovy.template.content-type&#x3D;text&#x2F;html # Content-Type value.spring.groovy.template.enabled&#x3D;true # Whether to enable MVC view resolution for this technology.spring.groovy.template.expose-request-attributes&#x3D;false # Whether all request attributes should be added to the model prior to merging with the template.spring.groovy.template.expose-session-attributes&#x3D;false # Whether all HttpSession attributes should be added to the model prior to merging with the template.spring.groovy.template.expose-spring-macro-helpers&#x3D;true # Whether to expose a RequestContext for use by Spring&#39;s macro library, under the name &quot;springMacroRequestContext&quot;.spring.groovy.template.prefix&#x3D; # Prefix that gets prepended to view names when building a URL.spring.groovy.template.request-context-attribute&#x3D; # Name of the RequestContext attribute for all views.spring.groovy.template.resource-loader-path&#x3D;classpath:&#x2F;templates&#x2F; # Template path.spring.groovy.template.suffix&#x3D;.tpl # Suffix that gets appended to view names when building a URL.spring.groovy.template.view-names&#x3D; # White list of view names that can be resolved. # SPRING HATEOAS (HateoasProperties)spring.hateoas.use-hal-as-default-json-media-type&#x3D;true # Whether application&#x2F;hal+json responses should be sent to requests that accept application&#x2F;json. # HTTP (HttpProperties)spring.http.converters.preferred-json-mapper&#x3D; # Preferred JSON mapper to use for HTTP message conversion. By default, auto-detected according to the environment.spring.http.encoding.charset&#x3D;UTF-8 # Charset of HTTP requests and responses. Added to the &quot;Content-Type&quot; header if not set explicitly.spring.http.encoding.enabled&#x3D;true # Whether to enable http encoding support.spring.http.encoding.force&#x3D; # Whether to force the encoding to the configured charset on HTTP requests and responses.spring.http.encoding.force-request&#x3D; # Whether to force the encoding to the configured charset on HTTP requests. Defaults to true when &quot;force&quot; has not been specified.spring.http.encoding.force-response&#x3D; # Whether to force the encoding to the configured charset on HTTP responses.spring.http.encoding.mapping&#x3D; # Locale in which to encode mapping.spring.http.log-request-details&#x3D;false # Whether logging of (potentially sensitive) request details at DEBUG and TRACE level is allowed. # MULTIPART (MultipartProperties)spring.servlet.multipart.enabled&#x3D;true # Whether to enable support of multipart uploads.spring.servlet.multipart.file-size-threshold&#x3D;0B # Threshold after which files are written to disk.spring.servlet.multipart.location&#x3D; # Intermediate location of uploaded files.spring.servlet.multipart.max-file-size&#x3D;1MB # Max file size.spring.servlet.multipart.max-request-size&#x3D;10MB # Max request size.spring.servlet.multipart.resolve-lazily&#x3D;false # Whether to resolve the multipart request lazily at the time of file or parameter access. # JACKSON (JacksonProperties)spring.jackson.date-format&#x3D; # Date format string or a fully-qualified date format class name. For instance, &#96;yyyy-MM-dd HH:mm:ss&#96;.spring.jackson.default-property-inclusion&#x3D; # Controls the inclusion of properties during serialization. Configured with one of the values in Jackson&#39;s JsonInclude.Include enumeration.spring.jackson.deserialization.*&#x3D; # Jackson on&#x2F;off features that affect the way Java objects are deserialized.spring.jackson.generator.*&#x3D; # Jackson on&#x2F;off features for generators.spring.jackson.joda-date-time-format&#x3D; # Joda date time format string. If not configured, &quot;date-format&quot; is used as a fallback if it is configured with a format string.spring.jackson.locale&#x3D; # Locale used for formatting.spring.jackson.mapper.*&#x3D; # Jackson general purpose on&#x2F;off features.spring.jackson.parser.*&#x3D; # Jackson on&#x2F;off features for parsers.spring.jackson.property-naming-strategy&#x3D; # One of the constants on Jackson&#39;s PropertyNamingStrategy. Can also be a fully-qualified class name of a PropertyNamingStrategy subclass.spring.jackson.serialization.*&#x3D; # Jackson on&#x2F;off features that affect the way Java objects are serialized.spring.jackson.time-zone&#x3D; #  Time zone used when formatting dates. For instance, &quot;America&#x2F;Los_Angeles&quot; or &quot;GMT+10&quot;.spring.jackson.visibility.*&#x3D; # Jackson visibility thresholds that can be used to limit which methods (and fields) are auto-detected. # GSON (GsonProperties)spring.gson.date-format&#x3D; # Format to use when serializing Date objects.spring.gson.disable-html-escaping&#x3D; # Whether to disable the escaping of HTML characters such as &#39;&lt;&#39;, &#39;&gt;&#39;, etc.spring.gson.disable-inner-class-serialization&#x3D; # Whether to exclude inner classes during serialization.spring.gson.enable-complex-map-key-serialization&#x3D; # Whether to enable serialization of complex map keys (i.e. non-primitives).spring.gson.exclude-fields-without-expose-annotation&#x3D; # Whether to exclude all fields from consideration for serialization or deserialization that do not have the &quot;Expose&quot; annotation.spring.gson.field-naming-policy&#x3D; # Naming policy that should be applied to an object&#39;s field during serialization and deserialization.spring.gson.generate-non-executable-json&#x3D; # Whether to generate non executable JSON by prefixing the output with some special text.spring.gson.lenient&#x3D; # Whether to be lenient about parsing JSON that doesn&#39;t conform to RFC 4627.spring.gson.long-serialization-policy&#x3D; # Serialization policy for Long and long types.spring.gson.pretty-printing&#x3D; # Whether to output serialized JSON that fits in a page for pretty printing.spring.gson.serialize-nulls&#x3D; # Whether to serialize null fields. # JERSEY (JerseyProperties)spring.jersey.application-path&#x3D; # Path that serves as the base URI for the application. If specified, overrides the value of &quot;@ApplicationPath&quot;.spring.jersey.filter.order&#x3D;0 # Jersey filter chain order.spring.jersey.init.*&#x3D; # Init parameters to pass to Jersey through the servlet or filter.spring.jersey.servlet.load-on-startup&#x3D;-1 # Load on startup priority of the Jersey servlet.spring.jersey.type&#x3D;servlet # Jersey integration type. # SPRING LDAP (LdapProperties)spring.ldap.anonymous-read-only&#x3D;false # Whether read-only operations should use an anonymous environment.spring.ldap.base&#x3D; # Base suffix from which all operations should originate.spring.ldap.base-environment.*&#x3D; # LDAP specification settings.spring.ldap.password&#x3D; # Login password of the server.spring.ldap.urls&#x3D; # LDAP URLs of the server.spring.ldap.username&#x3D; # Login username of the server. # EMBEDDED LDAP (EmbeddedLdapProperties)spring.ldap.embedded.base-dn&#x3D; # List of base DNs.spring.ldap.embedded.credential.username&#x3D; # Embedded LDAP username.spring.ldap.embedded.credential.password&#x3D; # Embedded LDAP password.spring.ldap.embedded.ldif&#x3D;classpath:schema.ldif # Schema (LDIF) script resource reference.spring.ldap.embedded.port&#x3D;0 # Embedded LDAP port.spring.ldap.embedded.validation.enabled&#x3D;true # Whether to enable LDAP schema validation.spring.ldap.embedded.validation.schema&#x3D; # Path to the custom schema. # MUSTACHE TEMPLATES (MustacheAutoConfiguration)spring.mustache.allow-request-override&#x3D;false # Whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.spring.mustache.allow-session-override&#x3D;false # Whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.spring.mustache.cache&#x3D;false # Whether to enable template caching.spring.mustache.charset&#x3D;UTF-8 # Template encoding.spring.mustache.check-template-location&#x3D;true # Whether to check that the templates location exists.spring.mustache.content-type&#x3D;text&#x2F;html # Content-Type value.spring.mustache.enabled&#x3D;true # Whether to enable MVC view resolution for this technology.spring.mustache.expose-request-attributes&#x3D;false # Whether all request attributes should be added to the model prior to merging with the template.spring.mustache.expose-session-attributes&#x3D;false # Whether all HttpSession attributes should be added to the model prior to merging with the template.spring.mustache.expose-spring-macro-helpers&#x3D;true # Whether to expose a RequestContext for use by Spring&#39;s macro library, under the name &quot;springMacroRequestContext&quot;.spring.mustache.prefix&#x3D;classpath:&#x2F;templates&#x2F; # Prefix to apply to template names.spring.mustache.request-context-attribute&#x3D; # Name of the RequestContext attribute for all views.spring.mustache.suffix&#x3D;.mustache # Suffix to apply to template names.spring.mustache.view-names&#x3D; # White list of view names that can be resolved. # SPRING MVC (WebMvcProperties)spring.mvc.async.request-timeout&#x3D; # Amount of time before asynchronous request handling times out.spring.mvc.contentnegotiation.favor-parameter&#x3D;false # Whether a request parameter (&quot;format&quot; by default) should be used to determine the requested media type.spring.mvc.contentnegotiation.favor-path-extension&#x3D;false # Whether the path extension in the URL path should be used to determine the requested media type.spring.mvc.contentnegotiation.media-types.*&#x3D; # Map file extensions to media types for content negotiation. For instance, yml to text&#x2F;yaml.spring.mvc.contentnegotiation.parameter-name&#x3D; # Query parameter name to use when &quot;favor-parameter&quot; is enabled.spring.mvc.date-format&#x3D; # Date format to use. For instance, &#96;dd&#x2F;MM&#x2F;yyyy&#96;.spring.mvc.dispatch-trace-request&#x3D;false # Whether to dispatch TRACE requests to the FrameworkServlet doService method.spring.mvc.dispatch-options-request&#x3D;true # Whether to dispatch OPTIONS requests to the FrameworkServlet doService method.spring.mvc.favicon.enabled&#x3D;true # Whether to enable resolution of favicon.ico.spring.mvc.formcontent.filter.enabled&#x3D;true # Whether to enable Spring&#39;s FormContentFilter.spring.mvc.hiddenmethod.filter.enabled&#x3D;true # Whether to enable Spring&#39;s HiddenHttpMethodFilter.spring.mvc.ignore-default-model-on-redirect&#x3D;true # Whether the content of the &quot;default&quot; model should be ignored during redirect scenarios.spring.mvc.locale&#x3D; # Locale to use. By default, this locale is overridden by the &quot;Accept-Language&quot; header.spring.mvc.locale-resolver&#x3D;accept-header # Define how the locale should be resolved.spring.mvc.log-resolved-exception&#x3D;false # Whether to enable warn logging of exceptions resolved by a &quot;HandlerExceptionResolver&quot;, except for &quot;DefaultHandlerExceptionResolver&quot;.spring.mvc.message-codes-resolver-format&#x3D; # Formatting strategy for message codes. For instance, &#96;PREFIX_ERROR_CODE&#96;.spring.mvc.pathmatch.use-registered-suffix-pattern&#x3D;false # Whether suffix pattern matching should work only against extensions registered with &quot;spring.mvc.contentnegotiation.media-types.*&quot;.spring.mvc.pathmatch.use-suffix-pattern&#x3D;false # Whether to use suffix pattern match (&quot;.*&quot;) when matching patterns to requests.spring.mvc.servlet.load-on-startup&#x3D;-1 # Load on startup priority of the dispatcher servlet.spring.mvc.servlet.path&#x3D;&#x2F; # Path of the dispatcher servlet.spring.mvc.static-path-pattern&#x3D;&#x2F;** # Path pattern used for static resources.spring.mvc.throw-exception-if-no-handler-found&#x3D;false # Whether a &quot;NoHandlerFoundException&quot; should be thrown if no Handler was found to process a request.spring.mvc.view.prefix&#x3D; # Spring MVC view prefix.spring.mvc.view.suffix&#x3D; # Spring MVC view suffix. # SPRING RESOURCES HANDLING (ResourceProperties)spring.resources.add-mappings&#x3D;true # Whether to enable default resource handling.spring.resources.cache.cachecontrol.cache-private&#x3D; # Indicate that the response message is intended for a single user and must not be stored by a shared cache.spring.resources.cache.cachecontrol.cache-public&#x3D; # Indicate that any cache may store the response.spring.resources.cache.cachecontrol.max-age&#x3D; # Maximum time the response should be cached, in seconds if no duration suffix is not specified.spring.resources.cache.cachecontrol.must-revalidate&#x3D; # Indicate that once it has become stale, a cache must not use the response without re-validating it with the server.spring.resources.cache.cachecontrol.no-cache&#x3D; # Indicate that the cached response can be reused only if re-validated with the server.spring.resources.cache.cachecontrol.no-store&#x3D; # Indicate to not cache the response in any case.spring.resources.cache.cachecontrol.no-transform&#x3D; # Indicate intermediaries (caches and others) that they should not transform the response content.spring.resources.cache.cachecontrol.proxy-revalidate&#x3D; # Same meaning as the &quot;must-revalidate&quot; directive, except that it does not apply to private caches.spring.resources.cache.cachecontrol.s-max-age&#x3D; # Maximum time the response should be cached by shared caches, in seconds if no duration suffix is not specified.spring.resources.cache.cachecontrol.stale-if-error&#x3D; # Maximum time the response may be used when errors are encountered, in seconds if no duration suffix is not specified.spring.resources.cache.cachecontrol.stale-while-revalidate&#x3D; # Maximum time the response can be served after it becomes stale, in seconds if no duration suffix is not specified.spring.resources.cache.period&#x3D; # Cache period for the resources served by the resource handler. If a duration suffix is not specified, seconds will be used.spring.resources.chain.cache&#x3D;true # Whether to enable caching in the Resource chain.spring.resources.chain.compressed&#x3D;false # Whether to enable resolution of already compressed resources (gzip, brotli).spring.resources.chain.enabled&#x3D; # Whether to enable the Spring Resource Handling chain. By default, disabled unless at least one strategy has been enabled.spring.resources.chain.html-application-cache&#x3D;false # Whether to enable HTML5 application cache manifest rewriting.spring.resources.chain.strategy.content.enabled&#x3D;false # Whether to enable the content Version Strategy.spring.resources.chain.strategy.content.paths&#x3D;&#x2F;** # Comma-separated list of patterns to apply to the content Version Strategy.spring.resources.chain.strategy.fixed.enabled&#x3D;false # Whether to enable the fixed Version Strategy.spring.resources.chain.strategy.fixed.paths&#x3D;&#x2F;** # Comma-separated list of patterns to apply to the fixed Version Strategy.spring.resources.chain.strategy.fixed.version&#x3D; # Version string to use for the fixed Version Strategy.spring.resources.static-locations&#x3D;classpath:&#x2F;META-INF&#x2F;resources&#x2F;,classpath:&#x2F;resources&#x2F;,classpath:&#x2F;static&#x2F;,classpath:&#x2F;public&#x2F; # Locations of static resources. # SPRING SESSION (SessionProperties)spring.session.store-type&#x3D; # Session store type.spring.session.timeout&#x3D; # Session timeout. If a duration suffix is not specified, seconds will be used.spring.session.servlet.filter-order&#x3D;-2147483598 # Session repository filter order.spring.session.servlet.filter-dispatcher-types&#x3D;async,error,request # Session repository filter dispatcher types. # SPRING SESSION HAZELCAST (HazelcastSessionProperties)spring.session.hazelcast.flush-mode&#x3D;on-save # Sessions flush mode.spring.session.hazelcast.map-name&#x3D;spring:session:sessions # Name of the map used to store sessions. # SPRING SESSION JDBC (JdbcSessionProperties)spring.session.jdbc.cleanup-cron&#x3D;0 * * * * * # Cron expression for expired session cleanup job.spring.session.jdbc.initialize-schema&#x3D;embedded # Database schema initialization mode.spring.session.jdbc.schema&#x3D;classpath:org&#x2F;springframework&#x2F;session&#x2F;jdbc&#x2F;schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.spring.session.jdbc.table-name&#x3D;SPRING_SESSION # Name of the database table used to store sessions. # SPRING SESSION MONGODB (MongoSessionProperties)spring.session.mongodb.collection-name&#x3D;sessions # Collection name used to store sessions. # SPRING SESSION REDIS (RedisSessionProperties)spring.session.redis.cleanup-cron&#x3D;0 * * * * * # Cron expression for expired session cleanup job.spring.session.redis.flush-mode&#x3D;on-save # Sessions flush mode.spring.session.redis.namespace&#x3D;spring:session # Namespace for keys used to store sessions. # THYMELEAF (ThymeleafAutoConfiguration)spring.thymeleaf.cache&#x3D;true # Whether to enable template caching.spring.thymeleaf.check-template&#x3D;true # Whether to check that the template exists before rendering it.spring.thymeleaf.check-template-location&#x3D;true # Whether to check that the templates location exists.spring.thymeleaf.enabled&#x3D;true # Whether to enable Thymeleaf view resolution for Web frameworks.spring.thymeleaf.enable-spring-el-compiler&#x3D;false # Enable the SpringEL compiler in SpringEL expressions.spring.thymeleaf.encoding&#x3D;UTF-8 # Template files encoding.spring.thymeleaf.excluded-view-names&#x3D; # Comma-separated list of view names (patterns allowed) that should be excluded from resolution.spring.thymeleaf.mode&#x3D;HTML # Template mode to be applied to templates. See also Thymeleaf&#39;s TemplateMode enum.spring.thymeleaf.prefix&#x3D;classpath:&#x2F;templates&#x2F; # Prefix that gets prepended to view names when building a URL.spring.thymeleaf.reactive.chunked-mode-view-names&#x3D; # Comma-separated list of view names (patterns allowed) that should be the only ones executed in CHUNKED mode when a max chunk size is set.spring.thymeleaf.reactive.full-mode-view-names&#x3D; # Comma-separated list of view names (patterns allowed) that should be executed in FULL mode even if a max chunk size is set.spring.thymeleaf.reactive.max-chunk-size&#x3D;0B # Maximum size of data buffers used for writing to the response.spring.thymeleaf.reactive.media-types&#x3D; # Media types supported by the view technology.spring.thymeleaf.render-hidden-markers-before-checkboxes&#x3D;false # Whether hidden form inputs acting as markers for checkboxes should be rendered before the checkbox element itself.spring.thymeleaf.servlet.content-type&#x3D;text&#x2F;html # Content-Type value written to HTTP responses.spring.thymeleaf.servlet.produce-partial-output-while-processing&#x3D;true # Whether Thymeleaf should start writing partial output as soon as possible or buffer until template processing is finished.spring.thymeleaf.suffix&#x3D;.html # Suffix that gets appended to view names when building a URL.spring.thymeleaf.template-resolver-order&#x3D; # Order of the template resolver in the chain.spring.thymeleaf.view-names&#x3D; # Comma-separated list of view names (patterns allowed) that can be resolved. # SPRING WEBFLUX (WebFluxProperties)spring.webflux.date-format&#x3D; # Date format to use. For instance, &#96;dd&#x2F;MM&#x2F;yyyy&#96;.spring.webflux.hiddenmethod.filter.enabled&#x3D;true # Whether to enable Spring&#39;s HiddenHttpMethodFilter.spring.webflux.static-path-pattern&#x3D;&#x2F;** # Path pattern used for static resources. # SPRING WEB SERVICES (WebServicesProperties)spring.webservices.path&#x3D;&#x2F;services # Path that serves as the base URI for the services.spring.webservices.servlet.init&#x3D; # Servlet init parameters to pass to Spring Web Services.spring.webservices.servlet.load-on-startup&#x3D;-1 # Load on startup priority of the Spring Web Services servlet.spring.webservices.wsdl-locations&#x3D; # Comma-separated list of locations of WSDLs and accompanying XSDs to be exposed as beans.  # ----------------------------------------# SECURITY PROPERTIES# ----------------------------------------# SECURITY (SecurityProperties)spring.security.filter.order&#x3D;-100 # Security filter chain order.spring.security.filter.dispatcher-types&#x3D;async,error,request # Security filter chain dispatcher types.spring.security.user.name&#x3D;user # Default user name.spring.security.user.password&#x3D; # Password for the default user name.spring.security.user.roles&#x3D; # Granted roles for the default user name. # SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)spring.security.oauth2.client.provider.*&#x3D; # OAuth provider details.spring.security.oauth2.client.registration.*&#x3D; # OAuth client registrations. # SECURITY OAUTH2 RESOURCE SERVER (OAuth2ResourceServerProperties)spring.security.oauth2.resourceserver.jwt.jwk-set-uri&#x3D; # JSON Web Key URI to use to verify the JWT token.   spring.security.oauth2.resourceserver.jwt.issuer-uri&#x3D; # URI that an OpenID Connect Provider asserts as its Issuer Identifier. <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高并发下的部分架构解决思路</title>
      <link href="/articles/2019/10/17/1571305607364.html"/>
      <url>/articles/2019/10/17/1571305607364.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20171227.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><p><a href="https://mp.weixin.qq.com/s/5vVXBXkd-Ilh7zk5G6Wxcg">原文地址</a></p><ol><li><p>此文章主要是搭建高可用的服务层来解决高并发的</p></li><li><p>关于拆分</p><ul><li>每个业务一个独立的业务模块</li><li>业务之间完全解耦</li><li>业务之间互不影响</li><li>业务模块独立</li><li>单独开发、上线、运维</li><li>效率高</li></ul></li><li><p>无状态设计</p><ul><li>服务模块只处理对应的业务逻辑，无需关心业务请求的上下文信息，也就是说服务中不能保存用户的状态数据，如果有就会出现难以扩容、单点等问题</li><li>无状态后，若发生故障可以很容易用负载均衡的方式转移</li></ul></li><li><p>超时设置</p><ul><li>服务调用分主调服务和被调服务，一旦主调服务A调用被调服务B超时则会进入超时流程</li><li>超时可能是由于B服务宕机、网络问题或程序bug之类的</li><li>设置3秒超时，则3秒后A不再关心B服务的回复情况，此时可以重新调用或者换一个对等的B服务，也可以直接放弃本次调用<blockquote><p>超时设置的好处是当某个服务不可用时，不至于整个系统发生雪崩</p></blockquote></li></ul></li><li><p>异步调用<br> 如果业务允许延迟处理则可以采用异步调用<br> 实现异步调用一般采用消息队列，其主要功能有：</p><ul><li>异步处理—增加吞吐量</li><li>削峰填谷—提高系统稳定性</li><li>系统解耦—业务边界隔离</li><li>数据同步—保证最终一致性</li></ul><p> 可以根据业务范围大小来确定使用什么队列</p><ul><li>应用内部—采用线程池，比如Java ThreadPool中的BlockingQueue实现任务级别的缓冲与处理</li><li>应用外部—RabbitMQ、ActiveMQ，做应用级别队列，方便进行业务边界隔离与提高吞吐量<br>技术上讲，MQ分为两种模型：pull与push<ul><li>pull：c主动请求mq，获取队列中的消息。可以控制消费速度，只需控制队列中的偏移量offset，一般用于c数量有限且推送消息的p不均匀的情况下</li><li>push：mq主动推送消息到c。比较适合实时性要求较高的情况，但此时如果c消费不过来（或发生异常）则会导致消息再次入列，从而发生消费堵塞<blockquote><p>目前较成熟的技术主要还是以pull模式为主，如kafka</p></blockquote></li></ul></li></ul></li><li><p>幂等设计<br> 即一次请求和多个请求的作用是一样的</p><p> 主要解决分布式的情况下，状态不明确（即超时的情况）重新请求可能导致的数据不一致、数据覆盖的问题</p><p> 比如重试如果是get操作则无影响，但如果是post、put操作则会导致上述问</p></li></ol><blockquote><p>在金融、电商、银行等对数据要求较高的行业中必须使用幂等设计</p></blockquote><p>以支付为例：</p><ul><li><p>请求方一般会生产一个唯一性 ID 标识，这个标识可以具有业务一样，比如订单号或者支付流水号，在发起请求时候带上唯一性 ID。</p></li><li><p>接收者在收到请求后，第一步通过获取唯一性 ID 来查询接收端是否有对应的记录，如果有的话，就直接将上次请求的结果返回，如果没有的话，就进行操作，并在操作完成后记录到对应的表里</p></li><li><p>这样的话无论重新请求多少次，只要第一次支付成功，则会直接将记录的结果返回而不再次执行操作</p></li></ul><ol start="7"><li>服务降级<br>牺牲非核心业务，保证核心业务的高可用。主要解决资源不足和访问量过大的问题，如双十一，主要采用部分服务不提供访问，来减少对系统的影响<br> 方式主要包括：<ul><li>延迟服务，主要通过队列实现记录流水账单</li><li>功能降级，停用不重要的功能，比如推荐、评论等，等高峰过去再恢复功能</li><li>降低数据一致性，比如可以在页面不显示库存真实数据，只显示有没有库存两种状态</li></ul></li></ol><p>下面是需要注意的点：</p><ul><li><p>清晰定义降级级别， 比如出现吞吐量超过 X，单位时间内响应时间超过 Y 秒、失败次数超过 Z 次等，这些阈值需要在准备的时候，通过压测的方式来确定。</p></li><li><p>梳理业务级别：降级之前，首先需要确定哪些业务是必须有，哪些业务是可以有的，哪些业务是可有可无的。</p></li><li><p>降级开关：可以通过接入配置中心（比如携程 Apollo、百度 Disconf ）的方式直接后台降级。但是如果公司没有配置中心的话，可以封装一个 API 接口来切分，不过该 API 接口要做成幂等的方式，同时需要做一些简单的签名，来保证其一定的安全性</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高并发 </tag>
            
            <tag> 架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用操作整理</title>
      <link href="/articles/2019/10/11/1570759641494.html"/>
      <url>/articles/2019/10/11/1570759641494.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20171225.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p><p>以目前的经验，在操作公司服务器或者电脑虚拟机时，或多或少会遇到一些固定的问题或者是忘记的命令，网上搜索时解决方式很多但是不一定适合自己，这里做一个归纳整理，都是我自己试过能解决问题的，以备后期查阅。</p><ol><li><p>若有自带安装的 JDK，如何卸载 CentOS 系统自带 Java 环境？</p><ul><li>卸载 JDK 相关文件<br>输入：<code>yum -y remove java-1.7.0-openjdk*</code></li><li>卸载 tzdata-java<br>输入：<code>yum -y remove tzdata-java.noarch</code></li></ul></li><li><p>防火墙的基本操作(CentOS)</p><ul><li>启动： <code>systemctl start firewalld</code></li><li>关闭： <code>systemctl stop firewalld</code></li><li>查看状态： <code>systemctl status firewalld</code></li><li>开机禁用  ： <code>systemctl disable firewalld</code></li><li>开机启用  ： <code>systemctl enable firewalld</code></li></ul></li><li><p>修改 CentOS 默认 yum 源为 mirrors.aliyun.com</p><ul><li>首先备份系统自带 yum 源配置文件 CentOS-Base.repo<br><code># mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</code></li><li>下载 ailiyun 的 yum 源配置文件到/etc/yum.repos.d/<br>CentOS7<br><code># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</code></li><li>运行 yum makecache 生成缓存<br><code># yum makecache</code></li><li>这时候再更新系统就会看到以下 mirrors.aliyun.com 信息<br><img src="https://img.hacpai.com/file/2019/10/QQ%E6%88%AA%E5%9B%BE20191011094714-ae5e67bb.png" alt="QQ 截图 20191011094714.png"></li></ul></li><li><p>yum 程序占用<br>曾经遇到过如下错误：</p><pre class="line-numbers language-none"><code class="language-none">Existing lock &#x2F;var&#x2F;run&#x2F;yum.pid: another copy is running as pid 25960.Another app is currently holding the yum lock; waiting for it to exit...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>搜索后发现此时可以强制关掉 yum 进程：<br><code>#rm -f /var/run/yum.pid</code></p></li><li><p>查看端口<br><code>netstat -lntup</code></p></li><li><p>安装完 Node.js 后 NPM 安装依赖缓慢<br>此时可换为换为国内源<br><code>npm config set registry http://registry.npm.taobao.org</code></p></li><li><p>su: Authentication failure 的解决方案</p></li></ol><blockquote><p>原因是：Ubuntu 默认不允许使用 root 登录，因此初始 root 账户是不能使用的，需要在普通账户下利用 sudo 权限修改 root 密码。</p></blockquote><p>解决方案很简单，设置一个 root 密码就行了。<br>注意是 sudo 而不是 su：<code>sudo passwd root</code><br>8. Ubuntu 的一些操作</p><ul><li>关闭防火墙<br><code>sudo ufw disable</code></li><li>查看状态<br><code>sudo ufw status</code></li><li>卸载 openjdk<br><code>sudo apt-get remove openjdk*</code></li></ul><ol start="9"><li>Ubuntu 保存环境变量的几个文件</li></ol><ul><li><p>/etc/profile<br>在用户登录时，操作系统定制用户环境时使用的第一个文件，此文件为系统的每个用户设置环境信息，当用户第一次登录时，该文件被执行。</p></li><li><p>/etc/environment<br>在用户登录时，操作系统使用的第二个文件， 系统在读取用户个人的 profile 前，设置环境文件的环境变量。</p></li><li><p>~/.profile<br>在用户登录时，用到的第三个文件 是.profile 文件，每个用户都可使用该文件输入专用于自己使用的 shell 信息，当用户登录时，该文件仅仅执行一次！默认情况下，会设置一些环境变量，执行用户的.bashrc 文件。</p></li><li><p>/etc/bashrc<br>为每一个运行 bash shell 的用户执行此文件，当 bash shell 被打开时，该文件被读取。</p></li><li><p>~/.bashrc<br>该文件包含专用于用户的 bash shell 的 bash 信息，当登录时以及每次打开新的 shell 时，该该文件被读取。</p><blockquote><p>注意：以上文件可通过$ sudo gedit 文件名 或 $ sudo VIM 文件名打开；建议只修改 ~/.profile 文件，如果只修改 ~/.bashrc 文件，后期使用 go get 命令时，会提示 GOPATH 未设置。</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ学习（一）-----概览</title>
      <link href="/articles/2019/10/09/1570613610453.html"/>
      <url>/articles/2019/10/09/1570613610453.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.hacpai.com/bing/20180107.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"> </p><h2 id="RocketMQ概览"><a href="#RocketMQ概览" class="headerlink" title="RocketMQ概览"></a>RocketMQ概览</h2><blockquote><p><a href="https://www.jianshu.com/p/2838890f3284">参考网址1</a><br><a href="https://www.jianshu.com/p/5c8089b43556">参考网址2</a></p></blockquote><h3 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h3><p>RocketMQ有以下主要特点：</p><ul><li>灵活可扩展性<br>  RocketMQ 天然支持集群，其核心四组件（Name Server、Broker、Producer、Consumer）每一个都可以在没有单点故障的情况下进行水平扩展。</li><li>海量消息堆积能力<br>  RocketMQ 采用零拷贝原理实现超大的消息的堆积能力，据说单机已可以支持亿级消息堆积，而且在堆积了这么多消息后依然保持写入低延迟。</li><li>支持顺序消息<br>  可以保证消息消费者按照消息发送的顺序对消息进行消费。顺序消息分为全局有序和局部有序，一般推荐使用局部有序，即生产者通过将某一类消息按顺序发送至同一个队列来实现。</li><li>多种消息过滤方式<br>  消息过滤分为在服务器端过滤和在消费端过滤。服务器端过滤时可以按照消息消费者的要求做过滤，优点是减少不必要消息传输，缺点是增加了消息服务器的负担，实现相对复杂。消费端过滤则完全由具体应用自定义实现，这种方式更加灵活，缺点是很多无用的消息会传输给消息消费者。</li><li>支持事务消息<br>  RocketMQ 除了支持普通消息，顺序消息之外还支持事务消息，这个特性对于分布式事务来说提供了又一种解决思路。</li><li>回溯消费<br>  回溯消费是指消费者已经消费成功的消息，由于业务上需求需要重新消费，RocketMQ 支持按照时间回溯消费，时间维度精确到毫秒，可以向前回溯，也可以向后回溯。</li></ul><h3 id="优势与比较"><a href="#优势与比较" class="headerlink" title="优势与比较"></a>优势与比较</h3><p>消息队列是高并发系统的核心组件之一，能帮助业务系统解构提升开发效率和系统稳定性</p><p>有以下优势：</p><ul><li>削峰填谷（主要解决瞬时写压力大于应用服务能力导致消息丢失、系统奔溃等问题）</li><li>系统解耦（解决不同重要程度、不同能力级别系统之间依赖导致一死全死）</li><li>提升性能（当存在一对多调用时，可以发一条消息给消息系统，让消息系统通知相关系统）</li><li>蓄流压测（线上有些链路不好压测，可以通过堆积一定量消息再放开来压测）</li></ul><p>相对而言RocketMQ的优势：</p><ul><li>支持事务型消息（消息发送和DB操作保持两方的最终一致性，RabbitMQ和Kafka不支持）</li><li>支持结合RabbitMQ的多个系统之间数据最终一致性（多方事务，二方事务是前提）</li><li>支持18个级别的延迟消息（RabbitMQ和Kafka不支持）</li><li>支持指定次数和时间间隔的失败消息重发（Kafka不支持，RabbitMQ需要手动确认）</li><li>支持consumer端tag过滤，减少不必要的网络传输（RabbitMQ和Kafka不支持）</li><li>支持重复消费（RabbitMQ不支持，Kafka支持）</li></ul><p><a href="https://upload-images.jianshu.io/upload_images/12619159-ebd12b24d5ae33d9.png">Kafka、RocketMQ、RabbitMQ对比图</a></p><h4 id="消息存储"><a href="#消息存储" class="headerlink" title="消息存储"></a>消息存储</h4><p>为提高消息读写并发能力，将一个topic消息进行拆分，kafka称为分区，rocketmq称为队列。</p><ul><li>对于kafka：为了防止一个分区的消息文件过大，会拆分成一个个固定大小的文件，所以一个分区就对应了一个目录。分区与分区之间是相互隔离的。</li><li>对于RocketMQ：则是所有topic的数据混在一起进行存储，默认超过1G的话，则重新创建一个新的文件。消息的写入过程即写入该混杂的文件中，然后又有一个线程服务，在不断的读取分析该混杂文件，将消息进行分拣，然后存储在对应队列目录中（存储的是简要信息，如消息在混杂文件中的offset，消息大小等）</li><li>所以RocketMQ需要2次寻找，第一次先找队列中的消息概要信息，拿到概要信息中的offset，根据这个offset再到混杂文件中找到想要的消息。而kafka则只需要直接读取分区中的文件即可得到想要的消息</li></ul><h4 id="producer端发现"><a href="#producer端发现" class="headerlink" title="producer端发现"></a>producer端发现</h4><p>Producer端如何来发现新的broker地址。</p><ul><li>对于kafka来说：Producer端需要配置broker的列表地址，Producer也从一个broker中来更新broker列表地址（从中发现新加入的broker）。</li><li>对于RocketMQ来说：Producer端需要Name Server的列表地址，同时还可以定时从一个HTTP地址中来获取最新的Name Server的列表地址，然后从其中的一台Name Server来获取全部的路由信息，从中发现新的broker。</li></ul><h4 id="消费offset的存储"><a href="#消费offset的存储" class="headerlink" title="消费offset的存储"></a>消费offset的存储</h4><ul><li>对于kafka：Consumer将消费的offset定时存储到ZooKeeper上，利用ZooKeeper保障了offset的高可用问题。</li><li>对于RocketMQ:Consumer将消费的offset定时存储到broker所在的机器上，这个broker优先是master，如果master挂了的话，则会选择slave来存储，broker也是将这些offset定时刷新到本地磁盘上，同时slave会定时的访问master来获取这些offset。</li></ul><h4 id="consumer负载均衡"><a href="#consumer负载均衡" class="headerlink" title="consumer负载均衡"></a>consumer负载均衡</h4><ul><li>对于负载均衡，在出现分区或者队列增加或者减少的时候、Consumer增加或者减少的时候都会进行reblance操作。</li><li>对于RocketMQ:客户端自己会定时对所有的topic的进行reblance操作，对于每个topic，会从broker获取所有Consumer列表，从broker获取队列列表，按照负载均衡策略，计算各自负责哪些队列。这种就要求进行负载均衡的时候，各个Consumer获取的数据是一致的，不然不同的Consumer的reblance结果就不同。</li><li>对于kafka：kafka之前也是客户端自己进行reblance，依靠ZooKeeper的监听，来监听上述2种情况的出现，一旦出现则进行reblance。现在的版本则将这个reblance操作转移到了broker端来做，不但解决了RocketMQ上述的问题，同时减轻了客户端的操作，使得客户端更加轻量级，减少了和其他语言集成的工作量。</li></ul><h3 id="集群结构"><a href="#集群结构" class="headerlink" title="集群结构"></a>集群结构</h3><h4 id="1、Name-Server"><a href="#1、Name-Server" class="headerlink" title="1、Name Server"></a>1、Name Server</h4><p>Name Server是一个几乎无状态节点，可集群部署，节点之间无任何信息同步。</p><h4 id="2、Broker"><a href="#2、Broker" class="headerlink" title="2、Broker"></a>2、Broker</h4><p>Broker部署相对复杂，Broker分为Master与Slave，一个Master可以对应多个Slave，但是一个Slave只能对应一个Master，Master与Slave的对应关系通过指定相同的Broker Name，不同的Broker Id来定义，BrokerId为0表示Master，非0表示Slave。Master也可以部署多个。</p><p>每个Broker与Name Server集群中的所有节点建立长连接，定时(每隔30s)注册Topic信息到所有Name Server。Name Server定时(每隔10s)扫描所有存活broker的连接，如果Name Server超过2分钟没有收到心跳，则Name Server断开与Broker的连接。</p><h4 id="3、Producer"><a href="#3、Producer" class="headerlink" title="3、Producer"></a>3、Producer</h4><p>Producer与Name Server集群中的其中一个节点(随机选择)建立长连接，定期从Name Server取Topic路由信息（有点像zookeeper作注册中心），并向提供Topic服务的Master建立长连接，且定时向Master发送心跳。Producer完全无状态，可集群部署。</p><p>Producer每隔30s（由ClientConfig的pollNameServerInterval）从Name server获取所有topic队列的最新情况，这意味着如果Broker不可用，Producer最多30s能够感知，在此期间内发往Broker的所有消息都会失败。</p><p>Producer每隔30s（由ClientConfig中heartbeatBrokerInterval决定）向所有关联的broker发送心跳，Broker每隔10s中扫描所有存活的连接，如果Broker在2分钟内没有收到心跳数据，则关闭与Producer的连接。</p><p>生产者（Producer）负责产生消息，生产者向消息服务器发送由业务应用程序系统生成的消息。 RocketMQ 提供了三种方式发送消息：同步、异步和单向。</p><h5 id="同步发送"><a href="#同步发送" class="headerlink" title="同步发送"></a>同步发送</h5><p>同步发送指消息发送方发出数据后会在收到接收方发回响应之后才发下一个数据包。一般用于重要通知消息，例如重要通知邮件、营销短信。</p><h5 id="异步发送"><a href="#异步发送" class="headerlink" title="异步发送"></a>异步发送</h5><p>异步发送指发送方发出数据后，不等接收方发回响应，接着发送下个数据包，一般用于可能链路耗时较长而对响应时间敏感的业务场景，例如用户视频上传后通知启动转码服务。</p><h5 id="单向发送"><a href="#单向发送" class="headerlink" title="单向发送"></a>单向发送</h5><p>单向发送是指只负责发送消息而不等待服务器回应且没有回调函数触发，适用于某些耗时非常短但对可靠性要求并不高的场景，例如日志收集。</p><h5 id="生产者组"><a href="#生产者组" class="headerlink" title="生产者组"></a>生产者组</h5><p>生产者组（Producer Group）是一类 Producer 的集合，这类 Producer 通常发送一类消息并且发送逻辑一致，所以将这些 Producer 分组在一起。从部署结构上看生产者通过 Producer Group 的名字来标记自己是一个集群。</p><h4 id="4、Consumer"><a href="#4、Consumer" class="headerlink" title="4、Consumer"></a>4、Consumer</h4><p>Consumer与Name Server集群中的其中一个节点(随机选择)建立长连接，定期从Name Server取Topic路由信息，并向提供Topic服务的Master、Slave建立长连接，且定时向Master、Slave发送心跳。Consumer既可以从Master订阅消息，也可以从Slave订阅消息，订阅规则由Broker配置决定。</p><p>Consumer每隔30s从Name server获取topic的最新队列情况，这意味着Broker不可用时，Consumer最多最需要30s才能感知。</p><p>Consumer每隔30s（由ClientConfig中heartbeatBrokerInterval决定）向所有关联的broker发送心跳，Broker每隔10s扫描所有存活的连接，若某个连接2分钟内没有发送心跳数据，则关闭连接；并向该Consumer Group的所有Consumer发出通知，Group内的Consumer重新分配队列，然后继续消费。</p><p>当Consumer得到master宕机通知后，转向slave消费，slave不能保证master的消息100%都同步过来了，因此会有少量的消息丢失。但是一旦master恢复，未同步过去的消息会被最终消费掉。</p><p>消费者对列是消费者连接之后（或者之前有连接过）才创建的。我们将原生的消费者标识由 {IP}@{消费者group}扩展为 {IP}@{消费者group}{topic}{tag}，（例如xxx.xxx.xxx.xxx@mqtest_producer-group_2m2sTest_tag-zyk）。任何一个元素不同，都认为是不同的消费端，每个消费端会拥有一份自己消费对列（默认是broker对列数量*broker数量）。新挂载的消费者对列中拥有commitlog中的所有数据。</p><h3 id="分布式事务消息"><a href="#分布式事务消息" class="headerlink" title="分布式事务消息"></a>分布式事务消息</h3><h4 id="两方事务"><a href="#两方事务" class="headerlink" title="两方事务"></a>两方事务</h4><blockquote><p>原理：大事务 = 小事务 + 异步 从而达到最终一致性</p></blockquote><p>具体过程为：</p><ol><li>发送消息到MQ服务器，此时消息状态为SEND_OK。此消息为consumer不可见。</li><li>执行DB操作；DB执行成功Commit DB操作，DB执行失败Rollback DB操作。</li><li>如果DB执行成功，回复MQ服务器，将状态为COMMIT_MESSAGE；如果DB执行失败，回复MQ服务器，将状态改为ROLLBACK_MESSAGE。注意此过程有可能失败。</li><li>MQ内部提供一个名为“事务状态服务”的服务，此服务会检查事务消息的状态，如果发现消息未COMMIT，则通过Producer启动时注册的TransactionCheckListener来回调业务系统，业务系统在checkLocalTransactionState方法中检查DB事务状态，如果成功，则回复COMMIT_MESSAGE，否则回复ROLLBACK_MESSAGE。</li></ol><p>注意：</p><blockquote><p>1、以上SEND_OK、COMMIT_MESSAGE、ROLLBACK_MESSAGE均是client jar提供的状态，在MQ服务器内部是一个数字<br>2、TransactionCheckListener 是在消息的commit或者rollback消息丢失的情况下才会回调。这种消息丢失只存在于断网或者rocketmq集群挂了的情况下。当rocketmq集群挂了，如果采用异步刷盘，存在1s内数据丢失风险，异步刷盘场景下保障事务没有意义。所以如果要核心业务用Rocketmq解决分布式事务问题，建议选择同步刷盘模式。</p></blockquote><h4 id="多方事务"><a href="#多方事务" class="headerlink" title="多方事务"></a>多方事务</h4><blockquote><p>原理：引入TCC模式思想（Try-Confirm-Cancel）</p></blockquote><p>以交易系统为例：</p><ol><li>交易系统创建订单（往DB插入一条记录），同时发送订单创建消息。通过RocketMq事务性消息保证一致性</li><li>接着执行完成订单所需的同步核心RPC服务（非核心的系统通过监听MQ消息自行处理，处理结果不会影响交易状态）。执行成功更改订单状态，同时发送MQ消息。</li><li>交易系统接受自己发送的订单创建消息，通过定时调度系统创建延时回滚任务（或者使用RocketMq的重试功能，设置第二次发送时间为定时任务的延迟创建时间。在非消息堵塞的情况下，消息第一次到达延迟为1ms左右，这时可能RPC还未执行完，订单状态还未设置为完成，第二次消费时间可以指定）。延迟任务先通过查询订单状态判断订单是否完成，完成则不创建回滚任务，否则创建。</li><li>注意：多个RPC可以创建一个回滚任务，通过一个消费组接受一次消息就可以；也可以通过创建多个消费组，一个消息消费多次，每次消费创建一个RPC的回滚任务。 回滚任务失败，通过MQ的重发来重试。</li></ol><h3 id="顺序消息"><a href="#顺序消息" class="headerlink" title="顺序消息"></a>顺序消息</h3><h4 id="顺序消息的缺陷"><a href="#顺序消息的缺陷" class="headerlink" title="顺序消息的缺陷"></a>顺序消息的缺陷</h4><p>发送顺序消息无法利用集群Fail Over特性消费顺序消息的并行度依赖于队列数量队列热点问题，个别队列由于哈希不均导致消息过多，消费速度跟不上，产生消息堆积问题遇到消息失败的消息，无法跳过，当前队列消费暂停。</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>produce在发送消息的时候，把消息发到同一个队列（queue）中,消费者注册消息监听器为MessageListenerOrderly，这样就可以保证消费端只有一个线程去消费消息。</p><p>注意：把消息发到同一个队列（queue），不是同一个topic，默认情况下一个topic包括4个queue</p><h4 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h4><p>可以通过实现发送消息的对列选择器方法，实现部分顺序消息。</p><p>举例：比如一个数据库通过MQ来同步，只需要保证每个表的数据是同步的就可以。解析binlog，将表名作为对列选择器的参数，这样就可以保证每个表的数据到同一个对列里面，从而保证表数据的顺序消费</p><h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h3><h4 id="Producer"><a href="#Producer" class="headerlink" title="Producer"></a>Producer</h4><ol><li>Topic<ul><li>一个应用尽可能用一个Topic，消息子类型用tags来标识，tags可以由应用自由设置。只有发送消息设置了tags，消费方在订阅消息时，才可以利用tags 在broker做消息过滤。</li></ul></li><li>key<ul><li>每个消息在业务层面的唯一标识码，要设置到 keys 字段，方便将来定位消息丢失问题。服务器会为每个消息创建索引(哈希索引)，应用可以通过 topic，key来查询这条消息内容，以及消息被谁消费。由于是哈希索引，请务必保证key 尽可能唯一，这样可以避免潜在的哈希冲突。</li></ul></li></ol><blockquote><p>例如：订单Id  String orderId= “20034568923546”;  message.setKeys(orderId);</p></blockquote><ol start="3"><li>日志<ul><li>消息发送成功或者失败，要打印消息日志，务必要打印 send result 和key 字段。</li></ul></li><li>send<ul><li>send消息方法，只要不抛异常，就代表发送成功。但是发送成功会有多个状态，在sendResult里定义。</li></ul></li></ol><blockquote><p>SEND_OK：消息发送成功</p><p>FLUSH_DISK_TIMEOUT：消息发送成功，但是服务器刷盘超时，消息已经进入服务器队列，只有此时服务器宕机，消息才会丢失</p><p>FLUSH_SLAVE_TIMEOUT：消息发送成功，但是服务器同步到Slave时超时，消息已经进入服务器队列，只有此时服务器宕机，消息才会丢失</p><p>SLAVE_NOT_AVAILABLE：消息发送成功，但是此时slave不可用，消息已经进入服务器队列，只有此时服务器宕机，消息才会丢失</p></blockquote><h4 id="Consumer"><a href="#Consumer" class="headerlink" title="Consumer"></a>Consumer</h4><ol><li>幂等<ul><li>RocketMQ使用的消息原语是At Least Once，所以consumer可能多次收到同一个消息，此时务必做好幂等。</li></ul></li><li>日志<ul><li>消费时记录日志，以便后续定位问题。</li></ul></li><li>批量消费<ul><li>尽量使用批量方式消费方式，可以很大程度上提高消费吞吐量。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> RocketMQ </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
